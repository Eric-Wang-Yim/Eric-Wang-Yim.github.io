<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>排序算法</title>
    <link href="/2024/06/18/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <url>/2024/06/18/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1>排序算法</h1><h2 id="1-冒泡排序">1.冒泡排序</h2><h3 id="最基本冒泡排序">最基本冒泡排序</h3><p>双重循环，第一层循环控制循环几次，第二层循环从左到右查看是否需要交换数字，第二层循环每次都从数组最左侧开始，右侧边界每次少1个因为每经历一次第二层循环都会确定出一个最大的数放在右边界因此可以少比较一个。</p><h3 id="设置标志位提前结束">设置标志位提前结束</h3><p>在最基本的冒泡排序基础上，设置标志位，以查看上一轮循环是否交换了数据，如果上一轮循环没有交换数据那就说明已经排序完成，可以直接结束循环。</p><h3 id="设置结束边界">设置结束边界</h3><p>在最基本的冒泡排序基础上，记录上一轮交换什么时候结束的，下一轮交换进行到上一轮结束边界。</p><h3 id="双向冒泡排序">双向冒泡排序</h3><p>鸡尾酒排序法，每轮循环分两个部分，第一个部分从左到右交换，第二个部分从右到左交换，提高效率。可以在双向冒泡排序的基础上增加标志位和结束边界。</p><h2 id="2-选择排序">2.选择排序</h2><p>循环遍历，从第一个开始找，找到最小的数与第一个交换；再从第二个开始找，找到最小的与第二个交换。</p><p>不断的选择剩余元素中最小的那个。</p><h2 id="3-插入排序">3.插入排序</h2><p>类似于打牌，将当前牌插进已有的有序的牌堆中，插入后要将当前牌之后的所有牌都右移</p><h2 id="1310：车厢重组">1310：车厢重组</h2><h3 id="【题目描述】">【题目描述】</h3><p>在一个旧式的火车站旁边有一座桥，其桥面可以绕河中心的桥墩水平旋转。一个车站的职工发现桥的长度最多能容纳两节车厢，如果将桥旋转180度，则可以把相邻两节车厢的位置交换，用这种方法可以重新排列车厢的顺序。于是他就负责用这座桥将进站的车厢按车厢号从小到大排列。他退休后，火车站决定将这一工作自动化，其中一项重要的工作是编一个程序，输入初始的车厢顺序，计算最少用多少步就能将车厢排序。</p><h3 id="【输入】">【输入】</h3><p>有两行数据，第一行是车厢总数N（不大于10000），第二行是N个不同的数表示初始的车厢顺序。</p><h3 id="【输出】">【输出】</h3><p>一个数据，是最少的旋转次数。</p><h3 id="【输入样例】">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">4 </span><span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><p>本质上是冒泡排序，一次换两个位置</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs excel">#include&lt;iostream&gt;<br>using namespace std;<br><span class="hljs-built_in">int</span> main()&#123;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>,a[<span class="hljs-number">10000</span>],<span class="hljs-built_in">sum</span>=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;<span class="hljs-built_in">n</span>;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)<br>        cin&gt;&gt;a[i];<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)&#123;<br>        for(<span class="hljs-built_in">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-built_in">n</span>-i-<span class="hljs-number">1</span>;j++)&#123;<br>            <span class="hljs-built_in">if</span>(a[j] &gt; a[j+<span class="hljs-number">1</span>])&#123;<br>                <span class="hljs-built_in">int</span> tmp = a[j];<br>                a[j] = a[j+<span class="hljs-number">1</span>];<br>                a[j+<span class="hljs-number">1</span>] = tmp;<br>                <span class="hljs-built_in">sum</span>++;<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-built_in">sum</span>;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1311：求逆序对">1311：求逆序对</h2><h3 id="【题目描述】-2">【题目描述】</h3><p>给定一个序列a1,a2,…,an，如果存在i&lt;j并且ai&gt;aj，那么我们称之为逆序对，求逆序对的数目。</p><h3 id="【输入】-2">【输入】</h3><p>第一行为n,表示序列长度，接下来的n行，第i+1行表示序列中的第i个数。</p><h3 id="【输出】-2">【输出】</h3><p>所有逆序对总数。</p><h3 id="【输入样例】-2">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">3 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">3 </span><br><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-2">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><h3 id="【提示】">【提示】</h3><p>N≤10^5，Ai≤10^5。</p><p>从小到大进行比较</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="1176：谁考了第k名">1176：谁考了第k名</h2><h3 id="【题目描述】-3">【题目描述】</h3><p>在一次考试中，每个学生的成绩都不相同，现知道了每个学生的学号和成绩，求考第k名学生的学号和成绩。</p><h3 id="【输入】-3">【输入】</h3><p>第一行有两个整数，分别是学生的人数n（1≤n≤100），和求第k名学生的k（1≤k≤n）。</p><p>其后有n行数据，每行包括一个学号（整数）和一个成绩（浮点数），中间用一个空格分隔。</p><h3 id="【输出】-3">【输出】</h3><p>输出第k名学生的学号和成绩，中间用空格分隔。（注：请用%g输出成绩）</p><h3 id="【输入样例】-3">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><span class="hljs-number">3</span> <br><span class="hljs-symbol">90788001 </span><span class="hljs-number">67.8</span> <br><span class="hljs-symbol">90788002 </span><span class="hljs-number">90.3</span> <br><span class="hljs-symbol">90788003 </span><span class="hljs-number">61</span> <br><span class="hljs-symbol">90788004 </span><span class="hljs-number">68.4</span> <br><span class="hljs-symbol">90788005 </span><span class="hljs-number">73.9</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-3">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">90788004 </span><span class="hljs-number">68.4</span><br></code></pre></td></tr></table></figure><p>使用插入排序，每次找到最大的那个，放到首位，然后找3次即可</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,k;<br>cin&gt;&gt;n&gt;&gt;k;<br><span class="hljs-type">int</span> num[<span class="hljs-number">101</span>];<br><span class="hljs-type">double</span> score[<span class="hljs-number">101</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>cin&gt;&gt;num[i]&gt;&gt;score[i];<br><span class="hljs-comment">//插入排序，每次找最大的，找k次</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i =<span class="hljs-number">0</span>;i&lt;k;i++)&#123;<br><span class="hljs-type">int</span> max=i;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br><span class="hljs-keyword">if</span>(score[max]&lt;score[j])&#123;<br>max = j;<br>&#125;<br>&#125;<br><span class="hljs-type">double</span> tmp = score[max];<br>score[max] = score[i];<br>score[i] = tmp;<br><span class="hljs-type">int</span> s = num[max];<br>num[max] = num[i];<br>num[i] = s;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %g&quot;</span>,num[k<span class="hljs-number">-1</span>],score[k<span class="hljs-number">-1</span>]);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1177：奇数单增序列">1177：奇数单增序列</h2><h3 id="【题目描述】-4">【题目描述】</h3><p>给定一个长度为N（不大于500）的正整数序列，请将其中的所有奇数取出，并按升序输出。</p><h3 id="【输入】-4">【输入】</h3><p>第1行为 N；</p><p>第2行为 N 个正整数，其间用空格间隔。</p><h3 id="【输出】-4">【输出】</h3><p>增序输出的奇数序列，数据之间以逗号间隔。数据保证至少有一个奇数。</p><h3 id="【输入样例】-4">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><br><span class="hljs-symbol">1 </span><span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">9</span> <span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-4">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><p>类似于从牌堆里摸牌，摸到奇数然后插入进奇数牌堆里，这种需要在一个大循环中，嵌套一个小循环找奇数堆里的位置，找到之后还需要对奇数堆向右移动，最差的情况下，奇数是从大到小插入进去的，找奇数位置和右移会导致时间复杂度为O(n^3)。</p><p>先找出所有奇数，再冒泡排序，时间复杂度为O(n^2)</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs excel">#include&lt;iostream&gt;<br>using namespace std;<br><span class="hljs-built_in">int</span> main()&#123;<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>;<br>cin&gt;&gt;<span class="hljs-built_in">n</span>;<br><span class="hljs-built_in">int</span> num[<span class="hljs-number">500</span>];<br>for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)<br>cin&gt;&gt;num[i];<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">len</span>=<span class="hljs-number">0</span>,<span class="hljs-built_in">odd</span>[<span class="hljs-number">500</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>for(<span class="hljs-built_in">int</span> i =<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)&#123;<br><span class="hljs-built_in">if</span>(num[i]%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>)<br>            <span class="hljs-built_in">odd</span>[<span class="hljs-built_in">len</span>++] = num[i];<br>&#125;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">len</span>;i++)&#123;<br>        for(<span class="hljs-built_in">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-built_in">len</span>-i-<span class="hljs-number">1</span>;j++)&#123;<br>            <span class="hljs-built_in">if</span>(<span class="hljs-built_in">odd</span>[j]&gt;<span class="hljs-built_in">odd</span>[j+<span class="hljs-number">1</span>])&#123;<br>                <span class="hljs-built_in">int</span> tmp = <span class="hljs-built_in">odd</span>[j];<br>                <span class="hljs-built_in">odd</span>[j] = <span class="hljs-built_in">odd</span>[j+<span class="hljs-number">1</span>];<br>                <span class="hljs-built_in">odd</span>[j+<span class="hljs-number">1</span>] = tmp;<br>            &#125;<br>        &#125;<br>    &#125;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">len</span>;i++)&#123;<br>        <span class="hljs-built_in">if</span>(i==<span class="hljs-number">0</span>)<br>            cout&lt;&lt;<span class="hljs-built_in">odd</span>[i];<br>        else&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;,&quot;</span>&lt;&lt;<span class="hljs-built_in">odd</span>[i];<br>        &#125;<br>    &#125;<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1178：成绩排序">1178：成绩排序</h2><h3 id="【题目描述】-5">【题目描述】</h3><p>给出班里某门课程的成绩单，请你按成绩从高到低对成绩单排序输出，如果有相同分数则名字字典序小的在前。</p><h3 id="【输入】-5">【输入】</h3><p>第一行为n (0 &lt; n &lt; 20)，表示班里的学生数目；</p><p>接下来的n行，每行为每个学生的名字和他的成绩, 中间用单个空格隔开。名字只包含字母且长度不超过20，成绩为一个不大于100的非负整数。</p><h3 id="【输出】-5">【输出】</h3><p>把成绩单按分数从高到低的顺序进行排序并输出，每行包含名字和分数两项，之间有一个空格。</p><h3 id="【输入样例】-5">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">4</span> <br><span class="hljs-attribute">Kitty</span> <span class="hljs-number">80</span> <br><span class="hljs-attribute">Hanmeimei</span> <span class="hljs-number">90</span> <br><span class="hljs-attribute">Joey</span> <span class="hljs-number">92</span> <br><span class="hljs-attribute">Tim</span> <span class="hljs-number">28</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-5">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Joey</span> <span class="hljs-number">92</span> <br><span class="hljs-attribute">Hanmeimei</span> <span class="hljs-number">90</span>  <br><span class="hljs-attribute">Kitty</span> <span class="hljs-number">80</span> <br><span class="hljs-attribute">Tim</span> <span class="hljs-number">28</span><br></code></pre></td></tr></table></figure><p>使用选择排序，每次选择第i个作为最大值，判断之后的成绩是否比他大，成绩一样大的时候判断字典序，使用string自带的重载运算符&lt;比较字符串的大小，最后找到最大值放到第i个。</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sqf"><span class="hljs-meta">#<span class="hljs-keyword">include</span>&lt;iostream&gt;</span><br>using namespace std;<br>int main()&#123;<br>    int n;<br>    cin&gt;&gt;n;<br>    int <span class="hljs-built_in">score</span>[<span class="hljs-number">20</span>];<br>    string <span class="hljs-built_in">name</span>[<span class="hljs-number">20</span>];<br>    <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        cin&gt;&gt;<span class="hljs-built_in">name</span>[i]&gt;&gt;<span class="hljs-built_in">score</span>[i];<br>    <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        int <span class="hljs-built_in">max</span> = i;<br>        <span class="hljs-keyword">for</span>(int j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">score</span>[<span class="hljs-built_in">max</span>]&lt;<span class="hljs-built_in">score</span>[j])&#123;<br>                <span class="hljs-built_in">max</span> = j;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">score</span>[<span class="hljs-built_in">max</span>]==<span class="hljs-built_in">score</span>[j] &amp;&amp; <span class="hljs-built_in">name</span>[j]&lt;<span class="hljs-built_in">name</span>[<span class="hljs-built_in">max</span>])&#123;<br>                <span class="hljs-built_in">max</span> = j;<br>            &#125;<br>        &#125;<br>        int tmp = <span class="hljs-built_in">score</span>[<span class="hljs-built_in">max</span>];<br>        <span class="hljs-built_in">score</span>[<span class="hljs-built_in">max</span>] = <span class="hljs-built_in">score</span>[i];<br>        <span class="hljs-built_in">score</span>[i] = tmp;<br>        string stmp = <span class="hljs-built_in">name</span>[<span class="hljs-built_in">max</span>];<br>        <span class="hljs-built_in">name</span>[<span class="hljs-built_in">max</span>] = <span class="hljs-built_in">name</span>[i];<br>        <span class="hljs-built_in">name</span>[i] = stmp;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        cout&lt;&lt;<span class="hljs-built_in">name</span>[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;<span class="hljs-built_in">score</span>[i]&lt;&lt;<span class="hljs-literal">endl</span>;<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1179：奖学金">1179：奖学金</h2><h3 id="【题目描述】-6">【题目描述】</h3><p>某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前55名学生发奖学金。期末，每个学生都有33门课的成绩:语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。</p><p>任务：先根据输入的33门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名名学生的学号和总分。注意，在前55名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分) 是:</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">7 </span><span class="hljs-number">279</span><br><span class="hljs-symbol">5 </span><span class="hljs-number">279</span><br></code></pre></td></tr></table></figure><p>这两行数据的含义是:总分最高的两个同学的学号依次是77号、55号。这两名同学的总分都是 279279 (总分等于输入的语文、数学、英语三科成绩之和) ，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是:</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><span class="hljs-number">279</span><br><span class="hljs-symbol">7 </span><span class="hljs-number">279</span><br></code></pre></td></tr></table></figure><p>则按输出错误处理，不能得分。</p><h3 id="【输入】-6">【输入】</h3><p>包含n+1行:</p><p>第1行为一个正整数n（小于300），表示该校参加评选的学生人数。</p><p>第2到n+1行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为 j−1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1∼n(恰好是输入数据的行号减1)。</p><h3 id="【输出】-6">【输出】</h3><p>共有5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。</p><h3 id="【输入样例】-6">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><br><span class="hljs-symbol">90 </span><span class="hljs-number">67</span> <span class="hljs-number">80</span> <br><span class="hljs-symbol">87 </span><span class="hljs-number">66</span> <span class="hljs-number">91</span> <br><span class="hljs-symbol">78 </span><span class="hljs-number">89</span> <span class="hljs-number">91</span> <br><span class="hljs-symbol">88 </span><span class="hljs-number">99</span> <span class="hljs-number">77</span> <br><span class="hljs-symbol">67 </span><span class="hljs-number">89</span> <span class="hljs-number">64</span> <br><span class="hljs-symbol">78 </span><span class="hljs-number">89</span> <span class="hljs-number">98</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-6">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><span class="hljs-number">265</span> <br><span class="hljs-symbol">4 </span><span class="hljs-number">264</span> <br><span class="hljs-symbol">3 </span><span class="hljs-number">258</span> <br><span class="hljs-symbol">2 </span><span class="hljs-number">244</span> <br><span class="hljs-symbol">1 </span><span class="hljs-number">237</span> <br></code></pre></td></tr></table></figure><h3 id="【提示】-2">【提示】</h3><p>样例输入#2：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">8</span><br><span class="hljs-symbol">80 </span><span class="hljs-number">89</span> <span class="hljs-number">89</span> <br><span class="hljs-symbol">88 </span><span class="hljs-number">98</span> <span class="hljs-number">78</span><br><span class="hljs-symbol">90 </span><span class="hljs-number">67</span> <span class="hljs-number">80</span><br><span class="hljs-symbol">87 </span><span class="hljs-number">66</span> <span class="hljs-number">91</span><br><span class="hljs-symbol">78 </span><span class="hljs-number">89</span> <span class="hljs-number">91</span><br><span class="hljs-symbol">88 </span><span class="hljs-number">99</span> <span class="hljs-number">77</span><br><span class="hljs-symbol">67 </span><span class="hljs-number">89</span> <span class="hljs-number">64</span><br><span class="hljs-symbol">78 </span><span class="hljs-number">89</span> <span class="hljs-number">98</span><br></code></pre></td></tr></table></figure><p>样例输出#2：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">8 </span><span class="hljs-number">265</span><br><span class="hljs-symbol">2 </span><span class="hljs-number">264</span><br><span class="hljs-symbol">6 </span><span class="hljs-number">264</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">258</span><br><span class="hljs-symbol">5 </span><span class="hljs-number">258</span><br></code></pre></td></tr></table></figure><p>与上一题类似，选择排序，然后对总成绩判断-&gt;对语文成绩判断-&gt;对学号判断，选择5次找到最好的5个人就可以了</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include&lt;iostream&gt;<br>using namespace std;<br>int main()&#123;<br>    int n;<br>    cin&gt;&gt;n;<br>    int num[<span class="hljs-number">300</span>],chinese[<span class="hljs-number">300</span>],math,english,score[<span class="hljs-number">300</span>];<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;chinese[i]&gt;&gt;math&gt;&gt;english;<br>        score[i] = chinese[i]+math+english;<br>        num[i] = i;<br>    &#125;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>        int max = i;<br>        for(int j=i+<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            if(score[max] &lt; score[j])<br>                max = j;<br>            else if(score[max]==score[j] &amp;&amp; chinese[max]&lt;chinese[j])<br>                max = j;<br>            else if(score[max]==score[j] &amp;&amp; chinese[max]==chinese[j] &amp;&amp; num[max]&gt;num[j])<br>                max = j;<br>        &#125;<br>        int tmp = score[max];<br>        score[max] = score[i];<br>        score[i] = tmp;<br>        tmp = num[max];<br>        num[max] = num[i];<br>        num[i] = tmp;<br>    &#125;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)<br>        cout&lt;&lt;num[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;score[i]&lt;&lt;endl;<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1180：分数线划定">1180：分数线划定</h2><h3 id="【题目描述】-7">【题目描述】</h3><p>世博会志愿者的选拔工作正在 A 市如火如荼的进行。为了选拔最合适的人才，A市对所有报名的选手进行了笔试，笔试分数达到面试分数线的选手方可进入面试。面试分数线根据计划录取人数的150%150%划定，即如果计划录取m𝑚名志愿者，则面试分数线为排名第m×150%𝑚×150%（向下取整）名的选手的分数，而最终进入面试的选手为笔试成绩不低于面试分数线的所有选手。</p><p>现在就请你编写程序划定面试分数线，并输出所有进入面试的选手的报名号和笔试成绩。</p><h3 id="【输入】-7">【输入】</h3><p>第一行，两个整数n，m（5≤n≤5000，3≤m≤n），中间用一个空格隔开，其中n 表示报名参加笔试的选手总数，m表示计划录取的志愿者人数。输入数据保证m×150%<strong>向下取整</strong>后小于等于n。</p><p>第二行到第 n+1 行，每行包括两个整数，中间用一个空格隔开，分别是选手的报名号k（1000≤k≤9999）和该选手的笔试成绩s（1≤s≤100）。数据保证选手的报名号各不相同。</p><h3 id="【输出】-7">【输出】</h3><p>第一行，有两个整数，用一个空格隔开，第一个整数表示面试分数线；第二个整数为进入面试的选手的实际人数。</p><p>从第二行开始，每行包含两个整数，中间用一个空格隔开，分别表示进入面试的选手的报名号和笔试成绩，按照笔试成绩从高到低输出，如果成绩相同，则按报名号由小到大的顺序输出。</p><h3 id="【输入样例】-7">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><span class="hljs-number">3</span> <br><span class="hljs-symbol">1000 </span><span class="hljs-number">90</span> <br><span class="hljs-symbol">3239 </span><span class="hljs-number">88</span> <br><span class="hljs-symbol">2390 </span><span class="hljs-number">95</span> <br><span class="hljs-symbol">7231 </span><span class="hljs-number">84</span> <br><span class="hljs-symbol">1005 </span><span class="hljs-number">95</span> <br><span class="hljs-symbol">1001 </span><span class="hljs-number">88</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-7">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">88 </span><span class="hljs-number">5</span> <br><span class="hljs-symbol">1005 </span><span class="hljs-number">95</span> <br><span class="hljs-symbol">2390 </span><span class="hljs-number">95</span> <br><span class="hljs-symbol">1000 </span><span class="hljs-number">90</span> <br><span class="hljs-symbol">1001 </span><span class="hljs-number">88</span> <br><span class="hljs-symbol">3239 </span><span class="hljs-number">88</span> <br></code></pre></td></tr></table></figure><h3 id="【提示】-3">【提示】</h3><p>样例说明：m×150%=3×150%=4.5，向下取整后为4。保证4个人进入面试的分数线为88，但因为88有重分，所以所有成绩大于等于88的选手都可以进入面试，故最终有5个人进入面试。</p><p>使用选择排序，先找到分数线位置m-1的分数大小，后面再继续选择排序，一旦在划定分数线之后的人，判断选到最大值的人的分数是否小于分数线，如果小于退出循环，如果不小于继续找刚好是分数线的人。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-type">int</span> num[<span class="hljs-number">5001</span>],score[<span class="hljs-number">5001</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;num[i]&gt;&gt;score[i];<br>    &#125;<br>    <span class="hljs-comment">//找到分数线同学</span><br>    m = <span class="hljs-built_in">floor</span>(m*<span class="hljs-number">1.5</span>);<br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-type">int</span> max = i;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(score[max] &lt; score[j])<br>                max = j;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score[max]==score[j] &amp;&amp; num[max]&gt;num[j])<br>                max = j;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(i&gt;=m &amp;&amp; score[max]&lt;score[m<span class="hljs-number">-1</span>])<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-type">int</span> tmp = score[max];<br>        score[max] = score[i];<br>        score[i] = tmp;<br>        tmp = num[max];<br>        num[max] = num[i];<br>        num[i] = tmp;<br>        sum++;<br>    &#125;<br>    <span class="hljs-comment">//与分数线相同的都挑出来</span><br>    cout&lt;&lt;score[m<span class="hljs-number">-1</span>]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;sum&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;sum;i++)<br>        cout&lt;&lt;num[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;score[i]&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1181：整数奇偶排序">1181：整数奇偶排序</h2><h3 id="【题目描述】-8">【题目描述】</h3><p>给定10个整数的序列，要求对其重新排序。排序要求:</p><p>1.奇数在前，偶数在后；</p><p>2.奇数按从大到小排序；</p><p>3.偶数按从小到大排序。</p><h3 id="【输入】-8">【输入】</h3><p>输入一行，包含10个整数，彼此以一个空格分开，每个整数的范围是大于等于0，小于等于30000。</p><h3 id="【输出】-8">【输出】</h3><p>按照要求排序后输出一行，包含排序后的10个整数，数与数之间以一个空格分开。</p><h3 id="【输入样例】-8">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><span class="hljs-number">7</span> <span class="hljs-number">3</span> <span class="hljs-number">13</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">0</span> <span class="hljs-number">47</span> <span class="hljs-number">34</span> <span class="hljs-number">98</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-8">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">47 </span><span class="hljs-number">13</span> <span class="hljs-number">11</span> <span class="hljs-number">7</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">12</span> <span class="hljs-number">34</span> <span class="hljs-number">98</span><br></code></pre></td></tr></table></figure><p>将奇数设为0偶数设为最大30001，因为奇数从大到小排列，偶数从小到大排列，循环遍历10个数，找到偶数时先找到他应该插到哪个位置，将待插入部分之后右移，将该数插入，偶数项数量增加。奇数项同理</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-meta">#include&lt;cmath&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br><span class="hljs-type">int</span> main()&#123;<br>    <span class="hljs-type">int</span> num[<span class="hljs-number">11</span>],odd[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">0</span>&#125;,even[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">30001</span>&#125;;<br>    <span class="hljs-type">int</span> len_odd=<span class="hljs-number">0</span>,len_even=<span class="hljs-number">0</span>,k=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(cin&gt;&gt;num[k++])&#123;<br>        <span class="hljs-keyword">if</span>(cin.<span class="hljs-keyword">get</span>()==<span class="hljs-string">&#x27;\n&#x27;</span>)<br>            break;                    <br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(num[i]%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-keyword">index</span>=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;len_even;j++)&#123;<br>                <span class="hljs-keyword">if</span>(num[i]&lt;even[j])&#123;<br>                    <span class="hljs-keyword">index</span> = j;<br>                    break;<br>                &#125;<br>                <span class="hljs-keyword">else</span>    <br>                    <span class="hljs-keyword">index</span>++;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=len_even<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-keyword">index</span>;j<span class="hljs-comment">--)</span><br>                even[j+<span class="hljs-number">1</span>] = even[j];<br>            even[<span class="hljs-keyword">index</span>] = num[i];<br>            len_even++;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-keyword">index</span>=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;len_odd;j++)&#123;<br>                <span class="hljs-keyword">if</span>(num[i]&gt;odd[j])&#123;<br>                    <span class="hljs-keyword">index</span> = j;<br>                    break;<br>                &#125;<br>                <span class="hljs-keyword">else</span>  <br>                    <span class="hljs-keyword">index</span>++;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=len_odd<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-keyword">index</span>;j<span class="hljs-comment">--)</span><br>                odd[j+<span class="hljs-number">1</span>] = odd[j];<br>            odd[<span class="hljs-keyword">index</span>] = num[i];<br>            len_odd++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len_odd;i++)<br>        cout&lt;&lt;odd[i]&lt;&lt;&quot; &quot;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len_even;i++)<br>        cout&lt;&lt;even[i]&lt;&lt;&quot; &quot;;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1182：合影效果">1182：合影效果</h2><h3 id="【题目描述】-9">【题目描述】</h3><p>小云和朋友们去爬香山，为美丽的景色所陶醉，想合影留念。如果他们站成一排，男生全部在左（从拍照者的角度），并按照从矮到高的顺序从左到右排，女生全部在右，并按照从高到矮的顺序从左到右排，请问他们合影的效果是什么样的（所有人的身高都不同）？</p><h3 id="【输入】-9">【输入】</h3><p>第一行是人数n𝑛（2≤n≤40，且至少有1个男生和1个女生）。</p><p>后面紧跟n行，每行输入一个人的性别（男<code>male</code>或女<code>female</code>）和身高（浮点数，单位米），两个数据之间以空格分隔。</p><h3 id="【输出】-9">【输出】</h3><p>n个浮点数，模拟站好队后，拍照者眼中从左到右每个人的身高。每个浮点数需保留到小数点后2位，相邻两个数之间用单个空格隔开。</p><h3 id="【输入样例】-9">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span> <br><span class="hljs-attribute">male</span> <span class="hljs-number">1</span>.<span class="hljs-number">72</span> <br><span class="hljs-attribute">male</span> <span class="hljs-number">1</span>.<span class="hljs-number">78</span> <br><span class="hljs-attribute">female</span> <span class="hljs-number">1</span>.<span class="hljs-number">61</span> <br><span class="hljs-attribute">male</span> <span class="hljs-number">1</span>.<span class="hljs-number">65</span> <br><span class="hljs-attribute">female</span> <span class="hljs-number">1</span>.<span class="hljs-number">70</span> <br><span class="hljs-attribute">female</span> <span class="hljs-number">1</span>.<span class="hljs-number">56</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-9">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.<span class="hljs-number">65</span> <span class="hljs-number">1</span>.<span class="hljs-number">72</span> <span class="hljs-number">1</span>.<span class="hljs-number">78</span> <span class="hljs-number">1</span>.<span class="hljs-number">70</span> <span class="hljs-number">1</span>.<span class="hljs-number">61</span> <span class="hljs-number">1</span>.<span class="hljs-number">56</span><br></code></pre></td></tr></table></figure><p>与奇偶数类似，判断性别分别进行插入排序</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,len_male=<span class="hljs-number">0</span>,len_female=<span class="hljs-number">0</span>;<br>    string gender[<span class="hljs-number">41</span>];<br>    <span class="hljs-type">double</span> male[<span class="hljs-number">41</span>]=&#123;<span class="hljs-number">3.0</span>&#125;,female[<span class="hljs-number">41</span>]=&#123;<span class="hljs-number">0.0</span>&#125;,height[<span class="hljs-number">41</span>];<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        cin&gt;&gt;gender[i]&gt;&gt;height[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(gender[i]==<span class="hljs-string">&quot;male&quot;</span>)&#123;<br>            <span class="hljs-type">int</span> index=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;len_male;j++)&#123;<br>                <span class="hljs-keyword">if</span>(height[i]&lt;male[j])&#123;<br>                    index = j;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span>    <br>                    index++;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=len_male<span class="hljs-number">-1</span>;j&gt;=index;j--)<br>                male[j+<span class="hljs-number">1</span>] = male[j];<br>            male[index] = height[i];<br>            len_male++;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-type">int</span> index=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;len_female;j++)&#123;<br>                <span class="hljs-keyword">if</span>(height[i]&gt;female[j])&#123;<br>                    index = j;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span>  <br>                    index++;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=len_female<span class="hljs-number">-1</span>;j&gt;=index;j--)<br>                female[j+<span class="hljs-number">1</span>] = female[j];<br>            female[index] = height[i];<br>            len_female++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len_male;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f%c&quot;</span>,male[i],<span class="hljs-string">&#x27; &#x27;</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len_female;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f%c&quot;</span>,female[i],<span class="hljs-string">&#x27; &#x27;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1183：病人排队">1183：病人排队</h2><h3 id="【题目描述】-10">【题目描述】</h3><p>病人登记看病，编写一个程序，将登记的病人按照以下原则排出看病的先后顺序：</p><p>1.老年人（年龄 ≥60岁）比非老年人优先看病。</p><p>2.老年人按年龄从大到小的顺序看病，年龄相同的按登记的先后顺序排序。</p><p>3.非老年人按登记的先后顺序看病。</p><h3 id="【输入】-10">【输入】</h3><p>第1行，输入一个小于100的正整数，表示病人的个数；</p><p>后面按照病人登记的先后顺序，每行输入一个病人的信息，包括：一个长度小于10的字符串表示病人的ID（每个病人的ID各不相同且只含数字和字母），一个整数表示病人的年龄，中间用单个空格隔开。</p><h3 id="【输出】-10">【输出】</h3><p>按排好的看病顺序输出病人的ID，每行一个。</p><h3 id="【输入样例】-10">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">021075 </span><span class="hljs-number">40</span> <br><span class="hljs-symbol">004003 </span><span class="hljs-number">15</span> <br><span class="hljs-symbol">010158 </span><span class="hljs-number">67</span> <br><span class="hljs-symbol">021033 </span><span class="hljs-number">75</span> <br><span class="hljs-symbol">102012 </span><span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-10">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">021033 </span><br><span class="hljs-symbol">010158 </span><br><span class="hljs-symbol">021075 </span><br><span class="hljs-symbol">004003 </span><br><span class="hljs-number">102012</span><br></code></pre></td></tr></table></figure><p>使用插入排序，对年龄进行判断，是老年人从大到小排序，对非老年人直接加入序列中</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs excel">#include&lt;iostream&gt;<br>using namespace std;<br><span class="hljs-built_in">int</span> main()&#123;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>,age[<span class="hljs-number">100</span>],sort_age[<span class="hljs-number">100</span>]=&#123;<span class="hljs-number">200</span>&#125;,<span class="hljs-built_in">len</span>=<span class="hljs-number">0</span>;<br>    string num[<span class="hljs-number">100</span>],sort_num[<span class="hljs-number">100</span>]=&#123;<span class="hljs-string">&quot;0&quot;</span>&#125;;<br>    cin&gt;&gt;<span class="hljs-built_in">n</span>;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)<br>        cin&gt;&gt;num[i]&gt;&gt;age[i];<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)&#123;<br>        <span class="hljs-built_in">if</span>(age[i]&gt;=<span class="hljs-number">60</span>)&#123;<br>            <span class="hljs-built_in">int</span> <span class="hljs-built_in">index</span>=<span class="hljs-number">0</span>;<br>            for(<span class="hljs-built_in">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-built_in">len</span>;j++)&#123;<br>                <span class="hljs-built_in">if</span>(age[i]&gt;sort_age[j])&#123;<br>                    <span class="hljs-built_in">index</span> = j;<br>                    break;<br>                &#125;<br>                else    <br>                    <span class="hljs-built_in">index</span>++;<br>            &#125;<br>            for(<span class="hljs-built_in">int</span> j=<span class="hljs-built_in">len</span>-<span class="hljs-number">1</span>;j&gt;=<span class="hljs-built_in">index</span>;j--)<br>                sort_age[j+<span class="hljs-number">1</span>] = sort_age[j];<br>            sort_age[<span class="hljs-built_in">index</span>] = age[i];<br><br>            for(<span class="hljs-built_in">int</span> j=<span class="hljs-built_in">len</span>-<span class="hljs-number">1</span>;j&gt;=<span class="hljs-built_in">index</span>;j--)<br>                sort_num[j+<span class="hljs-number">1</span>] = sort_num[j];<br>            sort_num[<span class="hljs-built_in">index</span>] = num[i];        <br>            <span class="hljs-built_in">len</span>++;<br>        &#125;<br>        else&#123;<br>            sort_age[<span class="hljs-built_in">len</span>] = age[i];<br>            sort_num[<span class="hljs-built_in">len</span>] = num[i];<br>            <span class="hljs-built_in">len</span>++;<br>        &#125;<br>    &#125;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">len</span>;i++)<br>        cout&lt;&lt;sort_num[i]&lt;&lt;endl;<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1184：明明的随机数">1184：明明的随机数</h2><h3 id="【题目描述】-11">【题目描述】</h3><p>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数（N≤100），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。</p><h3 id="【输入】-11">【输入】</h3><p>有2行，第1行为1个正整数，表示所生成的随机数的个数：N；</p><p>第2行有N个用空格隔开的正整数，为所产生的随机数。</p><h3 id="【输出】-11">【输出】</h3><p>也是2行，第1行为1个正整数M，表示不相同的随机数的个数。第2行为M个用空格隔开的正整数，为从小到大排好序的不相同的随机数。</p><h3 id="【输入样例】-11">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><br><span class="hljs-symbol">20 </span><span class="hljs-number">40</span> <span class="hljs-number">32</span> <span class="hljs-number">67</span> <span class="hljs-number">40</span> <span class="hljs-number">20</span> <span class="hljs-number">89</span> <span class="hljs-number">300</span> <span class="hljs-number">400</span> <span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-11">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">8 </span><br><span class="hljs-symbol">15 </span><span class="hljs-number">20</span> <span class="hljs-number">32</span> <span class="hljs-number">40</span> <span class="hljs-number">67</span> <span class="hljs-number">89</span> <span class="hljs-number">300</span> <span class="hljs-number">400</span><br></code></pre></td></tr></table></figure><p>去重：从左到右依次遍历，有相同的数将其置为0，下次就不会再找到他了。</p><p>排序：选择排序</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs excel">#include&lt;iostream&gt;<br>using namespace std;<br><span class="hljs-built_in">int</span> main()&#123;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>,num[<span class="hljs-number">101</span>],num_n[<span class="hljs-number">101</span>],<span class="hljs-built_in">len</span>=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;<span class="hljs-built_in">n</span>;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)<br>        cin&gt;&gt;num[i];<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">n</span>;i++)&#123;<br>        <span class="hljs-built_in">if</span>(num[i]==<span class="hljs-number">0</span>)<br>            continue;<br>        for(<span class="hljs-built_in">int</span> j=i+<span class="hljs-number">1</span>;j&lt;<span class="hljs-built_in">n</span>;j++)&#123;<br>            <span class="hljs-built_in">if</span>(num[i] == num[j])&#123;<br>                num[j] = <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>        num_n[<span class="hljs-built_in">len</span>++] = num[i];<br>    &#125;<br><br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">len</span>;i++)&#123;<br>        <span class="hljs-built_in">int</span> <span class="hljs-built_in">min</span> = i;<br>        for(<span class="hljs-built_in">int</span> j=i+<span class="hljs-number">1</span>;j&lt;<span class="hljs-built_in">len</span>;j++)&#123;<br>            <span class="hljs-built_in">if</span>(num_n[<span class="hljs-built_in">min</span>] &gt; num_n[j])<br>                <span class="hljs-built_in">min</span> = j;<br>        &#125;<br>        <span class="hljs-built_in">int</span> tmp = num_n[<span class="hljs-built_in">min</span>];<br>        num_n[<span class="hljs-built_in">min</span>] = num_n[i];<br>        num_n[i] = tmp;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-built_in">len</span>&lt;&lt;endl;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">len</span>;i++)<br>        cout&lt;&lt;num_n[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1185：单词排序">1185：单词排序</h2><h3 id="【题目描述】-12">【题目描述】</h3><p>输入一行单词序列，相邻单词之间由1个或多个空格间隔，请按照字典序输出这些单词，要求重复的单词只输出一次。（区分大小写）</p><h3 id="【输入】-12">【输入】</h3><p>一行单词序列，最少1个单词，最多100个单词，每个单词长度不超过50，单词之间用至少1个空格间隔。数据不含除字母、空格外的其他字符。</p><h3 id="【输出】-12">【输出】</h3><p>按字典序输出这些单词，重复的单词只输出一次。</p><h3 id="【输入样例】-12">【输入样例】</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">She  wants  <span class="hljs-keyword">to</span> <span class="hljs-keyword">go</span> <span class="hljs-keyword">to</span> Peking University <span class="hljs-keyword">to</span> study  Chinese<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-12">【输出样例】</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">Chinese <br>Peking <br>She <br>University <br><span class="hljs-keyword">go</span> <br>study <br><span class="hljs-keyword">to</span> <br>wants<br></code></pre></td></tr></table></figure><p>去重加选择排序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> N 105</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>string s[N];<br><span class="hljs-type">int</span> n = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(cin &gt;&gt; s[n])<br>        n++;<br>    n--;<span class="hljs-comment">//最后一次输入的值是EOF，不是有效的值，n应该减1 </span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n<span class="hljs-number">-1</span>; ++i)<span class="hljs-comment">//选择排序 </span><br>   <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = i+<span class="hljs-number">1</span>; j &lt;= n; ++j)<br>       <span class="hljs-keyword">if</span>(s[j] &lt; s[i])<br>           <span class="hljs-built_in">swap</span>(s[j], s[i]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; ++i)<br>    <span class="hljs-keyword">if</span>(s[i] != s[i+<span class="hljs-number">1</span>])<br>            cout &lt;&lt; s[i] &lt;&lt; endl;<br>    cout &lt;&lt; s[n] &lt;&lt; endl; <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>排序部分有点问题</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> len=<span class="hljs-number">0</span>,len_n=<span class="hljs-number">0</span>;<br>    string num[<span class="hljs-number">101</span>],num_n[<span class="hljs-number">101</span>],s;<br>    <span class="hljs-keyword">while</span>(cin&gt;&gt;num[len++])&#123;<br>        <span class="hljs-keyword">if</span>(cin.<span class="hljs-built_in">get</span>()==<span class="hljs-string">&#x27;\n&#x27;</span>)<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len;i++)&#123;<br>        <span class="hljs-keyword">if</span>(num[i]==<span class="hljs-string">&quot;0&quot;</span>)<br>            <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;len;j++)&#123;<br>            <span class="hljs-keyword">if</span>(num[i] == num[j])&#123;<br>                num[j] = <span class="hljs-string">&quot;0&quot;</span>;<br>            &#125;<br>        &#125;<br>        num_n[len_n++] = num[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len_n;i++)&#123;<br>        <span class="hljs-type">int</span> min = i;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;len_n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(num_n[min] &gt; num_n[j])<br>                min = j;<br>        &#125;<br>        string tmp = num_n[min];<br>        num_n[min] = num_n[i];<br>        num_n[i] = tmp;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;len_n;i++)<br>        cout&lt;&lt;num_n[i]&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1186：出现次数超过一半的数">1186：出现次数超过一半的数</h2><h3 id="【题目描述】-13">【题目描述】</h3><p>给出一个含有n（0 &lt; n &lt;= 1000）个整数的数组，请找出其中出现次数超过一半的数。数组中的数大于-50且小于50。</p><h3 id="【输入】-13">【输入】</h3><p>第一行包含一个整数n，表示数组大小；</p><p>第二行包含n个整数，分别是数组中的每个元素，相邻两个元素之间用单个空格隔开。</p><h3 id="【输出】-13">【输出】</h3><p>如果存在这样的数，输出这个数；否则输出no。</p><h3 id="【输入样例】-13">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-13">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><p>先进行选择排序，按照顺序从小到大依次寻找相同的数，从1开始计数，找到不相等的数下一次从这个不相等 的数开始找。中间判断相同的数是否大于一半的值。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,num[<span class="hljs-number">1001</span>];<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)    <br>        cin&gt;&gt;num[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-type">int</span> min = i;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(num[j] &lt; num[min])<br>                min = j;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(min != i)<br>            <span class="hljs-built_in">swap</span>(num[i],num[min]);<br>    &#125;<br>    <span class="hljs-type">int</span> max = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;)&#123;<br>        max = <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(max&gt;n/<span class="hljs-number">2</span>)&#123;<br>                cout&lt;&lt;num[i];<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(num[j] == num[i])<br>                max++;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num[j] != num[i])<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(max&gt;n/<span class="hljs-number">2</span>)&#123;<br>            cout&lt;&lt;num[i];<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        i = j;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-string">&quot;no&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1187：统计字符数">1187：统计字符数</h2><h3 id="【题目描述】-14">【题目描述】</h3><p>给定一个由a-z这26个字符组成的字符串，统计其中哪个字符出现的次数最多。</p><h3 id="【输入】-14">【输入】</h3><p>输入包含一行，一个字符串，长度不超过1000。</p><h3 id="【输出】-14">【输出】</h3><p>输出一行，包括出现次数最多的字符和该字符出现的次数，中间以一个空格分开。如果有多个字符出现的次数相同且最多，那么输出ascii码最小的那一个字符。</p><h3 id="【输入样例】-14">【输入样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">abbccc</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-14">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">c</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>先排序，然后找数量</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    string s;<br>    cin&gt;&gt;s;<br>    <span class="hljs-type">int</span> n = s.<span class="hljs-built_in">length</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-type">int</span> min = i;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(s[j] &lt; s[min])<br>                min = j;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(min != i)<br>            <span class="hljs-built_in">swap</span>(s[i],s[min]);<br>    &#125;<br>    <span class="hljs-type">int</span> max = <span class="hljs-number">1</span>;<br>    <span class="hljs-type">char</span> max_s = s[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;)&#123;<br>        <span class="hljs-type">int</span> cur_max = <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(;j&lt;n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(s[j] == s[i])<br>                cur_max++;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[j] != s[i])<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(cur_max&gt;max)&#123;<br>            max = cur_max;<br>            max_s = s[i];<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cur_max==max &amp;&amp; s[i]&lt;max_s)&#123;<br>            max = cur_max;<br>            max_s = s[i];<br>        &#125; <br>        i = j;<br>    &#125;<br>    cout&lt;&lt;max_s&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;max;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>递推算法</title>
    <link href="/2024/06/18/%E9%80%92%E6%8E%A8%E7%AE%97%E6%B3%95/"/>
    <url>/2024/06/18/%E9%80%92%E6%8E%A8%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1>递推算法</h1><h2 id="1312：昆虫繁殖">1312：昆虫繁殖</h2><h3 id="【题目描述】">【题目描述】</h3><p>科学家在热带森林中发现了一种特殊的昆虫，这种昆虫的繁殖能力很强。每对成虫过x个月产y对卵，每对卵要过两个月长成成虫。假设每个成虫不死，第一个月只有一对成虫，且卵长成成虫后的第一个月不产卵(过x个月产卵)，问过z个月以后，共有成虫多少对？0≤x≤20,1≤y≤20,X≤z≤50。</p><h3 id="【输入】">【输入】</h3><p>x,y,z的数值。</p><h3 id="【输出】">【输出】</h3><p>过z个月以后，共有成虫对数。</p><h3 id="【输入样例】">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">37<br></code></pre></td></tr></table></figure><p>将昆虫分为3种状态，第一种是能产卵的成虫，第二种是卵，第三种是不能产卵的成虫。设第i月<strong>虫（包含成虫和不能产卵的成虫）<strong>数量的数组为a[i]，第i月</strong>产生卵</strong>数量的数组为b[i]。</p><p>虫数量根据上个月的虫数量增加a[i] = a[i-1] + b[i-2]，因为卵需要2个月才能长成虫。</p><p>卵的数量不用自增加，因为每个月产生的卵的数量之间没有太大关系，第i月产生的卵是i-x月虫的数量产生的卵，因为经过x个月之后不能产卵的成虫也可以产卵了，所以第i月能产卵的虫数量就是i-x月虫的数量。</p><p>参考：</p><p><a href="https://blog.csdn.net/lq1990717/article/details/123785607?ops_request_misc=%7B%22request%5Fid%22%3A%22171757392416800184129843%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=171757392416800184129843&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-123785607-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=1312%EF%BC%9A%E3%80%90%E4%BE%8B3.4%E3%80%91%E6%98%86%E8%99%AB%E7%B9%81%E6%AE%96&amp;spm=1018.2226.3001.4187">信息学奥赛一本通 1312：【例3.4】昆虫繁殖_1312:【例3.4】昆虫繁殖-CSDN博客</a></p><p>注意题目说z小于等于50，但是实际上会更大。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> x,y,z;<br>    cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">101</span>],b[<span class="hljs-number">101</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=x;i++)&#123;<br>        a[i] = <span class="hljs-number">1</span>;<br>        b[i] = <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x+<span class="hljs-number">1</span>;i&lt;=z+<span class="hljs-number">1</span>;i++)&#123;<br>        b[i] = a[i-x]*y;<br>        a[i] = a[i<span class="hljs-number">-1</span>] + b[i<span class="hljs-number">-2</span>];<br>    &#125;<br>    cout&lt;&lt;a[z+<span class="hljs-number">1</span>];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1313：位数问题">1313：位数问题</h2><h3 id="【题目描述】-2">【题目描述】</h3><p>在所有的N位数中，有多少个数中有偶数个数字3?由于结果可能很大，你只需要输出这个答案对12345取余的值。</p><h3 id="【输入】-2">【输入】</h3><p>读入一个数N(N≤1000)。</p><h3 id="【输出】-2">【输出】</h3><p>输出有多少个数中有偶数个数字3。</p><h3 id="【输入样例】-2">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-2">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">73<br></code></pre></td></tr></table></figure><p>用排列组合的思想，</p><p>一位数有偶数个3的情况就是012 456789；奇数个3的情况是3。</p><p>二位数有偶数个的情况是一位数有偶数的情况在二位数上也取偶数个3，即012 456789对上012 456789=81，还包括一位数有奇数个3的情况加上二位数也有奇数个3的情况，即3对上3；奇数个3的情况则是一位数上是奇数个3对上二位数上是偶数个3，即3对上012 456789，还包括一位数上是偶数个3，二位数上是奇数个3，即012 456789对上3。</p><p>于是可以总结规律，假设a[i]表示i位数偶数个3的个数，b[i]表示i位数奇数个3的个数。</p><p>i+1位数的偶数个3的个数就是a[i+1]=a[i]*9+b[i]，b[i+1]=b[i]*9+a[i]</p><p>当计算的是最大位的数量时，乘8而不是乘9，因为最大值位置不能取0。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include&lt;iostream&gt;<br>using namespace std;<br>int main()&#123;<br>    int n;<br>    cin&gt;&gt;n;<br>    int a[<span class="hljs-number">1002</span>],b[<span class="hljs-number">1002</span>],x=<span class="hljs-number">9</span>,<span class="hljs-symbol">M</span>=<span class="hljs-number">12345</span>;<br>    a[<span class="hljs-number">1</span>] = <span class="hljs-number">9</span>;<br>    b[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    for(int i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        if(i==n)<br>            x--;<br>        a[i] = (a[i<span class="hljs-number">-1</span>]*x+b[i<span class="hljs-number">-1</span>])<span class="hljs-comment">%M;</span><br>        b[i] = (b[i<span class="hljs-number">-1</span>]*x+a[i<span class="hljs-number">-1</span>])<span class="hljs-comment">%M;</span><br>    &#125;<br>    cout&lt;&lt;a[n];<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1314：过河卒">1314：过河卒</h2><h3 id="【题目描述】-3">【题目描述】</h3><p>棋盘上A点有一个过河卒，需要走到目标B点。卒行走的规则：可以向下、或者向右。同时在棋盘上的某一点有一个对方的马（如C点），该马所在的点和所有跳跃一步可达的点称为对方马的控制点，如图3-1中的C点和P1，……，P8，卒不能通过对方马的控制点。棋盘用坐标表示，A点(0,0)、B点(n, m) (n,m为不超过20的整数),同样马的位置坐标是需要给出的，C≠A且C≠B。现在要求你计算出卒从A点能够到达B点的路径的条数。</p><p><img src="http://ybt.ssoier.cn:8088/pic/1314.gif" alt="img"></p><h3 id="【输入】-3">【输入】</h3><p>给出n、m和C点的坐标。</p><h3 id="【输出】-3">【输出】</h3><p>从A点能够到达B点的路径的条数。</p><h3 id="【输入样例】-3">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">8 </span><span class="hljs-number">6</span> <span class="hljs-number">0</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-3">【输出样例】</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1617</span><br></code></pre></td></tr></table></figure><p>棋盘中的点(i,j)，是由(i-1,j)和(i,j-1)坐标来的，在边缘的点（i=0或j=0）只能从其上一个位置来。而被马控制的点则可以直接置为0，表示没有任何一条路可以从这里走过。</p><p>设置马的控制点时需要判断控制点是否在棋盘中，</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs inform7">#include&lt;iostream&gt;<br>#include&lt;cstring&gt;<br>using namespace std;<br>int main()&#123;<br>    int n,m,cx,cy;<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;cx&gt;&gt;cy;<br>    long long dp<span class="hljs-comment">[25]</span><span class="hljs-comment">[25]</span>;<br>    int direction<span class="hljs-comment">[8]</span><span class="hljs-comment">[2]</span>=&#123;&#123;2,1&#125;,&#123;1,2&#125;,&#123;-1,2&#125;,&#123;-2,1&#125;,&#123;-2,-1&#125;,&#123;-1,-2&#125;,&#123;1,-2&#125;,&#123;2,-1&#125;&#125;;<br>    memset(dp,-1,sizeof(dp));<br>    dp<span class="hljs-comment">[cx]</span><span class="hljs-comment">[cy]</span> = 0;<br>    for(int i=0;i&lt;8;i++)&#123;<br>        int x = cx + direction<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span>;<br>        int y = cy + direction<span class="hljs-comment">[i]</span><span class="hljs-comment">[1]</span>;<br>        if(x&gt;=0 &amp;&amp; x&lt;=n &amp;&amp; y&gt;=0 &amp;&amp; y&lt;=m)<br>            dp<span class="hljs-comment">[x]</span><span class="hljs-comment">[y]</span> = 0;<br>    &#125; <br>    dp<span class="hljs-comment">[0]</span><span class="hljs-comment">[0]</span> = 1;<br>    for(int i=0;i&lt;=n;i++)&#123;<br>        for(int j=0;j&lt;=m;j++)&#123;<br>            if(dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>==0)<br>                continue;<br>            else if(i==0 &amp;&amp; j==0)<br>                dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = 1;<br>            else if(i==0 &amp;&amp; j&gt;0)<br>                dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j-1]</span>; <br>            else if(j==0 &amp;&amp; i&gt;0)<br>                dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = dp<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j]</span>; <br>            else<br>                dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j-1]</span> + dp<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j]</span>; <br>        &#125;<br>    &#125;<br>    cout&lt;&lt;dp<span class="hljs-comment">[n]</span><span class="hljs-comment">[m]</span>;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1188：菲波那契数列-2">1188：菲波那契数列(2)</h2><h3 id="【题目描述】-4">【题目描述】</h3><p>菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。</p><p>给出一个正整数a，要求菲波那契数列中第a个数对1000取模的结果是多少。</p><h3 id="【输入】-4">【输入】</h3><p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1≤a≤1000000)。</p><h3 id="【输出】-4">【输出】</h3><p>n行，每行输出对应一个输入。输出应是一个正整数，为菲波那契数列中第a个数对1000取模得到的结果。</p><h3 id="【输入样例】-4">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">19 </span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-4">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">181 </span><br><span class="hljs-symbol">1 </span><br></code></pre></td></tr></table></figure><p>两种思路：</p><p>1.先输入每个要找到的fibonaci数，按照顺序增加fibonaci，设置当前找到的最大值，如果下一个fibonaci数小于当前最大值，直接查找，否则从最大值处开始增加，到当前数为止，并且更新最大值</p><p>2.在输入数时找到最大的fibonaci数位数，然后计算到达该位置，对之前的输入进行查找</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,a[<span class="hljs-number">1000</span>];<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        cin&gt;&gt;a[i];<br>    <span class="hljs-type">int</span> max = <span class="hljs-number">2</span>;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> fibo[<span class="hljs-number">1000005</span>];<br>    fibo[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    fibo[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]&lt;=max)&#123;<br>            cout&lt;&lt;fibo[a[i]]&lt;&lt;endl;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>            <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=max+<span class="hljs-number">1</span>;j&lt;=a[i];j++)&#123;<br>            fibo[j] = (fibo[j<span class="hljs-number">-1</span>] + fibo[j<span class="hljs-number">-2</span>])%<span class="hljs-number">1000</span>;<br>        &#125;<br>        cout&lt;&lt;fibo[a[i]]&lt;&lt;endl;<br>        <span class="hljs-keyword">if</span>(a[i]&gt;max)<br>            max = a[i];<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1189：Pell数列">1189：Pell数列</h2><h3 id="【题目描述】-5">【题目描述】</h3><p>Pell数列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">a_1,a_2,a_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的定义是这样的，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">a_1=1,a_2=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>2</mn><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo>&gt;</mo><mn>2</mn><mo stretchy="false">)</mo><mtext>。</mtext></mrow><annotation encoding="application/x-tex">a_n=2a_{n−1}+a_{n−2}(n&gt;2)。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8528em;vertical-align:-0.2083em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mord cjk_fallback">。</span></span></span></span></span></p><p>给出一个正整数k，要求Pell数列的第k项模上32767是多少。</p><h3 id="【输入】-5">【输入】</h3><p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数k (1≤k&lt;1000000)。</p><h3 id="【输出】-5">【输出】</h3><p>n行，每行输出对应一个输入。输出应是一个非负整数。</p><h3 id="【输入样例】-5">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">1</span> <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-5">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">408</span><br></code></pre></td></tr></table></figure><p>在斐波那契数列基础上改</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,a[<span class="hljs-number">1000</span>];<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        cin&gt;&gt;a[i];<br>    <span class="hljs-type">int</span> max = <span class="hljs-number">2</span>;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> fibo[<span class="hljs-number">1000005</span>];<br>    fibo[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    fibo[<span class="hljs-number">2</span>] = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]&lt;=max)&#123;<br>            cout&lt;&lt;fibo[a[i]]&lt;&lt;endl;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>            <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=max+<span class="hljs-number">1</span>;j&lt;=a[i];j++)&#123;<br>            fibo[j] = (<span class="hljs-number">2</span>*fibo[j<span class="hljs-number">-1</span>] + fibo[j<span class="hljs-number">-2</span>])%<span class="hljs-number">32767</span>;<br>        &#125;<br>        cout&lt;&lt;fibo[a[i]]&lt;&lt;endl;<br>        max = a[i];<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1190：上台阶">1190：上台阶</h2><h3 id="【题目描述】-6">【题目描述】</h3><p>楼梯有n(0&lt;n&lt;71)阶台阶,上楼时可以一步上1阶,也可以一步上2阶,也可以一步上3阶，编程计算共有多少种不同的走法。</p><h3 id="【输入】-6">【输入】</h3><p>输入的每一行包括一组测试数据，即为台阶数n。最后一行为0，表示测试结束。</p><h3 id="【输出】-6">【输出】</h3><p>每一行输出对应一行输入的结果，即为走法的数目。</p><h3 id="【输入样例】-6">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">3 </span><br><span class="hljs-symbol">4 </span><br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-6">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">7 </span><br></code></pre></td></tr></table></figure><p>dp[i]=dp[i-1]+dp[i-2]+dp[i-3]</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n=<span class="hljs-number">0</span>,a[<span class="hljs-number">100</span>];<br>    <span class="hljs-keyword">while</span>(cin&gt;&gt;a[n])&#123;<br>        <span class="hljs-keyword">if</span>(a[n]==<span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">else</span>    <br>            n++;<br>    &#125;<br>    <span class="hljs-type">int</span> max = <span class="hljs-number">3</span>;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> dp[<span class="hljs-number">100</span>];<br>    dp[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    dp[<span class="hljs-number">2</span>] = <span class="hljs-number">2</span>;<br>    dp[<span class="hljs-number">3</span>] = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]&lt;=max)&#123;<br>            cout&lt;&lt;dp[a[i]]&lt;&lt;endl;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=max+<span class="hljs-number">1</span>;j&lt;=a[i];j++)&#123;<br>                dp[j] = dp[j<span class="hljs-number">-1</span>] + dp[j<span class="hljs-number">-2</span>] + dp[j<span class="hljs-number">-3</span>];<br>            &#125;<br>            cout&lt;&lt;dp[a[i]]&lt;&lt;endl;<br>            max = a[i];<br>        &#125;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1191：流感传染">1191：流感传染</h2><h3 id="【题目描述】-7">【题目描述】</h3><p>有一批易感人群住在网格状的宿舍区内，宿舍区为n*n的矩阵，每个格点为一个房间，房间里可能住人，也可能空着。在第一天，有些房间里的人得了流感，以后每天，得流感的人会使其邻居传染上流感，（已经得病的不变），空房间不会传染。请输出第m天得流感的人数。</p><h3 id="【输入】-7">【输入】</h3><p>第一行一个数字n，n不超过100，表示有n*n的宿舍房间。</p><p>接下来的n行，每行n个字符，’.’表示第一天该房间住着健康的人，’#’表示该房间空着，’@’表示第一天该房间住着得流感的人。</p><p>接下来的一行是一个整数m，m不超过100。</p><h3 id="【输出】-7">【输出】</h3><p>输出第m天，得流感的人数。</p><h3 id="【输入样例】-7">【输入样例】</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">5 <br><span class="hljs-string">....</span><span class="hljs-comment"># </span><br>.<span class="hljs-comment">#.@. </span><br>.<span class="hljs-comment">#@.. </span><br><span class="hljs-comment">#.... </span><br><span class="hljs-string">.....</span> <br>4<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-7">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">16<br></code></pre></td></tr></table></figure><p>先将所有的情况输入，在二维数组的外围一圈设置为健康，就不用判断是否超过边界了。复制上一天的数组，判断现在的数组是否是健康人，是健康人再判断健康人周围是否有病人。最后循环遍历计数。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include&lt;iostream&gt;<br>using namespace std;<br>int main()&#123;<br>    int n;<br>    cin&gt;&gt;n;<br>    char last[<span class="hljs-number">105</span>][<span class="hljs-number">105</span>],now[<span class="hljs-number">105</span>][<span class="hljs-number">105</span>];<br>    for(int i=<span class="hljs-number">0</span>;i&lt;n+<span class="hljs-number">2</span>;i++)&#123;<br>        now[i][<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;.&#x27;</span>;<br>        now[i][n+<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;.&#x27;</span>;<br>        now[<span class="hljs-number">0</span>][i] = <span class="hljs-string">&#x27;.&#x27;</span>;<br>        now[n+<span class="hljs-number">1</span>][i] = <span class="hljs-string">&#x27;.&#x27;</span>;<br>    &#125;<br>    for (int i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        for(int j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            cin&gt;&gt;now[i][j];<br>        &#125;<br>    &#125;<br>    int m;<br>    cin&gt;&gt;m;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;m;i++)&#123;<br>        for(int j =<span class="hljs-number">1</span>;j&lt;=n;j++)<br>            for(int k=<span class="hljs-number">1</span>;k&lt;=n;k++)<br>                last[j][k] = now[j][k];<br>        for(int j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            for(int k=<span class="hljs-number">1</span>;k&lt;=n;k++)&#123;<br>                if(now[j][k] == <span class="hljs-string">&#x27;.&#x27;</span>)&#123;<br>                    if(last[j<span class="hljs-number">-1</span>][k]==<span class="hljs-string">&#x27;@&#x27;</span> || last[j+<span class="hljs-number">1</span>][k]==<span class="hljs-string">&#x27;@&#x27;</span> || last[j][k<span class="hljs-number">-1</span>]==<span class="hljs-string">&#x27;@&#x27;</span> || last[j][k+<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;@&#x27;</span>)<br>                        now[j][k] = <span class="hljs-string">&#x27;@&#x27;</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    int sum=<span class="hljs-number">0</span>;<br>    for(int i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>        for(int j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>            if(now[i][j]==<span class="hljs-string">&#x27;@&#x27;</span>)<br>                sum++;<br>    cout&lt;&lt;sum;<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1194：移动路线">1194：移动路线</h2><h3 id="【题目描述】-8">【题目描述】</h3><p>X桌子上有一个m行n列的方格矩阵，将每个方格用坐标表示，行坐标从下到上依次递增，列坐标从左至右依次递增，左下角方格的坐标为(1,1)，则右上角方格的坐标为(m,n)。</p><p>小明是个调皮的孩子，一天他捉来一只蚂蚁，不小心把蚂蚁的右脚弄伤了，于是蚂蚁只能向上或向右移动。小明把这只蚂蚁放在左下角的方格中，蚂蚁从</p><p>左下角的方格中移动到右上角的方格中，每步移动一个方格。蚂蚁始终在方格矩阵内移动，请计算出不同的移动路线的数目。</p><p>对于1行1列的方格矩阵，蚂蚁原地移动，移动路线数为1；对于1行2列（或2行1列）的方格矩阵，蚂蚁只需一次向右（或向上）移动，移动路线数也为1……对于一个2行3列的方格矩阵，如下图所示：</p><table><thead><tr><th>(2,1)</th><th>(2,2)</th><th>(2,3)</th></tr></thead><tbody><tr><td>(1,1)</td><td>(1,2)</td><td>(1,3)</td></tr></tbody></table><p>蚂蚁共有3种移动路线：</p><p>路线1：(1,1) → (1,2) → (1,3) → (2,3)</p><p>路线2：(1,1) → (1,2) → (2,2) → (2,3)</p><p>路线3：(1,1) → (2,1) → (2,2) → (2,3)</p><h3 id="【输入】-8">【输入】</h3><p>输入只有一行，包括两个整数m和n（0 &lt; m+n ≤ 20），代表方格矩阵的行数和列数，m、n之间用空格隔开。</p><h3 id="【输出】-8">【输出】</h3><p>输出只有一行，为不同的移动路线的数目。</p><h3 id="【输入样例】-8">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-8">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><p>与过河卒类似</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs inform7">#include&lt;iostream&gt;<br>using namespace std;<br>int main()&#123;<br>    int m,n;<br>    cin&gt;&gt;m&gt;&gt;n;<br>    long long a<span class="hljs-comment">[20]</span><span class="hljs-comment">[20]</span>;<br>    a<span class="hljs-comment">[1]</span><span class="hljs-comment">[1]</span> = 1;<br>    for(int i=1;i&lt;=m;i++)&#123;<br>        for(int j=1;j&lt;=n;j++)&#123;<br>            if(i==1 &amp;&amp; j==1)<br>                a<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = 1;<br>            else if(i==1 &amp;&amp; j&gt;1)<br>                a<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = a<span class="hljs-comment">[i]</span><span class="hljs-comment">[j-1]</span>;<br>            else if(j==1 &amp;&amp; i&gt;1)<br>                a<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = a<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j]</span>;<br>            else<br>                a<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span> = a<span class="hljs-comment">[i]</span><span class="hljs-comment">[j-1]</span> + a<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j]</span>;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;a<span class="hljs-comment">[m]</span><span class="hljs-comment">[n]</span>;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1195：判断整除">1195：判断整除</h2><h3 id="【题目描述】-9">【题目描述】</h3><p>一个给定的正整数序列，在每个数之前都插入+号或−号后计算它们的和。比如序列：1、2、4共有8种可能的序列：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs subunit">(<span class="hljs-string">+1</span>) + (<span class="hljs-string">+2</span>) + (<span class="hljs-string">+4</span>) = 7<br>(<span class="hljs-string">+1</span>) + (<span class="hljs-string">+2</span>) + (<span class="hljs-string">-4</span>) = <span class="hljs-string">-1</span><br>(<span class="hljs-string">+1</span>) + (<span class="hljs-string">-2</span>) + (<span class="hljs-string">+4</span>) = 3<br>(<span class="hljs-string">+1</span>) + (<span class="hljs-string">-2</span>) + (<span class="hljs-string">-4</span>) = <span class="hljs-string">-5</span><br>(<span class="hljs-string">-1</span>) + (<span class="hljs-string">+2</span>) + (<span class="hljs-string">+4</span>) = 5<br>(<span class="hljs-string">-1</span>) + (<span class="hljs-string">+2</span>) + (<span class="hljs-string">-4</span>) = <span class="hljs-string">-3</span><br>(<span class="hljs-string">-1</span>) + (<span class="hljs-string">-2</span>) + (<span class="hljs-string">+4</span>) = 1<br>(<span class="hljs-string">-1</span>) + (<span class="hljs-string">-2</span>) + (<span class="hljs-string">-4</span>) = <span class="hljs-string">-7</span><br></code></pre></td></tr></table></figure><p>所有结果中至少有一个可被整数k整除，我们则称此正整数序列可被k整除。例如上述序列可以被3、5、7整除，而不能被2、4、6、8……整除。注意：0、−3、−6、−9……都可以认为是3的倍数。</p><h3 id="【输入】-9">【输入】</h3><p>输入的第一行包含两个数：N(2&lt;N&lt;10000)和k(2&lt;k&lt;100)，其中N代表一共有N个数，k代表除数。第二行给出序列中的N个整数，这些整数的取值范围都0到10000之间（可能重复）。</p><h3 id="【输出】-9">【输出】</h3><p>如果此正整数序列可被k整除，则输出YES，否则输出NO。（注意：都是大写字母）</p><h3 id="【输入样例】-9">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-9">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">NO</span><br></code></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.csdn.net/lq1990717/article/details/124085240?ops_request_misc=%7B%22request%5Fid%22%3A%22171773159416800178581923%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=171773159416800178581923&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-124085240-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=1195%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B4%E9%99%A4&amp;spm=1018.2226.3001.4187">信息学奥赛一本通 1195：判断整除 | OpenJudge NOI 2.6 3531:判断整除_1195:判断整除-CSDN博客</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n, k, v;<br>cin &gt;&gt; n &gt;&gt; k;<br>    <span class="hljs-type">bool</span> dp[<span class="hljs-number">10005</span>][<span class="hljs-number">105</span>]=&#123;<span class="hljs-literal">false</span>&#125;;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">10005</span>];<br>dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)<br>cin &gt;&gt; a[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; k; ++j)<span class="hljs-comment">//j是除k得到的余数，范围为0~k-1 </span><br>dp[i][j] = dp[i<span class="hljs-number">-1</span>][(k+j-a[i]%k)%k] || dp[i<span class="hljs-number">-1</span>][(j+a[i])%k]; <br>    cout &lt;&lt; (dp[n][<span class="hljs-number">0</span>] ? <span class="hljs-string">&quot;YES&quot;</span> : <span class="hljs-string">&quot;NO&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1196：踩方格">1196：踩方格</h2><h3 id="【题目描述】-10">【题目描述】</h3><p>有一个方格矩阵，矩阵边界在无穷远处。我们做如下假设：</p><p>a、每走一步时，只能从当前方格移动一格，走到某个相邻的方格上；</p><p>b、走过的格子立即塌陷无法再走第二次；</p><p>c、只能向北、东、西三个方向走；</p><p>请问：如果允许在方格矩阵上走n步，共有多少种不同的方案。2种走法只要有一步不一样，即被认为是不同的方案。</p><h3 id="【输入】-10">【输入】</h3><p>允许在方格上行走的步数n(n≤20)。</p><h3 id="【输出】-10">【输出】</h3><p>计算出的方案数量。</p><h3 id="【输入样例】-10">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-10">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">7<br></code></pre></td></tr></table></figure><p>由于之前走过的路不能再走了，所以需要区分向上向左向右走，</p><p>当前格子能往左走说明上一步是向左走或者向上走的；</p><p>当前格子能往右走说明上一步是向右走或者向上走的；</p><p>当前格子不管怎么样都能向上走。</p><p>统计所有能走的方向，就是向上向左向右。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs excel">#include&lt;iostream&gt;<br>using namespace std;<br><span class="hljs-built_in">int</span> main()&#123;<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>;<br>    cin&gt;&gt;<span class="hljs-built_in">n</span>;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">left</span>[<span class="hljs-number">100</span>],<span class="hljs-built_in">right</span>[<span class="hljs-number">100</span>],head[<span class="hljs-number">100</span>],<span class="hljs-built_in">sum</span>[<span class="hljs-number">100</span>];<br>    <span class="hljs-built_in">left</span>[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">right</span>[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    head[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">sum</span>[<span class="hljs-number">1</span>] = <span class="hljs-number">3</span>;<br>    for(<span class="hljs-built_in">int</span> i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-built_in">n</span>;i++)&#123;<br>        <span class="hljs-built_in">left</span>[i] = <span class="hljs-built_in">left</span>[i-<span class="hljs-number">1</span>] + head[i-<span class="hljs-number">1</span>];<br>        <span class="hljs-built_in">right</span>[i] = <span class="hljs-built_in">right</span>[i-<span class="hljs-number">1</span>] + head[i-<span class="hljs-number">1</span>];<br>        head[i] = <span class="hljs-built_in">left</span>[i-<span class="hljs-number">1</span>] + <span class="hljs-built_in">right</span>[i-<span class="hljs-number">1</span>] + head[i-<span class="hljs-number">1</span>];<br>        <span class="hljs-built_in">sum</span>[i] = <span class="hljs-built_in">left</span>[i] + <span class="hljs-built_in">right</span>[i] + head[i];<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-built_in">sum</span>[<span class="hljs-built_in">n</span>];<br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1197：山区建小学">1197：山区建小学</h2><h3 id="【题目描述】-11">【题目描述】</h3><p>政府在某山区修建了一条道路，恰好穿越总共m个村庄的每个村庄一次，没有回路或交叉，任意两个村庄只能通过这条路来往。已知任意两个相邻的村庄之间的距离为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>(为正整数)，其中，0&lt;i&lt;m。为了提高山区的文化素质，政府又决定从m个村中选择n个村建小学(设0&lt;n≤m&lt;500)。请根据给定的m、n以及所有相邻村庄的距离，选择在哪些村庄建小学，才使得所有村到最近小学的距离总和最小，计算最小值。</p><h3 id="【输入】-11">【输入】</h3><p>第1行为m和n，其间用空格间隔</p><p>第2行为m−1个整数，依次表示从一端到另一端的相邻村庄的距离，整数之间以空格间隔。</p><p>例如:</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><span class="hljs-number">3</span><br><span class="hljs-symbol">2 </span><span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>表示在10个村庄建3所学校。第1个村庄与第2个村庄距离为2，第2个村庄与第3个村庄距离为4，第3个村庄与第4个村庄距离为6，…，第9个村庄到第10个村庄的距离为3。</p><h3 id="【输出】-11">【输出】</h3><p>各村庄到最近学校的距离之和的最小值。</p><h3 id="【输入样例】-11">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><span class="hljs-number">2</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-11">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">18<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>递归算法</title>
    <link href="/2024/06/18/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95/"/>
    <url>/2024/06/18/%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1>递归算法</h1><h2 id="1315：集合的划分">1315：集合的划分</h2><h3 id="【题目描述】">【题目描述】</h3><p>设S是一个具有n个元素的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mtext>＝</mtext><mo stretchy="false">⟨</mo><msub><mi>a</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>a</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mo>…</mo><mtext>，</mtext><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">S＝⟨a_1，a_2，……，a_n⟩</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">＝</span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⟩</span></span></span></span>，现将S划分成k个满足下列条件的子集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>S</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mo>…</mo><mtext>，</mtext><msub><mi>S</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S_1，S_2，……，S_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，且满足：</p><p>1．<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><mtext>∅</mtext></mrow><annotation encoding="application/x-tex">S_i≠∅</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></p><p>2．<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>S</mi><mi>j</mi></msub><mtext>＝∅</mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mtext>，</mtext><mi>j</mi><mo>≤</mo><mi>k</mi><mtext>，</mtext><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S_i∩S_j＝∅      (1≤i，j≤k，i≠j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">＝</span><span class="mord">∅</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></p><p>3．<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>S</mi><mn>2</mn></msub><mo>∪</mo><msub><mi>S</mi><mn>3</mn></msub><mo>∪</mo><mo>…</mo><mo>∪</mo><msub><mi>S</mi><mi>k</mi></msub><mtext>＝</mtext><mi>S</mi></mrow><annotation encoding="application/x-tex">S_1∪S_2∪S_3∪…∪S_k＝S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">＝</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></p><p>则称<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>S</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mo>…</mo><mtext>，</mtext><msub><mi>S</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S_1，S_2，……，S_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是集合S的一个划分。它相当于把S集合中的n个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>a</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mo>…</mo><mtext>，</mtext><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1，a_2，……，a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>放入k个(0＜k≤n&lt;30无标号的盒子中，使得没有一个盒子为空。请你确定n个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>a</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mo>…</mo><mtext>，</mtext><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1，a_2，……，a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 放入k个无标号盒子中去的划分数S(n,k)。</p><h3 id="【输入】">【输入】</h3><p>给出n和k。</p><h3 id="【输出】">【输出】</h3><p>n个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>a</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mo>…</mo><mtext>，</mtext><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1，a_2，……，a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 放入k个无标号盒子中去的划分数S(n,k)。</p><h3 id="【输入样例】">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">22827<br></code></pre></td></tr></table></figure><p>第二类斯特林数</p><p>假设(i,j)表示将i个球放到j个盒子里，那么(i,j)将i个球放到j个盒子里可以往上追溯到将i-1个球放到j个盒子中，此时就是将第i个球放到j个盒子中任意一个即可，即有j*(i-1,j)中可能；或者往上追溯到将i-1个球放到j-1个盒子，此时将第i个球放到第j个盒子中即可，即(i-1,j-1)。</p><p>当j=1时表示将i个球都放到1个盒子里，此时只有一种可能。</p><p>当j&gt;i时表示球无法完全放进盒子中，此时可能情况为0。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">myset</span><span class="hljs-params">(<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> j)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(j&gt;i)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j==<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> j*<span class="hljs-built_in">myset</span>(i<span class="hljs-number">-1</span>,j) + <span class="hljs-built_in">myset</span>(i<span class="hljs-number">-1</span>,j<span class="hljs-number">-1</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,k;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    cout&lt;&lt;<span class="hljs-built_in">myset</span>(n,k);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1316：数的计数-Noip2001">1316：数的计数(Noip2001)</h2><h3 id="【题目描述】-2">【题目描述】</h3><p>我们要求找出具有下列性质数的个数（包括输入的自然数n）。先输入一个自然数n(n≤1000)，然后对此自然数按照如下方法进行处理：</p><p>不作任何处理；</p><p>在它的左边加上一个自然数，但该自然数不能超过原数的一半；</p><p>加上数后，继续按此规则进行处理，直到不能再加自然数为止。</p><h3 id="【输入】-2">【输入】</h3><p>自然数n(n≤1000)。</p><h3 id="【输出】-2">【输出】</h3><p>满足条件的数。</p><h3 id="【输入样例】-2">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-2">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><h3 id="【提示】">【提示】</h3><p>【样例解释】</p><p>满足条件的数为如下所示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs">  6<br> 16<br> 26<br>126<br> 36<br>136<br></code></pre></td></tr></table></figure><p>对于一个数比如6，其左边能加的数的多少就是1-3一共3个，再加就是1-3各自的一半。</p><p>假设a[i]为当前这个数能够有多少种满足的数，a[i] = a[0]+a[1]+a[2]+…+a[n/2]，因为i左边只能加到n/2，所以只要统计加进来的这些数左边还能加多少就行。</p><p>使用记忆化递归存储之前计算过的数量，不然会运行超时</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> dp[<span class="hljs-number">1005</span>];<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">getNum</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(dp[i] &gt; <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> dp[i];<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;=i/<span class="hljs-number">2</span>;j++)<br>            sum += <span class="hljs-built_in">getNum</span>(j);<br>        dp[i] = sum;<br>        <span class="hljs-keyword">return</span> sum;<br>    &#125;;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    cout&lt;&lt;<span class="hljs-built_in">getNum</span>(n);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1198：逆波兰表达式">1198：逆波兰表达式</h2><h3 id="【题目描述】-3">【题目描述】</h3><p>逆波兰表达式是一种把运算符前置的算术表达式，例如普通的表达式2 + 3的逆波兰表示法为+ 2 3。逆波兰表达式的优点是运算符之间不必有优先级关系，也不必用括号改变运算次序，例如(2 + 3) * 4的逆波兰表示法为* + 2 3 4。本题求解逆波兰表达式的值，其中运算符包括+ - * /四个。</p><h3 id="【输入】-3">【输入】</h3><p>输入为一行，其中运算符和运算数之间都用空格分隔，运算数是浮点数。</p><h3 id="【输出】-3">【输出】</h3><p>输出为一行，表达式的值。</p><p>可直接用printf(“%f\n”, v)输出表达式的值v。</p><h3 id="【输入样例】-3">【输入样例】</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">* + <span class="hljs-number">11.0 12.0</span> + <span class="hljs-number">24.0 35.0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-3">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1357</span>.<span class="hljs-number">000000</span><br></code></pre></td></tr></table></figure><p>每回合输入一个数，根据是否是±*/判断是否进行运算，如果不进行运算，则使用atof()函数将字符转换成float类型，注意atof()内传递的参数需要是一个字符数组类型，不能只是一个字符，使用stdlib.h头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">poolan</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">char</span> s[<span class="hljs-number">10</span>];<br>    cin&gt;&gt;s;<br>    <span class="hljs-keyword">switch</span>(s[<span class="hljs-number">0</span>])&#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">poolan</span>()+<span class="hljs-built_in">poolan</span>();<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">poolan</span>()-<span class="hljs-built_in">poolan</span>();<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">poolan</span>()*<span class="hljs-built_in">poolan</span>();<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">poolan</span>()/<span class="hljs-built_in">poolan</span>();<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">atof</span>(s);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f\n&quot;</span>,<span class="hljs-built_in">poolan</span>());<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1199：全排列">1199：全排列</h2><h3 id="【题目描述】-4">【题目描述】</h3><p>给定一个由不同的小写字母组成的字符串，输出这个字符串的所有全排列。</p><p>我们假设对于小写字母有‘a’ &lt;‘b’ &lt; … &lt;‘y’&lt;‘z’，而且给定的字符串中的字母已经按照从小到大的顺序排列。</p><h3 id="【输入】-4">【输入】</h3><p>只有一行，是一个由不同的小写字母组成的字符串，已知字符串的长度在1到6之间。</p><h3 id="【输出】-4">【输出】</h3><p>输出这个字符串的所有排列方式，每行一个排列。要求字母序比较小的排列在前面。字母序如下定义：</p><p>已知<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>s</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>T</mi><mo>=</mo><msub><mi>t</mi><mn>1</mn></msub><msub><mi>t</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>t</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S=s_1s_2...s_k,T=t_1t_2...t_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则S&lt;T等价于，存在p(1&lt;=p&lt;=k)，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mo>=</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo>=</mo><msub><mi>t</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>s</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>t</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>p</mi></msub><mo>&lt;</mo><msub><mi>t</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">s_1=t_1,s_2=t_2,...,s_{p−1}=t_{p−1},s_p&lt;t_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9012em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9012em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9012em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>成立。</p><h3 id="【输入样例】-4">【输入样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">abc</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-4">【输出样例】</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">abc <br>acb <br><span class="hljs-keyword">bac </span><br><span class="hljs-keyword">bca </span><br>cab <br>cba <br></code></pre></td></tr></table></figure><h3 id="【提示】-2">【提示】</h3><p>本题目禁止使用STL及包含可以使用的相关调用。</p><p>深度搜索，先找到从小到大排序的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-type">char</span> a[<span class="hljs-number">1000</span>];<br><span class="hljs-type">char</span> s[<span class="hljs-number">1000</span>];<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">bool</span> isVisit[<span class="hljs-number">100</span>]=&#123;<span class="hljs-literal">false</span>&#125;;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">permutation</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(isVisit[i] == <span class="hljs-literal">false</span>)&#123;<br>            isVisit[i] = <span class="hljs-literal">true</span>;<br>            a[k] = s[i];<br>            <span class="hljs-keyword">if</span>(k==n<span class="hljs-number">-1</span>)<br>                cout&lt;&lt;a&lt;&lt;endl;<br>            <span class="hljs-keyword">else</span>    <br>                <span class="hljs-built_in">permutation</span>(k+<span class="hljs-number">1</span>);<br>            isVisit[i] =<span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;s;<br>    n = <span class="hljs-built_in">strlen</span>(s);<br>    <span class="hljs-built_in">permutation</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1200：分解因数">1200：分解因数</h2><h3 id="【题目描述】-5">【题目描述】</h3><p>给出一个正整数a，要求分解成若干个正整数的乘积，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>×</mo><msub><mi>a</mi><mn>2</mn></msub><mo>×</mo><msub><mi>a</mi><mn>3</mn></msub><mo>×</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>×</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a=a_1×a_2×a_3×...×a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，并且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><msub><mi>a</mi><mn>1</mn></msub><mo>≤</mo><msub><mi>a</mi><mn>2</mn></msub><mo>≤</mo><msub><mi>a</mi><mn>3</mn></msub><mo>≤</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>≤</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">1&lt;a_1≤a_2≤a_3≤...≤a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，问这样的分解的种数有多少。注意到a=a也是一种分解。</p><h3 id="【输入】-5">【输入】</h3><p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1&lt;a&lt;32768)。</p><h3 id="【输出】-5">【输出】</h3><p>n行，每行输出对应一个输入。输出应是一个正整数，指明满足要求的分解的种数。</p><h3 id="【输入样例】-5">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-5">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><br><span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>如果一个数能够分解，就说明多一种分解的方案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-type">int</span> sum=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">divide</span><span class="hljs-params">(<span class="hljs-type">int</span> k,<span class="hljs-type">int</span> d)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(d&gt;=k)<br>        <span class="hljs-keyword">return</span> ;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=d;i*i&lt;=k;i++)&#123;<br>        <span class="hljs-keyword">if</span>(k%i==<span class="hljs-number">0</span>)&#123;<br>            sum++;<br>            <span class="hljs-built_in">divide</span>(k/i,i);<br>        &#125;<br>    &#125; <br>    <span class="hljs-keyword">return</span> ;    <br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,num;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;num;<br>        sum = <span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">divide</span>(num,<span class="hljs-number">2</span>);<br>        cout&lt;&lt;sum&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1201：菲波那契数列">1201：菲波那契数列</h2><h3 id="【题目描述】-6">【题目描述】</h3><p>菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。</p><p>给出一个正整数a，要求菲波那契数列中第a个数是多少。</p><h3 id="【输入】-6">【输入】</h3><p>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1&lt;=a&lt;=20)。</p><h3 id="【输出】-6">【输出】</h3><p>输出有n行，每行输出对应一个输入。输出应是一个正整数，为菲波那契数列中第a个数的大小。</p><h3 id="【输入样例】-6">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">19 </span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-6">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">4181 </span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> max_dp=<span class="hljs-number">0</span>;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> dp[<span class="hljs-number">30</span>];<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span>  <span class="hljs-title">fibonaci</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(k==<span class="hljs-number">1</span> || k==<span class="hljs-number">2</span>)&#123;<br>        dp[k] = <span class="hljs-number">1</span>;<br>        max_dp = k;<br>        <span class="hljs-keyword">return</span> dp[k];<br>    &#125;<br>    <span class="hljs-keyword">if</span>(k&lt;=max_dp)<br>        <span class="hljs-keyword">return</span> dp[k];<br>    <span class="hljs-keyword">else</span>    <br>        dp[k] = <span class="hljs-built_in">fibonaci</span>(k<span class="hljs-number">-1</span>) + <span class="hljs-built_in">fibonaci</span>(k<span class="hljs-number">-2</span>);<br>    <span class="hljs-keyword">if</span>(k&gt;max_dp)<br>        max_dp = k;<br>    <span class="hljs-keyword">return</span> dp[k];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,num;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;num;<br>        cout&lt;&lt;<span class="hljs-built_in">fibonaci</span>(num)&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1202：Pell数列">1202：Pell数列</h2><h3 id="【题目描述】-7">【题目描述】</h3><p>Pell数列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">a_1,a_2,a_3,...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span></span></span></span>的定义是这样的，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>2</mn><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo>&gt;</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_1=1,a_2=2,...,a_n=2a_{n−1}+a_{n−2}(n&gt;2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8528em;vertical-align:-0.2083em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>。</p><p>给出一个正整数 k，要求Pell数列的第 k𝑘项模上 32767 是多少。</p><h3 id="【输入】-7">【输入】</h3><p>第1行是测试数据的组数 n，后面跟着 n 行输入。每组测试数据占1行，包括一个正整数k(1≤k&lt;1000000)。</p><h3 id="【输出】-7">【输出】</h3><p>n行，每行输出对应一个输入。输出应是一个非负整数。</p><h3 id="【输入样例】-7">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">1 </span><br><span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-7">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">408 </span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> max_dp=<span class="hljs-number">0</span>;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> dp[<span class="hljs-number">1000000</span>];<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span>  <span class="hljs-title">pell</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(k==<span class="hljs-number">1</span>)&#123;<br>        dp[k] = <span class="hljs-number">1</span>;<br>        max_dp = k;<br>        <span class="hljs-keyword">return</span> dp[k];<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(k==<span class="hljs-number">2</span>)&#123;<br>        dp[k] = <span class="hljs-number">2</span>;<br>        max_dp = k;<br>        <span class="hljs-keyword">return</span> dp[k];<br>    &#125;<br>    <span class="hljs-keyword">if</span>(k&lt;=max_dp)<br>        <span class="hljs-keyword">return</span> dp[k];<br>    <span class="hljs-keyword">else</span>    <br>        dp[k] = (<span class="hljs-number">2</span>*<span class="hljs-built_in">pell</span>(k<span class="hljs-number">-1</span>) + <span class="hljs-built_in">pell</span>(k<span class="hljs-number">-2</span>))%<span class="hljs-number">32767</span>;<br>    <span class="hljs-keyword">if</span>(k&gt;max_dp)<br>        max_dp = k;<br>    <span class="hljs-keyword">return</span> dp[k];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,num;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;num;<br>        cout&lt;&lt;<span class="hljs-built_in">pell</span>(num)&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1203：扩号匹配问题">1203：扩号匹配问题</h2><h3 id="【题目描述】-8">【题目描述】</h3><p>在某个字符串（长度不超过100）中有左括号、右括号和大小写字母；规定（与常见的算数式子一样）任何一个左括号都从内到外与在它右边且距离最近的右括号匹配。写一个程序，找到无法匹配的左括号和右括号，输出原来字符串，并在下一行标出不能匹配的括号。不能匹配的左括号用&quot;$“标注,不能匹配的右括号用”?&quot;标注。</p><h3 id="【输入】-8">【输入】</h3><p>输入包括多组数据，每组数据一行，包含一个字符串，只包含左右括号和大小写字母，字符串长度不超过100。</p><h3 id="【输出】-8">【输出】</h3><p>对每组输出数据，输出两行，第一行包含原始输入字符，第二行由&quot;$“,”?“和空格组成，”$“和”?&quot;表示与之对应的左括号和右括号不能匹配。</p><h3 id="【输入样例】-8">【输入样例】</h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clojure">((<span class="hljs-name">ABCD</span>(<span class="hljs-name">x</span>) <br>)(<span class="hljs-name">rttyy</span>())sss)(<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-8">【输出样例】</h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clojure">((<span class="hljs-name">ABCD</span>(<span class="hljs-name">x</span>) <br>$$ <br>)(<span class="hljs-name">rttyy</span>())sss)( <br>?            ?$ <br></code></pre></td></tr></table></figure><p>1.栈的思想：遇到左括号入栈，遇到右括号判断当前栈是否为空，为空则判断无法匹配，不为空则可以匹配并且出栈一个左括号。</p><p>2.递归的思想：遇到左括号设置为’$‘，遇到右括号向前找是否有’$‘，如果没找到就设置为’?‘，找到就设置之前的’$'为空格表示匹配上了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">char</span> sign[<span class="hljs-number">105</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">match</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(k==<span class="hljs-number">-1</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sign[k] == <span class="hljs-string">&#x27;$&#x27;</span>)<br>        <span class="hljs-keyword">return</span> k;<br>    <span class="hljs-keyword">else</span>    <br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">match</span>(k<span class="hljs-number">-1</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">char</span> s[<span class="hljs-number">105</span>];<br>    <span class="hljs-keyword">while</span>(cin&gt;&gt;s)&#123;<br>        <span class="hljs-built_in">memset</span>(sign,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-built_in">sizeof</span>(sign));<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(s);i++)&#123;<br>            <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;(&#x27;</span>)<br>                sign[i] = <span class="hljs-string">&#x27;$&#x27;</span>;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;)&#x27;</span>)&#123;<br>                <span class="hljs-type">int</span> n = <span class="hljs-built_in">match</span>(i<span class="hljs-number">-1</span>);<br>                <span class="hljs-keyword">if</span>(n == <span class="hljs-number">-1</span>)<br>                    sign[i] = <span class="hljs-string">&#x27;?&#x27;</span>;<br>                <span class="hljs-keyword">else</span><br>                    sign[n] = <span class="hljs-string">&#x27; &#x27;</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(s);i++)<br>            cout&lt;&lt;s[i];<br>        cout&lt;&lt;endl;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(s);i++)<br>            cout&lt;&lt;sign[i];<br>        cout&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1204：爬楼梯">1204：爬楼梯</h2><h3 id="【题目描述】-9">【题目描述】</h3><p>树老师爬楼梯，他可以每次走1级或者2级，输入楼梯的级数，求不同的走法数。</p><p>例如：楼梯一共有3级，他可以每次都走一级，或者第一次走一级，第二次走两级，也可以第一次走两级，第二次走一级，一共3种方法。</p><h3 id="【输入】-9">【输入】</h3><p>输入包含若干行，每行包含一个正整数N，代表楼梯级数，1≤N≤30。</p><h3 id="【输出】-9">【输出】</h3><p>不同的走法数，每一行输入对应一行输出。</p><h3 id="【输入样例】-9">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">8 </span><br><span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-9">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">8 </span><br><span class="hljs-symbol">34 </span><br><span class="hljs-number">89</span><br></code></pre></td></tr></table></figure><p>递归，第i级台阶是从i-1级台阶或者i-2级台阶上来的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> dp[<span class="hljs-number">35</span>];<br><span class="hljs-type">int</span> maxlen = <span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">upstairs</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(k==<span class="hljs-number">1</span>)&#123;<br>        maxlen = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">return</span> dp[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(k==<span class="hljs-number">2</span>)&#123;<br>        maxlen = <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">return</span> dp[<span class="hljs-number">2</span>]=<span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(k&lt;=maxlen)<br>        <span class="hljs-keyword">return</span> dp[k];<br>    <span class="hljs-keyword">else</span>&#123;<br>        dp[k] = <span class="hljs-built_in">upstairs</span>(k<span class="hljs-number">-1</span>) + <span class="hljs-built_in">upstairs</span>(k<span class="hljs-number">-2</span>);<br>    &#125;<br>    maxlen = k;<br>    <span class="hljs-keyword">return</span> dp[k];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-keyword">while</span>(cin&gt;&gt;n)&#123;<br>        cout&lt;&lt;<span class="hljs-built_in">upstairs</span>(n)&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1205：汉诺塔问题">1205：汉诺塔问题</h2><h3 id="【题目描述】-10">【题目描述】</h3><p>约19世纪末，在欧州的商店中出售一种智力玩具，在一块铜板上有三根杆，最左边的杆上自上而下、由小到大顺序串着由64个圆盘构成的塔。目的是将最左边杆上的盘全部移到中间的杆上，条件是一次只能移动一个盘，且不允许大盘放在小盘的上面。</p><p>这是一个著名的问题，几乎所有的教材上都有这个问题。由于条件是一次只能移动一个盘，且不允许大盘放在小盘上面，所以64个盘的移动次数是：18,446,744,073,709,551,615</p><p>这是一个天文数字，若每一微秒可能计算(并不输出)一次移动，那么也需要几乎一百万年。我们仅能找出问题的解决方法并解决较小N值时的汉诺塔，但很难用计算机解决64层的汉诺塔。</p><p>假定圆盘从小到大编号为1, 2, …</p><h3 id="【输入】-10">【输入】</h3><p>输入为一个整数(小于20）后面跟三个单字符字符串。</p><p>整数为盘子的数目，后三个字符表示三个杆子的编号。</p><h3 id="【输出】-10">【输出】</h3><p>输出每一步移动盘子的记录。一次移动一行。</p><p>每次移动的记录为例如 a-&gt;3-&gt;b 的形式，即把编号为3的盘子从a杆移至b杆。</p><h3 id="【输入样例】-10">【输入样例】</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">2</span> <br><span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">b</span> c<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-10">【输出样例】</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">a-&gt;<span class="hljs-number">1</span>-&gt;c <br>a-&gt;<span class="hljs-number">2</span>-&gt;b <br>c-&gt;<span class="hljs-number">1</span>-&gt;b <br></code></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.csdn.net/lq1990717/article/details/124305944?ops_request_misc=%7B%22request%5Fid%22%3A%22171808175916800211573108%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=171808175916800211573108&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-124305944-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=1205%EF%BC%9A%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98&amp;spm=1018.2226.3001.4187">信息学奥赛一本通 1205：汉诺塔问题 | OpenJudge NOI 2.2 6261:汉诺塔问题_1205:汉诺塔问题-CSDN博客</a></p><p>将x杆上的k层汉诺塔移动到y杆上，借助z杆。</p><p>想要将x杆上的k层汉诺塔移动到y杆上，先要将k-1层汉诺塔移动到z杆上，借助y杆；</p><p>将x杆上第k层圆盘移动到y杆；</p><p>将z杆上的k-1层汉诺塔移动到y杆，借助x杆。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">hannota</span><span class="hljs-params">(<span class="hljs-type">int</span> n,<span class="hljs-type">char</span> x,<span class="hljs-type">char</span> y,<span class="hljs-type">char</span> z)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> ;<br>    <span class="hljs-built_in">hannota</span>(n<span class="hljs-number">-1</span>,x,z,y);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c-&gt;%d-&gt;%c\n&quot;</span>,x,n,y);<br>    <span class="hljs-built_in">hannota</span>(n<span class="hljs-number">-1</span>,z,y,x);    <br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">char</span> source,target,help;<br>    cin&gt;&gt;n&gt;&gt;source&gt;&gt;target&gt;&gt;help;<br>    <span class="hljs-built_in">hannota</span>(n,source,target,help);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1206：放苹果">1206：放苹果</h2><h3 id="【题目描述】-11">【题目描述】</h3><p>把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法。</p><h3 id="【输入】-11">【输入】</h3><p>第一行是测试数据的数目t（0&lt;=t&lt;=20）。以下每行均包含二个整数M和N，以空格分开。1&lt;=M，N&lt;=10。</p><h3 id="【输出】-11">【输出】</h3><p>对输入的每组数据M和N，用一行输出相应的K。</p><h3 id="【输入样例】-11">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">7 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-11">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">8<br></code></pre></td></tr></table></figure><p>(m,n)表示将m个苹果放到n个盘子总共有的方法，那么(m,n)可以从(m,n-1)种方法来，此时表示有一个盘子是空的；或者是所有盘子都有苹果，每个盘子都有一个苹果，然后将m-n个苹果放到n个盘子中，(m-n,n)</p><p>(m,n) = (m-n,n) + (m,n-1)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span>  <span class="hljs-title">distribution</span><span class="hljs-params">(<span class="hljs-type">int</span> m,<span class="hljs-type">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span> || m&lt;<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">distribution</span>(m-n,n) + <span class="hljs-built_in">distribution</span>(m,n<span class="hljs-number">-1</span>);<br>      <br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> t,m,n;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;t;i++)&#123;<br>        cin&gt;&gt;m&gt;&gt;n;<br>        cout&lt;&lt;<span class="hljs-built_in">distribution</span>(m,n)&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1207：求最大公约数问题">1207：求最大公约数问题</h2><h3 id="【题目描述】-12">【题目描述】</h3><p>给定两个正整数，求它们的最大公约数。</p><h3 id="【输入】-12">【输入】</h3><p>输入一行，包含两个正整数(&lt;1,000,000,000)。</p><h3 id="【输出】-12">【输出】</h3><p>输出一个正整数，即这两个正整数的最大公约数。</p><h3 id="【输入样例】-12">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-12">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><p>1.最简单的方法：从较小的数开始依次向下遍历(a,b,min(a,b)) = (a,b,min(a,b)-1)</p><p>2.辗转相减法：每次将较大的数减去较小的数，并将差放到较大的数上，如果两个数相等，则得到结果</p><p>3.辗转相除法：每次将较大的数取余较小的数，并将余数放到较大的数上，如果余数为0，则得到结果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//辗转相减法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span>  <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-type">int</span> m,<span class="hljs-type">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(m==n)<br>        <span class="hljs-keyword">return</span> m;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(m&gt;n)<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">gcd</span>(m-n,n);<br>        <span class="hljs-keyword">else</span>    <br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">gcd</span>(m,n-m);<br>    &#125;<br>      <br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> m,n;<br>    cin&gt;&gt;m&gt;&gt;n;<br>    cout&lt;&lt;<span class="hljs-built_in">gcd</span>(m,n)&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//辗转相除法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span>  <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-type">int</span> m,<span class="hljs-type">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(m%n==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> n;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">gcd</span>(n,m%n);<br>    &#125;<br>      <br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> m,n;<br>    cin&gt;&gt;m&gt;&gt;n;<br>    cout&lt;&lt;<span class="hljs-built_in">gcd</span>(m,n)&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1208：2的幂次方表示">1208：2的幂次方表示</h2><h3 id="【题目描述】-13">【题目描述】</h3><p>任何一个正整数都可以用2的幂次方表示。例如：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>137</mn><mo>=</mo><msup><mn>2</mn><mn>7</mn></msup><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">137=2^7+2^3+2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">137</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></p><p>同时约定方次用括号来表示，即ab可表示为a(b)。由此可知，137可表示为：</p><p>2(7)+2(3)+2(0)</p><p>进一步：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>=</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>2</mn><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">7=2^2+2+2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">2^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>用2表示）</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>=</mo><mn>2</mn><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">3=2+2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></p><p>所以最后137可表示为：</p><p>2(2(2)+2+2(0))+2(2+2(0))+2(0)</p><p>又如：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1315</mn><mo>=</mo><msup><mn>2</mn><mn>10</mn></msup><mo>+</mo><msup><mn>2</mn><mn>8</mn></msup><mo>+</mo><msup><mn>2</mn><mn>5</mn></msup><mo>+</mo><mn>2</mn><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">1315=2^{10}+2^8+2^5+2+2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1315</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></p><p>所以1315最后可表示为：</p><p>2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)</p><h3 id="【输入】-13">【输入】</h3><p>一个正整数n（n≤20000）。</p><h3 id="【输出】-13">【输出】</h3><p>一行，符合约定的n的0，2表示（在表示中不能有空格）。</p><h3 id="【输入样例】-13">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">137<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-13">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>(<span class="hljs-number">2</span>(<span class="hljs-number">2</span>)+<span class="hljs-number">2</span>+<span class="hljs-number">2</span>(<span class="hljs-number">0</span>))+<span class="hljs-number">2</span>(<span class="hljs-number">2</span>+<span class="hljs-number">2</span>(<span class="hljs-number">0</span>))+<span class="hljs-number">2</span>(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>参考：</p><p>[信息学奥赛一本通 1208：2的幂次方表示 | OpenJudge NOI 2.2 8758:2的幂次方表示 | 洛谷 P1010 <a href="https://blog.csdn.net/lq1990717/article/details/124308743?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=1208%EF%BC%9A2%E7%9A%84%E5%B9%82%E6%AC%A1%E6%96%B9%E8%A1%A8%E7%A4%BA&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-124308743.142%5Ev100%5Epc_search_result_base1&amp;spm=1018.2226.3001.4187">NOIP1998 普及组] 幂次方_1208:2的幂次方表示-CSDN博客</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function">string <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span><br><span class="hljs-function"></span>&#123;<br>    string s;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> a = k, i = <span class="hljs-number">0</span>; a &gt; <span class="hljs-number">0</span>; a /= <span class="hljs-number">2</span>, i++)<span class="hljs-comment">//其中一项为a%2*2^i</span><br>    &#123;<br>        <span class="hljs-keyword">if</span>(a%<span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span>)<br>                s = <span class="hljs-string">&quot;2(0)+&quot;</span> + s;<span class="hljs-comment">//逆序构造字符串，需要将新得到的字符串接在s的前面 </span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span>)<br>                s = <span class="hljs-string">&quot;2+&quot;</span> + s;<br>            <span class="hljs-keyword">else</span><br>                s = <span class="hljs-string">&quot;2(&quot;</span> + <span class="hljs-built_in">solve</span>(i) + <span class="hljs-string">&quot;)+&quot;</span> + s;                <br>        &#125;<br>    &#125;<br>    s.<span class="hljs-built_in">pop_back</span>();<span class="hljs-comment">//如果如上述方法构造字符串，最后末尾会多一个&quot;+&quot;，将这个&quot;+&quot;删掉。</span><br>    <span class="hljs-keyword">return</span> s;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin &gt;&gt; n;<br>cout &lt;&lt; <span class="hljs-built_in">solve</span>(n);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1209：分数求和">1209：分数求和</h2><h3 id="【题目描述】-14">【题目描述】</h3><p>输入n个分数并对他们求和，并用最简形式表示。所谓最简形式是指：分子分母的最大公约数为1；若最终结果的分母为1，则直接用整数表示。</p><p>如：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>5</mn><mn>6</mn></mfrac><mtext>、</mtext><mfrac><mn>10</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{5}{6}、\frac{10}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>均是最简形式，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>3</mn><mn>6</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>需要化简为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>3</mn><mn>1</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{3}{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>需要化简为3。</p><p>分子和分母均不为0，也不为负数。</p><h3 id="【输入】-14">【输入】</h3><p>第一行是一个整数n，表示分数个数，1≤n≤10；</p><p>接下来n行，每行一个分数，用&quot;p/q&quot;的形式表示，不含空格，p，q均不超过10。</p><h3 id="【输出】-14">【输出】</h3><p>输出只有一行，即最终结果的最简形式。若为分数，用&quot;p/q&quot;的形式表示。</p><h3 id="【输入样例】-14">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><br><span class="hljs-number">1</span>/<span class="hljs-number">2</span> <br><span class="hljs-number">1</span>/<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-14">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">5</span>/<span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><p>先将其用字符串形式输入，将分母求出最小公倍数，然后分子累加。对累加后的分子分母求最大公约数，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-type">int</span> m,<span class="hljs-type">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(m%n==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> n;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">gcd</span>(n,m%n);<br>    &#125;    <br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">lcm</span><span class="hljs-params">(<span class="hljs-type">int</span> m,<span class="hljs-type">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> m*n/<span class="hljs-built_in">gcd</span>(m,n);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,a[<span class="hljs-number">15</span>],b[<span class="hljs-number">15</span>];<br>    <span class="hljs-type">char</span> c;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        cin&gt;&gt;a[i]&gt;&gt;c&gt;&gt;b[i];<br>    <span class="hljs-type">int</span> q = b[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>        q = <span class="hljs-built_in">lcm</span>(q,b[i]);<br>    <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        p += a[i]*q/b[i];<br>    <span class="hljs-type">int</span> m = <span class="hljs-built_in">gcd</span>(p,q);<br>    cout&lt;&lt;p/m;<br>    <span class="hljs-keyword">if</span>(q/m != <span class="hljs-number">1</span>)<br>        cout&lt;&lt;<span class="hljs-string">&#x27;/&#x27;</span>&lt;&lt;q/m;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1210：因子分解">1210：因子分解</h2><h3 id="【题目描述】-15">【题目描述】</h3><p>输入一个数，输出其素因子分解表达式。</p><h3 id="【输入】-15">【输入】</h3><p>输入一个整数 n𝑛 (2≤n&lt;100)。</p><h3 id="【输出】-15">【输出】</h3><p>输出该整数的因子分解表达式。</p><p>表达式中各个素数从小到大排列。</p><p>如果该整数可以分解出因子a的b次方，当b大于1时，写做 <code>a^b</code> ；当b等于1时，则直接写成a。</p><h3 id="【输入样例】-15">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">60<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-15">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>^<span class="hljs-number">2</span>*<span class="hljs-number">3</span>*<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>分解质因数，如果某一个质因数能分解就让他一直分解直到分解不了，进入下一个质因数分解，记录分解多少次，当需要分解的数小于质因数，就设置质因数边界并退出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> dp[<span class="hljs-number">105</span>],maxlen=<span class="hljs-number">1</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">division</span><span class="hljs-params">(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> k)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(n&lt;k)&#123;<br>        maxlen = k;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(n%k==<span class="hljs-number">0</span>)&#123;<br>        n /= k;<br>        dp[k]++;<br>    &#125;<br>    <span class="hljs-built_in">division</span>(n,k+<span class="hljs-number">1</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(dp));<br>    <span class="hljs-built_in">division</span>(n,<span class="hljs-number">2</span>);<br>    <span class="hljs-type">bool</span> isFirst = <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=maxlen;i++)&#123;<br>        <span class="hljs-keyword">if</span> (dp[i]&gt;<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!isFirst)<br>                cout&lt;&lt;<span class="hljs-string">&quot;*&quot;</span>;<br>            isFirst = <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">if</span>(dp[i]&gt;<span class="hljs-number">1</span>)<br>                cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&#x27;^&#x27;</span>&lt;&lt;dp[i];<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dp[i]==<span class="hljs-number">1</span>)<br>                cout&lt;&lt;i;           <br>        &#125;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1211：判断元素是否存在">1211：判断元素是否存在</h2><h3 id="【题目描述】-16">【题目描述】</h3><p>有一个集合M是这样生成的：(1) 已知k是集合M的元素； (2) 如果y是M的元素，那么，2y+1和3y+1都是M的元素；(3) 除了上述二种情况外，没有别的数能够成为M的一个元素。</p><p>问题：任意给定k和x，请判断x是否是M的元素。这里的k是无符号整数，x 不大于 100000，如果是，则输出YES，否则，输出NO。</p><h3 id="【输入】-16">【输入】</h3><p>输入整数 k 和 x, 逗号间隔。</p><h3 id="【输出】-16">【输出】</h3><p>如果是，则输出 YES，否则，输出NO。</p><h3 id="【输入样例】-16">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>,<span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-16">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><p>如果y是M的元素，那么，2y+1和3y+1都是M的元素，可以转换成，如果y-1能被2或者3整除，那么看(y-1)/2或者(y-1)/3是否在集合中，最终目的是要递归找到一个数能否等于k</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> k;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isExist</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x==k)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-type">bool</span> b1 = (x<span class="hljs-number">-1</span>)%<span class="hljs-number">2</span>==<span class="hljs-number">0</span> ? <span class="hljs-built_in">isExist</span>((x<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>):<span class="hljs-literal">false</span>;<br>        <span class="hljs-type">bool</span> b2 = (x<span class="hljs-number">-1</span>)%<span class="hljs-number">3</span>==<span class="hljs-number">0</span> ? <span class="hljs-built_in">isExist</span>((x<span class="hljs-number">-1</span>)/<span class="hljs-number">3</span>):<span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">return</span> b1 || b2;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> x;<br>    <span class="hljs-type">char</span> c;<br>    cin&gt;&gt;k&gt;&gt;c&gt;&gt;x;<br>    cout&lt;&lt;(<span class="hljs-built_in">isExist</span>(x)? <span class="hljs-string">&quot;YES&quot;</span>:<span class="hljs-string">&quot;NO&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>c++基础</title>
    <link href="/2024/04/23/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"/>
    <url>/2024/04/23/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="2063-牛吃牧草">2063.牛吃牧草</h2><h3 id="【题目描述】">【题目描述】</h3><p>有一个牧场，牧场上的牧草每天都在匀速生长，这片牧场可供15头牛吃20天，或可供20头牛吃10天，那么，这片牧场每天新生的草量可供几头牛吃1天？</p><h3 id="【输入】">【输入】</h3><p>（无）</p><h3 id="【输出】">【输出】</h3><p>如题述，牛的数量。</p><h3 id="【分析】">【分析】</h3><p>二元一次方程，设牧草一天长x，一头牛一天吃y牧草，牧场原有的总牧草z</p><p>15*20y=20x+z</p><p>20*10y=10x+z</p><p>result=x/y</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;10&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1003-对齐输出">1003.对齐输出</h2><h3 id="【题目描述】-2">【题目描述】</h3><p>读入三个整数，按每个整数占8个字符的宽度，右对齐输出它们，按照格式要求依次输出三个整数，之间以一个空格分开。</p><h3 id="【输入】-2">【输入】</h3><p>只有一行，包含三个整数，整数之间以一个空格分开。</p><h3 id="【输出】-2">【输出】</h3><p>只有一行，按照格式要求依次输出三个整数，之间以一个空格分开。</p><h3 id="【输入样例】">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">123456789 </span><span class="hljs-number">0</span> -<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">123456789 </span>      <span class="hljs-number">0</span>      -<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【分析】-2">【分析】</h3><p>使用printf(“%8d”,a)格式化输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%8d %8d %8d&quot;</span>,a,b,c);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1004-字符三角形">1004.字符三角形</h2><h3 id="【题目描述】-3">【题目描述】</h3><p>给定一个字符，用它构造一个底边长5个字符，高3个字符的等腰字符三角形。</p><h3 id="【输入】-3">【输入】</h3><p>输入只有一行，包含一个字符。</p><h3 id="【输出】-3">【输出】</h3><p>该字符构成的等腰三角形，底边长5个字符，高3个字符。</p><h3 id="【输入样例】-2">【输入样例】</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-comment">*</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-2">【输出样例】</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-comment">  * </span><br><span class="hljs-comment"> *** </span><br><span class="hljs-comment">*****</span><br></code></pre></td></tr></table></figure><h3 id="【分析】-3">【分析】</h3><p>第一行先输出2个空格，再输出一个字符，</p><p>第二行先输出1个空格，再输出三个字符</p><p>第三行直接输出五个字符</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">char</span> zifu;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;zifu&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)<br>cout&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;(<span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>);j++)<br>cout&lt;&lt;zifu;<br>cout&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2064：交换值">2064：交换值</h2><h3 id="【题目描述】-4">【题目描述】</h3><p>输入两个正整数a和b，试交换a、b的值（使a的值等于b，b的值等于a）。</p><h3 id="【输入】-4">【输入】</h3><p>输入两个正整数a和b。</p><h3 id="【输出】-4">【输出】</h3><p>输出a与b交换值后的结果。</p><h3 id="【输入样例】-3">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-3">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b;<br><span class="hljs-type">int</span> tmp;<br>cin&gt;&gt;a&gt;&gt;b;<br>tmp = a;<br>a = b;<br>b = tmp;<br>cout&lt;&lt;a&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;b;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2065：整数的和">2065：整数的和</h2><h3 id="【题目描述】-5">【题目描述】</h3><p>求3个整数的和。</p><p>输入a、b、c这3个整数，求它们的和。</p><h3 id="【输入】-5">【输入】</h3><p>3个整数。</p><h3 id="【输出】-5">【输出】</h3><p>三个数的和。</p><h3 id="【输入样例】-4">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-4">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>cout&lt;&lt;a+b+c;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2066：买图书">2066：买图书</h2><h3 id="【题目描述】-6">【题目描述】</h3><p>已知小明有n元，他买了一本书，这本书原价为m元，现在打8折出售。求小明还剩多少钱(保留2位小数)。</p><h3 id="【输入】-6">【输入】</h3><p>输入n,m。</p><h3 id="【输出】-6">【输出】</h3><p>小明还剩多少钱(保留2位小数)。</p><h3 id="【输入样例】-5">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">100 </span><span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-5">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">20</span>.<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,m;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>, n-m*<span class="hljs-number">0.8</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1006：A-B问题">1006：A+B问题</h2><h3 id="【题目描述】-7">【题目描述】</h3><p>大部分的在线题库，都会将A+B问题作为第一题，以帮助新手熟悉平台的使用方法。</p><p>A+B问题的题目描述如下：给定两个整数A和B，输出A+B的值。保证A、B及结果均在整型范围内。现在请你解决这一问题。</p><h3 id="【输入】-7">【输入】</h3><p>一行，包含两个整数A，B，中间用单个空格隔开。A和B均在整型范围内。</p><h3 id="【输出】-7">【输出】</h3><p>一个整数，即A+B的值。保证结果在整型范围内。</p><h3 id="【输入样例】-6">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-6">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,m;<br>cin&gt;&gt;n&gt;&gt;m;<br>cout&lt;&lt;n+m;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1007：计算-a-b-×c的值">1007：计算(a+b)×c的值</h2><h3 id="【题目描述】-8">【题目描述】</h3><p>给定33个整数a、b、c，计算表达式(a+b)×c的值。</p><h3 id="【输入】-8">【输入】</h3><p>输入仅一行，包括三个整数a、b、c数与数之间以一个空格分开。(－10,000&lt;a,b,c&lt;10,000)</p><h3 id="【输出】-8">【输出】</h3><p>输出一行，即表达式的值。</p><h3 id="【输入样例】-7">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">3</span> <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-7">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">25<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>cout&lt;&lt;(a+b)*c;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1008：计算-a-b-c的值">1008：计算(a+b)/c的值</h2><h3 id="【题目描述】-9">【题目描述】</h3><p>给定33个整数a、b、c，计算表达式(a+b)/c的值。</p><h3 id="【输入】-9">【输入】</h3><p>输入仅一行，包括三个整数a、b、c, 数与数之间以一个空格分开。(－10,000&lt;a,b,c&lt;10,000, c不等于00)</p><h3 id="【输出】-9">【输出】</h3><p>输出一行，即表达式的值。</p><h3 id="【输入样例】-8">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-8">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">0<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>cout&lt;&lt;(a+b)/c;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1009：带余除法">1009：带余除法</h2><h3 id="【题目描述】-10">【题目描述】</h3><p>给定被除数和除数，求整数商及余数。此题中请使用默认的整除和取余运算，无需对结果进行任何特殊处理。</p><h3 id="【输入】-10">【输入】</h3><p>一行，包含两个整数，依次为被除数和除数（除数非零），中间用一个空格隔开。</p><h3 id="【输出】-10">【输出】</h3><p>一行，包含两个整数，依次为整数商和余数，中间用一个空格隔开。</p><h3 id="【输入样例】-9">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-9">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b;<br>cin&gt;&gt;a&gt;&gt;b;<br>cout&lt;&lt;a/b&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a%b;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1010：计算分数的浮点数值">1010：计算分数的浮点数值</h2><h3 id="【题目描述】-11">【题目描述】</h3><p>两个整数a和b分别作为分子和分母，既分数a/b，求它的浮点数值(双精度浮点数，保留小数点后9位)。</p><h3 id="【输入】-11">【输入】</h3><p>输入仅一行，包括两个整数a和b。</p><h3 id="【输出】-11">【输出】</h3><p>输出也仅一行，分数a/b的浮点数值（双精度浮点数，保留小数点后9位）。</p><h3 id="【输入样例】-10">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-10">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>.<span class="hljs-number">714285714</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b;<br>cin&gt;&gt;a&gt;&gt;b;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.9f&quot;</span>,<span class="hljs-number">1.0</span>*a/b);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第二节-常量和变量">第二节 常量和变量</h2><h2 id="2067：圆">2067：圆</h2><h3 id="【题目描述】-12">【题目描述】</h3><p>输入半径r，输出圆的直径、周长、面积，数与数之间以一个空格分开，每个数保留小数点后4位。</p><h3 id="【输入】-12">【输入】</h3><p>输入半径。</p><h3 id="【输出】-12">【输出】</h3><p>如题述。数与数之间以一个空格分开。</p><h3 id="【输入样例】-11">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-11">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">0000</span> <span class="hljs-number">6</span>.<span class="hljs-number">2832</span> <span class="hljs-number">3</span>.<span class="hljs-number">1416</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> r;<br>cin&gt;&gt;r;<br><span class="hljs-type">double</span> pi = <span class="hljs-number">3.1415926</span>;<br><span class="hljs-type">double</span> d = <span class="hljs-number">2</span>*r;<br><span class="hljs-type">double</span> zhouchang = pi*d;<br><span class="hljs-type">double</span> mianji = pi*r*r;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f %.4f %.4f&quot;</span>,d,zhouchang,mianji);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2068：鸡兔同笼">2068：鸡兔同笼</h2><h3 id="【题目描述】-13">【题目描述】</h3><p>数学中经典的“鸡兔同笼”问题，已知头共x个，脚共y只，问笼中的鸡和兔各有多少只?</p><h3 id="【输入】-13">【输入】</h3><p>头和脚的数量。</p><h3 id="【输出】-13">【输出】</h3><p>鸡和兔各自数量。一个空格隔开。</p><h3 id="【输入样例】-12">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">30 </span><span class="hljs-number">90</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-12">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">15 </span><span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y,ji,tu;<br>cin&gt;&gt;x&gt;&gt;y;<br>ji = (<span class="hljs-number">4</span>*x-y)/<span class="hljs-number">2</span>;<br>tu = (y<span class="hljs-number">-2</span>*x)/<span class="hljs-number">2</span>;<br>cout&lt;&lt;ji&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;tu;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1011：甲流疫情死亡率">1011：甲流疫情死亡率</h2><h3 id="【题目描述】-14">【题目描述】</h3><p>甲流并不可怕，在中国，它的死亡率并不是很高。请根据截止2009年12月22日各省报告的甲流确诊数和死亡数，计算甲流在各省的死亡率。</p><h3 id="【输入】-14">【输入】</h3><p>输入仅一行，有两个整数，第一个为确诊数，第二个为死亡数。</p><h3 id="【输出】-14">【输出】</h3><p>输出仅一行，甲流死亡率，以百分数形式输出，精确到小数点后3位。</p><h3 id="【输入样例】-13">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10433 </span><span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-13">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>.<span class="hljs-number">575</span>%<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f%c&quot;</span>,<span class="hljs-number">100.0</span>*y/x,<span class="hljs-string">&#x27;%&#x27;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1012：计算多项式的值">1012：计算多项式的值</h2><h3 id="【题目描述】-15">【题目描述】</h3><p>对于多项式</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>b</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>c</mi><mi>x</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">f(x)=ax^3+bx^2+cx+d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span></span></p><p>和给定的a,b,c,d,x，计算f(x)的值，保留到小数点后7位。</p><h3 id="【输入】-15">【输入】</h3><p>输入仅一行，包含5个实数，分别是x，及参数a、b、c、d的值，每个数都是绝对值不超过100的双精度浮点数。数与数之间以一个空格分开。</p><h3 id="【输出】-15">【输出】</h3><p>输出一个实数，即f(x)的值，保留到小数点后7位。</p><h3 id="【输入样例】-14">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">31</span> <span class="hljs-number">1</span>.<span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-14">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">33</span>.<span class="hljs-number">0838692</span><br></code></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs llvm">#include&lt;iostream&gt;<br>using namespace std<span class="hljs-comment">;</span><br>int main()&#123;<br><span class="hljs-keyword">double</span> <span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span>a<span class="hljs-punctuation">,</span>b<span class="hljs-punctuation">,</span><span class="hljs-keyword">c</span><span class="hljs-punctuation">,</span>d<span class="hljs-comment">;</span><br>cin&gt;&gt;<span class="hljs-keyword">x</span>&gt;&gt;a&gt;&gt;b&gt;&gt;<span class="hljs-keyword">c</span>&gt;&gt;d<span class="hljs-comment">;</span><br><span class="hljs-keyword">double</span> f <span class="hljs-operator">=</span> a*<span class="hljs-keyword">x</span>*<span class="hljs-keyword">x</span>*<span class="hljs-keyword">x</span> + b*<span class="hljs-keyword">x</span>*<span class="hljs-keyword">x</span> + <span class="hljs-keyword">c</span>*<span class="hljs-keyword">x</span> + d<span class="hljs-comment">;</span><br>printf(<span class="hljs-string">&quot;%.7f&quot;</span><span class="hljs-punctuation">,</span>f)<span class="hljs-comment">;</span><br>return <span class="hljs-number">0</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1013：温度表达转化">1013：温度表达转化</h2><h3 id="【题目描述】-16">【题目描述】</h3><p>利用公式 C=5×(F−32)÷9(其中C表示摄氏温度，F表示华氏温度)进行计算转化,输入华氏温度F，输出摄氏温度C，要求精确到小数点后5位。</p><h3 id="【输入】-16">【输入】</h3><p>输入一行，包含一个实数F，表示华氏温度。（F≥−459.67）</p><h3 id="【输出】-16">【输出】</h3><p>输出一行，包含一个实数，表示对应的摄氏温度，要求精确到小数点后5位。</p><h3 id="【输入样例】-15">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">41<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-15">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">5</span>.<span class="hljs-number">00000</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> F;<br>cin&gt;&gt;F;<br><span class="hljs-type">double</span> C=<span class="hljs-number">5</span>*(F<span class="hljs-number">-32</span>)/<span class="hljs-number">9</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.5f&quot;</span>,C);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1014：与圆相关的计算">1014：与圆相关的计算</h2><h3 id="【题目描述】-17">【题目描述】</h3><p>给出圆的半径，求圆的直径、周长和面积。输入圆的半径实数r，输出圆的直径、周长、面积，每个数保留小数点后4位。圆周率取值为3.14159。</p><h3 id="【输入】-17">【输入】</h3><p>输入包含一个实数r（0&lt;r≤10,000），表示圆的半径。</p><h3 id="【输出】-17">【输出】</h3><p>输出一行，包含三个数，分别表示圆的直径、周长、面积，数与数之间以一个空格分开，每个数保留小数点后4位。</p><h3 id="【输入样例】-16">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-16">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>.<span class="hljs-number">0000</span> <span class="hljs-number">18</span>.<span class="hljs-number">8495</span> <span class="hljs-number">28</span>.<span class="hljs-number">2743</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> r;<br>cin&gt;&gt;r;<br><span class="hljs-type">double</span> pi = <span class="hljs-number">3.14159</span>;<br><span class="hljs-type">double</span> d = <span class="hljs-number">2</span>*r;<br><span class="hljs-type">double</span> zhouchang = pi*d;<br><span class="hljs-type">double</span> mianji = pi*r*r;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f %.4f %.4f&quot;</span>,d,zhouchang,mianji);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1015：计算并联电阻的阻值">1015：计算并联电阻的阻值</h2><h3 id="【题目描述】-18">【题目描述】</h3><p>对于阻值为 r1 和 r2 的电阻，其并联电阻阻值公式计算如下：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mfrac><mn>1</mn><msub><mi>r</mi><mn>1</mn></msub></mfrac><mo>+</mo><mfrac><mn>1</mn><msub><mi>r</mi><mn>2</mn></msub></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">R=\frac{1}{\frac{1}{r_1}+\frac{1}{r_2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5016em;vertical-align:-1.1802em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.2649em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1802em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>输入两个电阻阻抗大小，浮点型。输出并联之后的阻抗大小，结果保留小数点后2位。</p><h3 id="【输入】-18">【输入】</h3><p>两个电阻阻抗大小，浮点型，以一个空格分开。</p><h3 id="【输出】-18">【输出】</h3><p>并联之后的阻抗大小，结果保留小数点后2位。</p><h3 id="【输入样例】-17">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-17">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>.<span class="hljs-number">67</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> r1,r2;<br>cin&gt;&gt;r1&gt;&gt;r2;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,<span class="hljs-number">1</span>/(<span class="hljs-number">1</span>/r1 + <span class="hljs-number">1</span>/r2));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1414：成绩">1414：成绩</h2><h3 id="【题目描述】-19">【题目描述】</h3><p>牛牛最近学习了 C++入门课程，这门课程的总成绩计算方法是：</p><p>总成绩 = 作业成绩 × 20% + 小测成绩 × 30% + 期末考试成绩 × 50%</p><p>牛牛想知道，这门课程自己最终能得到多少分。</p><h3 id="【输入】-19">【输入】</h3><p>只有 1 行，包含三个非负整数A、B、C，分别表示牛牛的作业成绩、小测 成绩和期末考试成绩。相邻两个数之间用一个空格隔开，三项成绩满分都是 100 分。</p><h3 id="【输出】-19">【输出】</h3><p>只有 1 行，包含一个整数，即牛牛这门课程的总成绩，满分也是 100 分。</p><h3 id="【输入样例】-18">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">100 </span><span class="hljs-number">100</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-18">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">90<br></code></pre></td></tr></table></figure><h3 id="【提示】">【提示】</h3><p>【输入输出样例 1 说明】 牛牛的作业成绩是 100 分，小测成绩是 100 分，期末考试成绩是 80 分，总成 绩是 100 × 20% + 100 × 30% + 80 × 50% = 20 + 30 + 40 = 90。</p><p>【输入输出样例 2】</p><p>输入：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">60 </span><span class="hljs-number">90</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><p>输出:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">79<br></code></pre></td></tr></table></figure><p>【输入输出样例 2 说明】 牛牛的作业成绩是 60 分，小测成绩是 90 分，期末考试成绩是 80 分，总成绩是 60 × 20% + 90 × 30% + 80 × 50% = 12 + 27 + 40 = 79。</p><p>【数据说明】</p><p>对于 30% 的数据，A = B = 0。</p><p>对于另外 30% 的数据，A = B = 100。</p><p>对于 100% 的数据， 0 ≤ A、B、C ≤ 100 且 A、B、C 都是 10 的整数倍。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>cout&lt;&lt;a*<span class="hljs-number">0.2</span>+b*<span class="hljs-number">0.3</span>+c*<span class="hljs-number">0.5</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1016：整型数据类型存储空间大小">1016：整型数据类型存储空间大小</h2><h3 id="【题目描述】-20">【题目描述】</h3><p>分别定义int，short类型的变量各一个，并依次输出它们的存储空间大小(单位：字节)。</p><h3 id="【输入】-20">【输入】</h3><p>(无）</p><h3 id="【输出】-20">【输出】</h3><p>一行，两个整数，分别是两个变量的存储空间大小，用一个空格隔开。</p><h3 id="【输入样例】-19">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-19">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-title">std</span>;<br><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">main</span>()</span>&#123;<br><span class="hljs-built_in">int</span> a=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">short</span> b=<span class="hljs-number">0</span>;<br>cout&lt;&lt;<span class="hljs-keyword">sizeof</span>(a)&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;<span class="hljs-keyword">sizeof</span>(b);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1017：浮点型数据类型存储空间大小">1017：浮点型数据类型存储空间大小</h2><h3 id="【题目描述】-21">【题目描述】</h3><p>分别定义float，double类型的变量各一个，并依次输出它们的存储空间大小(单位：字节)。</p><h3 id="【输入】-21">【输入】</h3><p>（无）</p><h3 id="【输出】-21">【输出】</h3><p>一行，两个整数，分别是两个变量的存储空间大小，用一个空格隔开。</p><h3 id="【输入样例】-20">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-20">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-title">std</span>;<br><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">main</span>()</span>&#123;<br><span class="hljs-built_in">float</span> a=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">double</span> b=<span class="hljs-number">0</span>;<br>cout&lt;&lt;<span class="hljs-keyword">sizeof</span>(a)&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;<span class="hljs-keyword">sizeof</span>(b);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1018：其他数据类型存储空间大小">1018：其他数据类型存储空间大小</h2><h3 id="【题目描述】-22">【题目描述】</h3><p>分别定义bool，char类型的变量各一个，并依次输出它们的存储空间大小(单位：字节)。</p><h3 id="【输入】-22">【输入】</h3><p>（无）</p><h3 id="【输出】-22">【输出】</h3><p>一行，两个整数，分别是两个变量的存储空间大小，用一个空格隔开。</p><h3 id="【输入样例】-21">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-21">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-title">std</span>;<br><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">main</span>()</span>&#123;<br><span class="hljs-built_in">bool</span> a=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">char</span> b=<span class="hljs-number">0</span>;<br>cout&lt;&lt;<span class="hljs-keyword">sizeof</span>(a)&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;<span class="hljs-keyword">sizeof</span>(b);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1019：浮点数向零舍入">1019：浮点数向零舍入</h2><h3 id="【题目描述】-23">【题目描述】</h3><p>输入一个单精度浮点数，将其向零舍入到整数。说明：向零舍入的含义是，正数向下舍入，负数向上舍入。提示：可以使用强制类型转换来实现。</p><h3 id="【输入】-23">【输入】</h3><p>一个单精度浮点数。</p><h3 id="【输出】-23">【输出】</h3><p>一个整数，即向零舍入到整数的结果。</p><h3 id="【输入样例】-22">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-22">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">float</span> a;<br>cin&gt;&gt;a;<br>cout&lt;&lt;<span class="hljs-built_in">int</span>(a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1020：打印ASCII码">1020：打印ASCII码</h2><h3 id="【题目描述】-24">【题目描述】</h3><p>输入一个除空格以外的可见字符（保证在函数scanf中可使用格式说明符%c读入），输出其ASCII码。</p><h3 id="【输入】-24">【输入】</h3><p>一个除空格以外的可见字符。</p><h3 id="【输出】-24">【输出】</h3><p>一个十进制整数，即该字符的ASCII码。</p><h3 id="【输入样例】-23">【输入样例】</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-23">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">65<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">char</span> a;<br>cin&gt;&gt;a;<br>cout&lt;&lt;<span class="hljs-built_in">int</span>(a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1021：打印字符">1021：打印字符</h2><h3 id="【题目描述】-25">【题目描述】</h3><p>输入一个整数，即字符的ASCII码，保证存在对应的可见字符。输出相对应的字符。</p><h3 id="【输入】-25">【输入】</h3><p>一个整数，即字符的ASCII码，保证存在对应的可见字符。</p><h3 id="【输出】-25">【输出】</h3><p>一行，包含相应的字符。</p><h3 id="【输入样例】-24">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">65<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-24">【输出样例】</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a;<br>cin&gt;&gt;a;<br>cout&lt;&lt;<span class="hljs-built_in">char</span>(a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1022：整型与布尔型的转换">1022：整型与布尔型的转换</h2><h3 id="【题目描述】-26">【题目描述】</h3><p>将一个整型变量的值赋给一个布尔型变量，再将这个布尔型变量的值赋给一个整型变量，得到的值是多少？</p><h3 id="【输入】-26">【输入】</h3><p>一个整型范围内的整数，即初始时整型变量的值。</p><h3 id="【输出】-26">【输出】</h3><p>一个整数，经过上述过程后得到的结果。</p><h3 id="【输入样例】-25">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-25">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a;<br>cin&gt;&gt;a;<br>cout&lt;&lt;<span class="hljs-built_in">bool</span>(a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1023：Hello-World-的大小">1023：Hello,World!的大小</h2><h3 id="【题目描述】-27">【题目描述】</h3><p>我们曾经输出过的“<code>Hello, World!</code>”吗？它虽然不是本章所涉及的基本数据类型的数据，但我们同样可以用sizeof函数获得它所占用的空间大小。</p><h3 id="【输入】-27">【输入】</h3><p>（无）</p><h3 id="【输出】-27">【输出】</h3><p>一个整数，即“<code>Hello, World!</code>”的大小。</p><h3 id="【输入样例】-26">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-26">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>cout&lt;&lt;<span class="hljs-built_in">sizeof</span>(<span class="hljs-string">&quot;Hello, World!&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2069：糖果游戏">2069：糖果游戏</h2><h3 id="【题目描述】-28">【题目描述】</h3><p>某幼儿园里，有5个小朋友编号为1、2、3、4、5，他们按自己的编号顺序围坐在一张圆桌旁。他们身上都有若干个糖果(键盘输入)，现在他们做一个分糖果游戏。从1号小朋友开始，将自己的糖果均分三份（如果有多余的糖果，则立即吃掉），自己留一份，其余两份分给他的相邻的两个小朋友。接着2号、3号、4号、5号小朋友同样这么做。问一轮后，每个小朋友手上分别有多少糖果。</p><h3 id="【输入】-28">【输入】</h3><p>5个小朋友的糖果数。</p><h3 id="【输出】-28">【输出】</h3><p>游戏后5个小朋友的糖果数。(按5位宽度输出)</p><h3 id="【输入样例】-27">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">8 </span><span class="hljs-number">9</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-27">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">11 </span>   <span class="hljs-number">7</span>    <span class="hljs-number">9</span>   <span class="hljs-number">11</span>    <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> stu[<span class="hljs-number">5</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)<br>cin&gt;&gt;stu[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)&#123;<br>stu[i] = stu[i]/<span class="hljs-number">3</span>;<br>        stu[(i<span class="hljs-number">-1</span>+<span class="hljs-number">5</span>)%<span class="hljs-number">5</span>] += stu[i];<br>        stu[(i+<span class="hljs-number">1</span>)%<span class="hljs-number">5</span>] += stu[i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%5d&quot;</span>,stu[i]);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1024：保留3位小数的浮点数">1024：保留3位小数的浮点数</h2><h3 id="【题目描述】-29">【题目描述】</h3><p>读入一个单精度浮点数，保留3位小数输出这个浮点数。</p><h3 id="【输入】-29">【输入】</h3><p>只有一行，一个单精度浮点数。</p><h3 id="【输出】-29">【输出】</h3><p>也只有一行，读入的单精度浮点数。</p><h3 id="【输入样例】-28">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">12</span>.<span class="hljs-number">34521</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-28">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">12</span>.<span class="hljs-number">345</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">float</span> a;<br>cin&gt;&gt;a;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f&quot;</span>,a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1025：保留12位小数的浮点数">1025：保留12位小数的浮点数</h2><h3 id="【题目描述】-30">【题目描述】</h3><p>读入一个双精度浮点数，保留12位小数，输出这个浮点数。</p><h3 id="【输入】-30">【输入】</h3><p>只有一行，一个双精度浮点数。</p><h3 id="【输出】-30">【输出】</h3><p>也只有一行，保留12位小数的浮点数。</p><h3 id="【输入样例】-29">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">1415926535798932</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-29">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">141592653580</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> a;<br>cin&gt;&gt;a;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.12f&quot;</span>,a);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1026：空格分隔输出">1026：空格分隔输出</h2><h3 id="【题目描述】-31">【题目描述】</h3><p>读入一个字符，一个整数，一个单精度浮点数，一个双精度浮点数，然后按顺序输出它们，并且要求在他们之间用一个空格分隔。输出浮点数时保留6位小数。</p><h3 id="【输入】-31">【输入】</h3><p>第一行是一个字符；</p><p>第二行是一个整数；</p><p>第三行是一个单精度浮点数；</p><p>第四行是一个双精度浮点数。</p><h3 id="【输出】-31">【输出】</h3><p>输出字符、整数、单精度浮点数和双精度浮点数，之间用空格分隔。</p><h3 id="【输入样例】-30">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span> <span class="hljs-number">12</span> <span class="hljs-number">2</span>.<span class="hljs-number">3</span> <span class="hljs-number">3</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-30">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span> <span class="hljs-number">12</span> <span class="hljs-number">2</span>.<span class="hljs-number">300000</span> <span class="hljs-number">3</span>.<span class="hljs-number">200000</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">char</span> a;<br><span class="hljs-type">int</span> b;<br><span class="hljs-type">float</span> c;<br><span class="hljs-type">double</span> d;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c %d %.6f %.6f&quot;</span>,a,b,c,d);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1027：输出浮点数">1027：输出浮点数</h2><h3 id="【题目描述】-32">【题目描述】</h3><p>读入一个双精度浮点数，分别按输出格式“%f”，“%f”保留5位小数，“%e”和“%g”的形式输出这个整数，每次在单独一行上输出。</p><h3 id="【输入】-32">【输入】</h3><p>一个双精度浮点数。</p><h3 id="【输出】-32">【输出】</h3><p>第一行是按“%f”输出的双精度浮点数；</p><p>第二行是按“%f”保留5位小数输出的双精度浮点数；</p><p>第三行是按“%e”输出的双精度浮点数；</p><p>第四行是按“%g”输出的双精度浮点数。</p><h3 id="【输入样例】-31">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">12</span>.<span class="hljs-number">3456789</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-31">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">12</span>.<span class="hljs-number">345679</span> <span class="hljs-number">12</span>.<span class="hljs-number">34568</span> <span class="hljs-number">1</span>.<span class="hljs-number">234568</span>e+<span class="hljs-number">001</span> <span class="hljs-number">12</span>.<span class="hljs-number">3457</span> <br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> d;<br>cin&gt;&gt;d;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f %.5f %e %g&quot;</span>,d,d,d,d);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1028：字符菱形">1028：字符菱形</h2><h3 id="【题目描述】-33">【题目描述】</h3><p>给定一个字符，用它构造一个对角线长5个字符，倾斜放置的菱形。</p><h3 id="【输入】-33">【输入】</h3><p>输入只有一行， 包含一个字符。</p><h3 id="【输出】-33">【输出】</h3><p>该字符构成的菱形。</p><h3 id="【输入样例】-32">【输入样例】</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-comment">*</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-32">【输出样例】</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-comment">  * </span><br><span class="hljs-comment"> *** </span><br><span class="hljs-comment">***** </span><br><span class="hljs-comment"> ***  </span><br><span class="hljs-comment">  *</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">char</span> zifu;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;zifu&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)<br>cout&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;(<span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>);j++)<br>cout&lt;&lt;zifu;<br>cout&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;n;j++)<br>cout&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;(<span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>);j++)<br>cout&lt;&lt;zifu;<br>cout&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2070：数字对调">2070：数字对调</h2><h3 id="【题目描述】-34">【题目描述】</h3><p>输入一个三位数，要求把这个数的百位数与个位数对调，输出对调后的数。</p><h3 id="【输入】-34">【输入】</h3><p>三位数。</p><h3 id="【输出】-34">【输出】</h3><p>如题述结果。</p><h3 id="【输入样例】-33">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">123<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-33">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">321<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-type">int</span> gewei = n%<span class="hljs-number">10</span>;<br>n = n/<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> shiwei = n%<span class="hljs-number">10</span>;<br>n = n/<span class="hljs-number">10</span>;<br>n = gewei*<span class="hljs-number">100</span>+shiwei*<span class="hljs-number">10</span>+n;<br>cout&lt;&lt;n;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2071：平均分">2071：平均分</h2><h3 id="【题目描述】-35">【题目描述】</h3><p>已知某班有男同学x位，女同学y位，x位男生平均分是87分，y位女生的平均分是85，问全体同学平均分是多少分？</p><h3 id="【输入】-35">【输入】</h3><p>男女同学人数。</p><h3 id="【输出】-35">【输出】</h3><p>平均分（保留4位小数）。</p><h3 id="【输入样例】-34">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-34">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">85</span>.<span class="hljs-number">8000</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f&quot;</span>,<span class="hljs-number">1.0</span>*(<span class="hljs-number">87</span>*x+<span class="hljs-number">85</span>*y)/(x+y));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2072：歌手大奖赛">2072：歌手大奖赛</h2><h3 id="【题目描述】-36">【题目描述】</h3><p>歌手大奖赛上6名评委给一位参赛者打分，6个人打分的平均分为9.6分；如果去掉一个最高分，这名参赛者的平均分为9.4分；如果去掉一个最低分，这名参赛者的平均分为9.8分；如果去掉一个最高分和一个最低分，这名参赛者的平均是多少？</p><h3 id="【输入】-36">【输入】</h3><p>（无）</p><h3 id="【输出】-36">【输出】</h3><p>使用<code>%5.2f</code>按实数格式输出，保留2位小数。</p><h3 id="【输入样例】-35">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-35">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">（无）<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">float</span> avg = (<span class="hljs-number">6</span>*<span class="hljs-number">9.6</span>-(<span class="hljs-number">6</span>*<span class="hljs-number">9.6</span><span class="hljs-number">-5</span>*<span class="hljs-number">9.4</span>)-(<span class="hljs-number">6</span>*<span class="hljs-number">9.6</span><span class="hljs-number">-5</span>*<span class="hljs-number">9.8</span>))/<span class="hljs-number">4</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%5.2f&quot;</span>,avg);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2073：三角形面积">2073：三角形面积</h2><h3 id="【题目描述】-37">【题目描述】</h3><p>传说古代的叙拉古国王海伦二世发现的公式，利用三角形的三条边长来求取三角形面积。已知△ABC中的三边长分别为a,b,c，求△ABC的面积。</p><p>提示：海伦公式</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">s=\sqrt{(p(p−a)(p−b)(p−c))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mclose">))</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中p=(a+b+c)/2。</p><h3 id="【输入】-37">【输入】</h3><p>三角形的三条边长。</p><h3 id="【输出】-37">【输出】</h3><p>面积。（保留3位小数）</p><h3 id="【输入样例】-36">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">1</span> <span class="hljs-number">3</span>.<span class="hljs-number">1</span> <span class="hljs-number">4</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-36">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">179</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">float</span> a,b,c,p,s;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>p = <span class="hljs-number">1.0</span>*(a+b+c)/<span class="hljs-number">2</span>;<br>s = <span class="hljs-built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f&quot;</span>,s);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1029：计算浮点数相除的余">1029：计算浮点数相除的余</h2><h3 id="【题目描述】-38">【题目描述】</h3><p>计算两个双精度浮点数a和b的相除的余数，a和b都是双精度浮点数。这里余数（r）的定义是：a=k×b+r，其中k是整数，0≤r&lt;b。</p><h3 id="【输入】-38">【输入】</h3><p>输入仅一行，包括两个双精度浮点数a和b。</p><h3 id="【输出】-38">【输出】</h3><p>输出也仅一行，a÷b的余数。</p><h3 id="【输入样例】-37">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">73</span>.<span class="hljs-number">263</span> <span class="hljs-number">0</span>.<span class="hljs-number">9973</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-37">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>.<span class="hljs-number">4601</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b;<br>c = a - b*<span class="hljs-built_in">int</span>(a/b);<br>cout&lt;&lt;c;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1030：计算球的体积">1030：计算球的体积</h2><h3 id="【题目描述】-39">【题目描述】</h3><p>对于半径为 r的球，其体积的计算公式为</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>V</mi><mo>=</mo><mfrac><mn>4</mn><mn>3</mn></mfrac><mo>∗</mo><mi>π</mi><msup><mi>r</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">V=\frac{4}{3}*πr^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></p><p>这里取 π=3.14。现给定 r，即球半径，类型为double，求球的体积V，保留到小数点后22位。</p><h3 id="【输入】-39">【输入】</h3><p>输入为一个不超过 100 的非负实数，即球半径，类型为double。</p><h3 id="【输出】-39">【输出】</h3><p>输出一个实数，即球的体积，保留到小数点后 2 位。</p><h3 id="【输入样例】-38">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">4<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-38">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">267</span>.<span class="hljs-number">95</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> r,pi=<span class="hljs-number">3.14</span>;<br>cin&gt;&gt;r;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,<span class="hljs-number">1.0</span>*<span class="hljs-number">4</span>/<span class="hljs-number">3</span>*pi*r*r*r);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1031：反向输出一个三位数">1031：反向输出一个三位数</h2><h3 id="【题目描述】-40">【题目描述】</h3><p>将一个三位数反向输出，例如输入358，反向输出853。</p><h3 id="【输入】-40">【输入】</h3><p>一个三位数n。</p><h3 id="【输出】-40">【输出】</h3><p>反向输出n。</p><h3 id="【输入样例】-39">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">100<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-39">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">001<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>cout&lt;&lt;n%<span class="hljs-number">10</span>;<br>n = n/<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1032：大象喝水查">1032：大象喝水查</h2><h3 id="【题目描述】-41">【题目描述】</h3><p>一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。</p><h3 id="【输入】-41">【输入】</h3><p>输入有一行：包行两个整数，以一个空格分开，分别表示小圆桶的深h和底面半径r，单位都是厘米。</p><h3 id="【输出】-41">【输出】</h3><p>输出一行，包含一个整数，表示大象至少要喝水的桶数。</p><h3 id="【输入样例】-40">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">23 </span><span class="hljs-number">11</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-40">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> h,r,n;<br><span class="hljs-type">double</span> pi=<span class="hljs-number">3.14</span>;<br>cin&gt;&gt;h&gt;&gt;r;<br>n = <span class="hljs-built_in">ceil</span>(<span class="hljs-number">20000</span>/(h*pi*r*r));<br>cout&lt;&lt;n;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1033：计算线段长度">1033：计算线段长度</h2><h3 id="【题目描述】-42">【题目描述】</h3><p>已知线段的两个端点的坐标A(Xa,Ya)，B(Xb，Yb)，求线段AB的长度，保留到小数点后33位。</p><h3 id="【输入】-42">【输入】</h3><p>第一行是两个实数Xa，Ya，即A的坐标。</p><p>第二行是两个实数Xb，Yb即B的坐标。</p><p>输入中所有实数的绝对值均不超过10000。</p><h3 id="【输出】-42">【输出】</h3><p>一个实数，即线段AB的长度，保留到小数点后33位。</p><h3 id="【输入样例】-41">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-41">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.<span class="hljs-number">414</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> xa,ya,xb,yb;<br>cin&gt;&gt;xa&gt;&gt;ya&gt;&gt;xb&gt;&gt;yb;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f&quot;</span>,<span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">pow</span>(xa-xb,<span class="hljs-number">2</span>)+<span class="hljs-built_in">pow</span>(ya-yb,<span class="hljs-number">2</span>)));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1034：计算三角形面积">1034：计算三角形面积</h2><h3 id="【题目描述】-43">【题目描述】</h3><p>平面上有一个三角形，它的三个顶点坐标分别为(x1,y1),(x2,y2),(x3,y3)那么请问这个三角形的面积是多少，精确到小数点后两位。</p><h3 id="【输入】-43">【输入】</h3><p>输入仅一行，包括6个双精度浮点数，分别对应x1,y1,x2,y2,x3,y3。</p><h3 id="【输出】-43">【输出】</h3><p>输出也是一行，输出三角形的面积，精确到小数点后两位。</p><h3 id="【输入样例】-42">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-42">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">6</span>.<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><h3 id="【分析】-4">【分析】</h3><p>求边长，使用海伦公式</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">s=\sqrt{(p(p−a)(p−b)(p−c))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mclose">))</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中p=(a+b+c)/2。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> x1,y1,x2,y2,x3,y3,a,b,c,r;<br>cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;x3&gt;&gt;y3;<br>a = <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">pow</span>(x1-x2,<span class="hljs-number">2</span>)+<span class="hljs-built_in">pow</span>(y1-y2,<span class="hljs-number">2</span>));<br>b = <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">pow</span>(x3-x2,<span class="hljs-number">2</span>)+<span class="hljs-built_in">pow</span>(y3-y2,<span class="hljs-number">2</span>));<br>c = <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">pow</span>(x1-x3,<span class="hljs-number">2</span>)+<span class="hljs-built_in">pow</span>(y1-y3,<span class="hljs-number">2</span>));<br>r = (a+b+c)/<span class="hljs-number">2</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,<span class="hljs-built_in">sqrt</span>(r*(r-a)*(r-b)*(r-c)));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1035：等差数列末项计算">1035：等差数列末项计算</h2><h3 id="【题目描述】-44">【题目描述】</h3><p>给出一个等差数列的前两项a1，a2求第n项是多少。</p><h3 id="【输入】-44">【输入】</h3><p>一行，包含三个整数a1，a2，n。−100≤a1,a2≤100，0&lt;n≤1000。</p><h3 id="【输出】-44">【输出】</h3><p>一个整数，即第n项的值。</p><h3 id="【输入样例】-43">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">4</span> <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-43">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">298<br></code></pre></td></tr></table></figure><h3 id="【分析】-5">【分析】</h3><p>先求出等差数列的差，再计算第n项</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a1,a2,n,d;<br>cin&gt;&gt;a1&gt;&gt;a2&gt;&gt;n;<br>d = a2-a1;<br>cout&lt;&lt;a1+(n<span class="hljs-number">-1</span>)*d;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1036：A×B问题">1036：A×B问题</h2><h3 id="【题目描述】-45">【题目描述】</h3><p>输入两个正整数A和B，求A×B的值。注意乘积的范围和数据类型的选择。</p><h3 id="【输入】-45">【输入】</h3><p>一行，包含两个正整数A和B，中间用单个空格隔开。1≤A,B≤50000。</p><h3 id="【输出】-45">【输出】</h3><p>一个整数，即 A×B的值。</p><h3 id="【输入样例】-44">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-44">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">12<br></code></pre></td></tr></table></figure><h3 id="【分析】-6">【分析】</h3><p>注意整数用long类型</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> a,b;<br>cin&gt;&gt;a&gt;&gt;b;<br>cout&lt;&lt;a*b;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1037：计算2的幂">1037：计算2的幂</h2><h3 id="【题目描述】-46">【题目描述】</h3><p>给定非负整数n，求2^n的值，即2的n次方。</p><h3 id="【输入】-46">【输入】</h3><p>一个整数n。0≤n&lt;31。</p><h3 id="【输出】-46">【输出】</h3><p>一个整数，即2的n次方。</p><h3 id="【输入样例】-45">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-45">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">8<br></code></pre></td></tr></table></figure><h3 id="【分析】-7">【分析】</h3><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">占用字节数</th><th style="text-align:center">可表示数字范围</th></tr></thead><tbody><tr><td style="text-align:center">char</td><td style="text-align:center">1</td><td style="text-align:center">-127~128</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">2</td><td style="text-align:center">-32,768~32,767</td></tr><tr><td style="text-align:center">unsigned short</td><td style="text-align:center">2</td><td style="text-align:center">0~65,535</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">4</td><td style="text-align:center">-2,147,483,648~2,147,483,647</td></tr><tr><td style="text-align:center">unsigned int</td><td style="text-align:center">4</td><td style="text-align:center">0~4,294,967,295</td></tr><tr><td style="text-align:center">long long</td><td style="text-align:center">8</td><td style="text-align:center">-9,223,372,036,854,775,808~9,223,372,036,854,775,807</td></tr><tr><td style="text-align:center">unsigned long long</td><td style="text-align:center">8</td><td style="text-align:center">0~18,446,744,073,709,551,615</td></tr></tbody></table><p>2^30=1073741824 还在int的范围内，需要注意将科学计数法转换为整数类型(int)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br>cout&lt;&lt;(<span class="hljs-type">int</span>)<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,n);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1038：苹果和虫子">1038：苹果和虫子</h2><h3 id="【题目描述】-47">【题目描述】</h3><p>你买了一箱n个苹果，很不幸的是买完时箱子里混进了一条虫子。虫子每x小时能吃掉一个苹果，假设虫子在吃完一个苹果之前不会吃另一个，那么经过y小时你还有多少个完整的苹果？</p><h3 id="【输入】-47">【输入】</h3><p>输入仅一行，包括n，x和y（均为整数）。</p><h3 id="【输出】-47">【输出】</h3><p>输出也仅一行，剩下的苹果个数。</p><h3 id="【输入样例】-46">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><span class="hljs-number">4</span> <span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-46">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">7<br></code></pre></td></tr></table></figure><h3 id="【分析】-8">【分析】</h3><p>ceil()向上取整，可能出现吃的时间过长减的值是负数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,x,y,result;<br>cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;<br>result = n-<span class="hljs-built_in">ceil</span>(<span class="hljs-number">1.0</span>*y/x);<br><span class="hljs-keyword">if</span>(result &gt;=<span class="hljs-number">0</span>)<br>cout&lt;&lt;result;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&#x27;0&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>循环结构的程序设计</title>
    <link href="/2024/04/23/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    <url>/2024/04/23/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h1>循环结构的程序设计</h1><h2 id="–for循环">–for循环</h2><h2 id="2016：for循环求和">2016：for循环求和</h2><h3 id="【题目描述】">【题目描述】</h3><p>利用for循环。计算输出1+2+3+…+n的和。</p><h3 id="【输入】">【输入】</h3><p>输入n。</p><h3 id="【输出】">【输出】</h3><p>如题述，之和。</p><h3 id="【输入样例】">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">55<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,res=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>res += i;<br>cout&lt;&lt;res;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2017：输出偶数">2017：输出偶数</h2><h3 id="【题目描述】-2">【题目描述】</h3><p>按照由小到大的顺序，输出1∼n之间的所有偶数。</p><h3 id="【输入】-2">【输入】</h3><p>输入n。</p><h3 id="【输出】-2">【输出】</h3><p>输出为一行，各个偶数之间用一个空格隔开。</p><h3 id="【输入样例】-2">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-2">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">8</span> <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="【提示】">【提示】</h3><p>【数据规模及约定】</p><p>对于所有数据，1≤n≤100</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2018：输出奇偶数之和">2018：输出奇偶数之和</h2><h3 id="【题目描述】-3">【题目描述】</h3><p>利用for循环，分别输出1∼n之间的所有奇数的和、偶数的和。</p><h3 id="【输入】-3">【输入】</h3><p>输入n。</p><h3 id="【输出】-3">【输出】</h3><p>输出为一行，两个数(用一个空格隔开)，偶数之和与奇数之和。</p><h3 id="【输入样例】-3">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-3">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">30 </span><span class="hljs-number">25</span><br></code></pre></td></tr></table></figure><h3 id="【提示】-2">【提示】</h3><p>【数据规模及约定】</p><p>对于所有数据，1≤n≤100。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,jishu=<span class="hljs-number">0</span>,oushu=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>oushu += i;<br><span class="hljs-keyword">else</span><br>jishu += i;<br>&#125;<br>cout&lt;&lt;oushu&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;jishu;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2019：求阶乘">2019：求阶乘</h2><h3 id="【题目描述】-4">【题目描述】</h3><p>利用for循环求n!的值。</p><p>提示，n!=1×2×…×n。</p><h3 id="【输入】-4">【输入】</h3><p>输入一个正整数n。</p><h3 id="【输出】-4">【输出】</h3><p>输出n!的值。</p><h3 id="【输入样例】-4">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">4<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-4">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">24<br></code></pre></td></tr></table></figure><h3 id="【提示】-3">【提示】</h3><p>【数据规模及约定】</p><p>对于所有数据，1≤n≤20。</p><p>使用long型</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n,res=<span class="hljs-number">1</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>res *= i;<br>cout&lt;&lt;res;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1059：求平均年龄">1059：求平均年龄</h2><h3 id="【题目描述】-5">【题目描述】</h3><p>班上有学生若干名，给出每名学生的年龄（整数），求班上所有学生的平均年龄，保留到小数点后两位。</p><h3 id="【输入】-5">【输入】</h3><p>第一行有一个整数n（1≤n≤100），表示学生的人数。其后n行每行有1个整数，表示每个学生的年龄，取值为15到25。</p><h3 id="【输出】-5">【输出】</h3><p>输出一行，该行包含一个浮点数，为要求的平均年龄，保留到小数点后两位。</p><h3 id="【输入样例】-5">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><br><span class="hljs-symbol">18 </span><span class="hljs-number">17</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-5">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">17</span>.<span class="hljs-number">50</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,age[<span class="hljs-number">100</span>],res=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>cin&gt;&gt;age[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>res += age[i];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,<span class="hljs-number">1.0</span>*res/n);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1060：均值">1060：均值</h2><h3 id="【题目描述】-6">【题目描述】</h3><p>给出一组样本数据，包含n个浮点数，计算其均值，精确到小数点后4位。</p><h3 id="【输入】-6">【输入】</h3><p>输入有两行，第一行包含一个整数n（n小于100），代表样本容量；第二行包含n个绝对值不超过1000的浮点数，代表各个样本数据。</p><h3 id="【输出】-6">【输出】</h3><p>输出一行，包含一个浮点数，表示均值，精确到小数点后4位。</p><h3 id="【输入样例】-6">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><br><span class="hljs-number">1.0</span> <span class="hljs-number">3.0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-6">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">0000</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> age[<span class="hljs-number">100</span>],res=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>cin&gt;&gt;age[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>res += age[i];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f&quot;</span>,res/n);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1061：求整数的和与均值">1061：求整数的和与均值</h2><h3 id="【题目描述】-7">【题目描述】</h3><p>读入n(1≤n≤10000)个整数，求它们的和与均值。</p><h3 id="【输入】-7">【输入】</h3><p>输入第一行是一个整数n，表示有n个整数。</p><p>第2~n+1行每行包含1个整数。每个整数的绝对值均不超过10000。</p><h3 id="【输出】-7">【输出】</h3><p>输出一行，先输出和，再输出平均值(保留到小数点后5位)，两个数间用单个空格分隔。</p><h3 id="【输入样例】-7">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">344 </span><br><span class="hljs-symbol">222 </span><br><span class="hljs-symbol">343 </span><br><span class="hljs-number">222</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-7">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1131 </span><span class="hljs-number">282.75000</span><br></code></pre></td></tr></table></figure><p><strong>使用long型</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n,age[<span class="hljs-number">10000</span>],res=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>cin&gt;&gt;age[i];<br>res += age[i];<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %.5f&quot;</span>,res,<span class="hljs-number">1.0</span>*res/n);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1062：最高的分数">1062：最高的分数</h2><h3 id="【题目描述】-8">【题目描述】</h3><p>孙老师讲授的《计算概论》这门课期中考试刚刚结束，他想知道考试中取得的最高分数。因为人数比较多，他觉得这件事情交给计算机来做比较方便。你能帮孙老师解决这个问题吗？</p><h3 id="【输入】-8">【输入】</h3><p>输入两行，第一行为整数n（1 &lt;= n &lt; 100），表示参加这次考试的人数.第二行是这n个学生的成绩，相邻两个数之间用单个空格隔开。所有成绩均为0到100之间的整数。</p><h3 id="【输出】-8">【输出】</h3><p>输出一个整数，即最高的成绩。</p><h3 id="【输入样例】-8">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">85 </span><span class="hljs-number">78</span> <span class="hljs-number">90</span> <span class="hljs-number">99</span> <span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-8">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">99<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n,age[<span class="hljs-number">100</span>],max=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>cin&gt;&gt;age[i];<br><span class="hljs-keyword">if</span>(age[i]&gt;max)<br>max = age[i];<br>&#125;<br>cout&lt;&lt;max;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1063：最大跨度值">1063：最大跨度值</h2><h3 id="【题目描述】-9">【题目描述】</h3><p>给定一个长度为n的非负整数序列，请计算序列的最大跨度值(最大跨度值 = 最大值减去最小值)。</p><h3 id="【输入】-9">【输入】</h3><p>一共2行，第一行为序列的个数n（1 &lt;= n &lt;= 1000)，第二行为序列的n个不超过1000的非负整数，整数之间以一个空格分隔。</p><h3 id="【输出】-9">【输出】</h3><p>输出一行，表示序列的最大跨度值。</p><h3 id="【输入样例】-9">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><br><span class="hljs-symbol">3 </span><span class="hljs-number">0</span> <span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">5</span> <span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-9">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">9<br></code></pre></td></tr></table></figure><p><strong>设置min需要设置最大数不然可能取不到最小值</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n,age[<span class="hljs-number">1000</span>],min=<span class="hljs-number">1000</span>,max=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>cin&gt;&gt;age[i];<br><span class="hljs-keyword">if</span>(age[i]&gt;max)<br>max = age[i];<br><span class="hljs-keyword">if</span>(age[i]&lt;min)<br>min = age[i];<br>&#125;<br>cout&lt;&lt;max-min;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1064：奥运奖牌计数">1064：奥运奖牌计数</h2><h3 id="【题目描述】-10">【题目描述】</h3><p>2008年北京奥运会，A国的运动员参与了n天的决赛项目(1≤n≤17)。现在要统计一下A国所获得的金、银、铜牌数目及总奖牌数。输入第1行是A国参与决赛项目的天数n，其后n行，每一行是该国某一天获得的金、银、铜牌数目。输出4个整数，为A国所获得的金、银、铜牌总数及总奖牌数。</p><h3 id="【输入】-10">【输入】</h3><p>输入n＋1行，第1行是A国参与决赛项目的天数n，其后n行，每一行是该国某一天获得的金、银、铜牌数目，以一个空格分开。</p><h3 id="【输出】-10">【输出】</h3><p>输出1行，包括4个整数，为A国所获得的金、银、铜牌总数及总奖牌数，以一个空格分开。</p><h3 id="【输入样例】-10">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><br><span class="hljs-symbol">1 </span><span class="hljs-number">0</span> <span class="hljs-number">3</span> <br><span class="hljs-symbol">3 </span><span class="hljs-number">1</span> <span class="hljs-number">0</span> <br><span class="hljs-symbol">0 </span><span class="hljs-number">3</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-10">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">11</span><br></code></pre></td></tr></table></figure><p>二重循环，因为需要按下回车，换行导致输入结束，然后奖牌种类就三种</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include&lt;iostream&gt;</span><br>using namespace std;<br>int main()&#123;<br>int n,jiangpai,<span class="hljs-attribute">jin</span>=0,yin=0,tong=0,sum=0;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">i</span>=0;i&lt;n;i++)&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=0;j&lt;3;j++)&#123;<br>cin&gt;&gt;jiangpai;<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">j</span>==0)<br>jin += jiangpai;<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">j</span>==1)<br>yin += jiangpai;<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">j</span>==2)<br>tong += jiangpai;<br>sum += jiangpai;<br>&#125;<br>&#125;<br>cout&lt;&lt;jin&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;yin&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;tong&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;sum;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1065：奇数求和">1065：奇数求和</h2><h3 id="【题目描述】-11">【题目描述】</h3><p>计算非负整数m到n(包括m和n)之间的所有奇数的和，其中，m不大于 n，且n不大于300。例如 m=3,n=12, 其和则为：3+5+7+9+11=35。</p><h3 id="【输入】-11">【输入】</h3><p>两个数 m和 n，两个数以一个空格分开，其中 0≤m≤n≤300 。</p><h3 id="【输出】-11">【输出】</h3><p>输出一行，包含一个整数，表示m到 n（包括m和 n）之间的所有奇数的和</p><h3 id="【输入样例】-11">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">7 </span><span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-11">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">55<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> m,n,res=<span class="hljs-number">0</span>;<br>cin&gt;&gt;m&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>)<br>res += i;<br>&#125;<br>cout&lt;&lt;res;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1066：满足条件的数累加">1066：满足条件的数累加</h2><h3 id="【题目描述】-12">【题目描述】</h3><p>将正整数m和n之间(包括m和n)能被17整除的数累加，其中，0&lt;m&lt;n&lt;1000。</p><h3 id="【输入】-12">【输入】</h3><p>一行，包含两个整数m和n，其间，以一个空格间隔。</p><h3 id="【输出】-12">【输出】</h3><p>输出一行，包行一个整数，表示累加的结果。</p><h3 id="【输入样例】-12">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">50 </span><span class="hljs-number">85</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-12">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">204<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> m,n,res=<span class="hljs-number">0</span>;<br>cin&gt;&gt;m&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">17</span>==<span class="hljs-number">0</span>)<br>res += i;<br>&#125;<br>cout&lt;&lt;res;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1067：整数的个数">1067：整数的个数</h2><h3 id="【题目描述】-13">【题目描述】</h3><p>给定k(1&lt;k&lt;100)个正整数，其中每个数都是大于等于1，小于等于10的数。写程序计算给定的k个正整数中，1，5和10出现的次数。</p><h3 id="【输入】-13">【输入】</h3><p>输入有两行：第一行包含一个正整数k，第二行包含k个正整数，每两个正整数用一个空格分开。</p><h3 id="【输出】-13">【输出】</h3><p>输出有三行，第一行为1出现的次数，第二行为5出现的次数，第三行为10出现的次数。</p><h3 id="【输入样例】-13">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">1 </span><span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">10</span> <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-13">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><br><span class="hljs-symbol">2 </span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include&lt;iostream&gt;</span><br>using namespace std;<br>int main()&#123;<br>int n,num,<span class="hljs-attribute">one</span>=0,five=0,ten=0;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">i</span>=0;i&lt;n;i++)&#123;<br>        cin&gt;&gt;num;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-attribute">num</span>==1)<br>            one++;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-attribute">num</span>==5)<br>            five++;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-attribute">num</span>==10)<br>            ten++;<br>&#125;<br>cout&lt;&lt;one&lt;&lt;endl&lt;&lt;five&lt;&lt;endl&lt;&lt;ten&lt;&lt;endl;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1068：与指定数字相同的数的个数">1068：与指定数字相同的数的个数</h2><h3 id="【题目描述】-14">【题目描述】</h3><p>输出一个整数序列中与指定数字相同的数的个数。输入包含2行：第1行为N和m，表示整数序列的长度(N&lt;=100)和指定的数字；第2行为N个整数，整数之间以一个空格分开。输出为N个数中与m相同的数的个数。</p><h3 id="【输入】-14">【输入】</h3><p>第1行为N和m，表示整数序列的长度(N&lt;=100)和指定的数字， 中间用一个空格分开；</p><p>第2行为N个整数，整数之间以一个空格分开。</p><h3 id="【输出】-14">【输出】</h3><p>输出为N个数中与m相同的数的个数。</p><h3 id="【输入样例】-14">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <br><span class="hljs-symbol">2 </span><span class="hljs-number">3</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-14">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,m,num,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;num;<br>        <span class="hljs-keyword">if</span>(num==m)<br>            sum++;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1069：乘方计算">1069：乘方计算</h2><h3 id="【题目描述】-15">【题目描述】</h3><p>给出一个整数a和一个正整数n(−1000000≤a≤1000000，1≤n≤10000)，求乘方a^n，即乘方结果。最终结果的绝对值不超过1000000。</p><h3 id="【输入】-15">【输入】</h3><p>一行，包含两个整数a和n。−1000000≤a≤1000000，1≤n≤10000。</p><h3 id="【输出】-15">【输出】</h3><p>一个整数，即乘方结果。题目保证最终结果的绝对值不超过1000000。</p><h3 id="【输入样例】-15">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-15">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">8<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,m,sum=<span class="hljs-number">1</span>;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)&#123;<br>        sum *= n;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1070：人口增长">1070：人口增长</h2><h3 id="【题目描述】-16">【题目描述】</h3><p>我国现有x亿人口，按照每年0.1%的增长速度，n年后将有多少人？保留小数点后四位。</p><h3 id="【输入】-16">【输入】</h3><p>一行，包含两个整数x和n，分别是人口基数和年数，以单个空格分隔。</p><h3 id="【输出】-16">【输出】</h3><p>输出最后的人口数，以亿为单位，保留到小数点后四位。1&lt;=x&lt;=100,1&lt;=n&lt;=100。</p><h3 id="【输入样例】-16">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">13 </span><span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-16">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">13</span>.<span class="hljs-number">1306</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,n;<br>cin&gt;&gt;x&gt;&gt;n;<br><span class="hljs-type">double</span> sum = x;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        sum *= <span class="hljs-number">1.001</span>;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f&quot;</span>,sum);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1071：菲波那契数">1071：菲波那契数</h2><h3 id="【题目描述】-17">【题目描述】</h3><p>菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。给出一个正整数k，要求菲波那契数列中第k个数是多少。</p><h3 id="【输入】-17">【输入】</h3><p>输入一行，包含一个正整数k。（1 ≤ k ≤ 46）</p><h3 id="【输出】-17">【输出】</h3><p>输出一行，包含一个正整数，表示菲波那契数列中第k个数的大小。</p><h3 id="【输入样例】-17">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">19<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-17">【输出样例】</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">4181</span><br></code></pre></td></tr></table></figure><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-built_in">int</span> main()&#123;<br><span class="hljs-built_in">int</span> k,a1=<span class="hljs-number">1</span>,a2=<span class="hljs-number">1</span>,<span class="hljs-keyword">sum</span>;<br>cin&gt;&gt;k;<br><span class="hljs-keyword">if</span>(k==<span class="hljs-number">1</span> || k==<span class="hljs-number">2</span>)&#123;<br>cout&lt;&lt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">3</span>;i&lt;=k;i++)&#123;<br>        <span class="hljs-keyword">sum</span> = a1+a2;<br>        a1 = a2;<br>        a2 = <span class="hljs-keyword">sum</span>;<br>&#125;<br>cout&lt;&lt;<span class="hljs-keyword">sum</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1072：鸡尾酒疗法">1072：鸡尾酒疗法</h2><h3 id="【题目描述】-18">【题目描述】</h3><p>鸡尾酒疗法，指“高效抗逆转录病毒治疗”。人们在鸡尾酒疗法的基础上又提出了很多种改进的疗法。为了验证这些治疗方法是否在疗效上比鸡尾酒疗法更好，可用通过临床对照实验的方式进行。假设鸡尾酒疗法的有效率为x，新疗法的有效率为y，如果y-x大于5%，则效果更好，如果x-y大于5%，则效果更差，否则称为效果差不多。下面给出n组临床对照实验，其中第一组采用鸡尾酒疗法，其他n-1组为各种不同的改进疗法。请写程序判定各种改进疗法效果如何。</p><h3 id="【输入】-18">【输入】</h3><p>第一行为整数n（1&lt;n&lt;=20）；其余n行每行两个整数，第一个整数是临床实验的总病例数(小于等于10000)，第二个疗效有效的病例数。这n行数据中，第一行为鸡尾酒疗法的数据，其余各行为各种改进疗法的数据。</p><h3 id="【输出】-18">【输出】</h3><p>有n-1行输出，分别表示对应改进疗法的效果：如果效果更好，输出better；如果效果更差，输出worse；否则输出same。</p><h3 id="【输入样例】-18">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">125 </span><span class="hljs-number">99</span>  <br><span class="hljs-symbol">112 </span><span class="hljs-number">89</span> <br><span class="hljs-symbol">145 </span><span class="hljs-number">99</span> <br><span class="hljs-symbol">99 </span><span class="hljs-number">97</span> <br><span class="hljs-symbol">123 </span><span class="hljs-number">98</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-18">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">same </span><br><span class="hljs-attribute">worse </span><br><span class="hljs-attribute">better </span><br><span class="hljs-attribute">same</span><br></code></pre></td></tr></table></figure><p>有个用例过不去，整体是对的</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-title">std</span>;<br><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">main</span>()</span>&#123;<br><span class="hljs-built_in">int</span> n,total,valid;<br><span class="hljs-built_in">double</span> <span class="hljs-keyword">base</span>,improved;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>    cin&gt;&gt;total&gt;&gt;valid;<br>    <span class="hljs-keyword">if</span>(i==<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">base</span> = <span class="hljs-number">1.0</span>*valid/total;<br>    <span class="hljs-keyword">else</span>&#123;<br>    improved = <span class="hljs-number">1.0</span>*valid/total;<br>    <span class="hljs-keyword">if</span>(improved-<span class="hljs-keyword">base</span>&gt;<span class="hljs-number">0.05</span>)<br>    cout&lt;&lt;<span class="hljs-string">&quot;better&quot;</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">base</span>-improved&gt;<span class="hljs-number">0.05</span>)<br>                cout&lt;&lt;<span class="hljs-string">&quot;worse&quot;</span>&lt;&lt;endl;<br>            <span class="hljs-keyword">else</span><br>            cout&lt;&lt;<span class="hljs-string">&quot;same&quot;</span>&lt;&lt;endl;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1073：救援">1073：救援</h2><h3 id="【题目描述】-19">【题目描述】</h3><p>救生船从大本营出发，营救若干屋顶上的人回到大本营，屋顶数目以及每个屋顶的坐标和人数都将由输入决定，求出所有人都到达大本营并登陆所用的时间。</p><p>在直角坐标系的原点是大本营，救生船每次从大本营出发，救了人之后将人送回大本营。坐标系中的点代表屋顶，每个屋顶由其位置坐标和其上的人数表示。救生船每次从大本营出发，以速度50 米/分钟驶向下一个屋顶，达到一个屋顶后，救下其上的所有人，每人上船1分钟，船原路返回，达到大本营，每人下船0.5分钟。假设原点与任意一个屋顶的连线不穿过其它屋顶。</p><h3 id="【输入】-19">【输入】</h3><p>第一行，一个整数，表示屋顶数n。接下来依次有n 行输入，每一行上包含两个表示屋顶相对于大本营的平面坐标位置的实数(单位是米)、一个表示人数的整数。</p><h3 id="【输出】-19">【输出】</h3><p>救援需要的总时间，精确到分钟(向上取整)。</p><h3 id="【输入样例】-19">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">30</span> <span class="hljs-number">40</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-19">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">7<br></code></pre></td></tr></table></figure><p>注意xy坐标值是double类型，并且计算来回时间</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,num;<br><span class="hljs-type">double</span> x,y,time=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>    cin&gt;&gt;x&gt;&gt;y&gt;&gt;num;<br>    time += <span class="hljs-number">2</span>*<span class="hljs-built_in">sqrt</span>(x*x+y*y)/<span class="hljs-number">50</span>+num*<span class="hljs-number">1.5</span>;<br>&#125;<br>cout&lt;&lt;<span class="hljs-built_in">ceil</span>(time);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1074：津津的储蓄计划">1074：津津的储蓄计划</h2><h3 id="【题目描述】-20">【题目描述】</h3><p>津津的零花钱一直都是自己管理。每个月的月初妈妈给津津300元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。</p><p>为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上20％还给津津。因此津津制定了一个储蓄计划：每个月的月初，在得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于100元或恰好100元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。</p><p>例如11月初津津手中还有83元，妈妈给了津津300元。津津预计11月的花销是180元，那么她就会在妈妈那里存200元，自己留下183元。到了11月月末，津津手中会剩下3元钱。</p><p>现在请你根据2004年1月到12月每个月津津的预算，判断会不会出现这种情况。如果不会，计算到2004年年末，妈妈将津津平常存的钱加上20％还给津津之后，津津手中会有多少钱。</p><h3 id="【输入】-20">【输入】</h3><p>包括12行数据，每行包含一个小于350的非负整数，分别表示1月到12月津津的预算。</p><h3 id="【输出】-20">【输出】</h3><p>只包含一个整数。如果储蓄计划实施过程中出现某个月钱不够用的情况，输出-X，X表示出现这种情况的第一个月；否则输出到2004年年末津津手中会有多少钱。</p><h3 id="【输入样例】-20">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">290</span><br><span class="hljs-number">230</span><br><span class="hljs-number">280</span><br><span class="hljs-number">200</span><br><span class="hljs-number">300</span><br><span class="hljs-number">170</span><br><span class="hljs-number">340</span><br><span class="hljs-symbol">50 </span><br><span class="hljs-symbol">90 </span><br><span class="hljs-symbol">80 </span><br><span class="hljs-number">200</span><br><span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-20">【输出样例】</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-7</span><br></code></pre></td></tr></table></figure><h3 id="【提示】-4">【提示】</h3><p>【[样例2】</p><p>输入：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">290</span><br><span class="hljs-symbol">230 </span><br><span class="hljs-symbol">280 </span><br><span class="hljs-symbol">200 </span><br><span class="hljs-symbol">300 </span><br><span class="hljs-symbol">170 </span><br><span class="hljs-symbol">330 </span><br><span class="hljs-symbol">50 </span><br><span class="hljs-symbol">90 </span><br><span class="hljs-symbol">80 </span><br><span class="hljs-symbol">200 </span><br><span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1580</span><br></code></pre></td></tr></table></figure><p><strong>首先每次先计算出支出预算后还剩多少，然后检查是否大于100，大于则存储，小于0则输出透支</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> budget,left=<span class="hljs-number">0</span>,store=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">12</span>;i++)&#123;<br>    cin&gt;&gt;budget;<br>    left += <span class="hljs-number">300</span>-budget;<br>    <span class="hljs-keyword">if</span>(left&gt;<span class="hljs-number">100</span>)&#123;<br>    store += left/<span class="hljs-number">100</span>*<span class="hljs-number">100</span>;<br>    left = left%<span class="hljs-number">100</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(left&lt;<span class="hljs-number">0</span>)&#123;<br>    cout&lt;&lt;<span class="hljs-string">&quot;-&quot;</span>&lt;&lt;i;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br>cout&lt;&lt;left+store*<span class="hljs-number">1.2</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1075：药房管理">1075：药房管理</h2><h3 id="【题目描述】-21">【题目描述】</h3><p>随着信息技术的蓬勃发展，医疗信息化已经成为医院建设中必不可少的一部分。计算机可以很好地辅助医院管理医生信息、病人信息、药品信息等海量数据，使工作人员能够从这些机械的工作中解放出来，将更多精力投入真正的医疗过程中，从而极大地提高了医院整体的工作效率。</p><p>对药品的管理是其中的一项重要内容。现在药房的管理员希望使用计算机来帮助他管理。假设对于任意一种药品，每天开始工作时的库存总量已知，并且一天之内不会通过进货的方式增加。每天会有很多病人前来取药，每个病人希望取走不同数量的药品。如果病人需要的数量超过了当时的库存量，药房会拒绝该病人的请求。管理员希望知道每天会有多少病人没有取上药。</p><h3 id="【输入】-21">【输入】</h3><p>共3行,第一行是每天开始时的药品总量m。</p><p>第二行是这一天取药的人数n(0&lt;n&lt;=100)。</p><p>第三行共有n个数，分别记录了每个病人希望取走的药品数量(按照时间先后的顺序)。</p><h3 id="【输出】-21">【输出】</h3><p>只有1行，为这一天没有取上药品的人数。</p><h3 id="【输入样例】-21">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">30 </span><br><span class="hljs-symbol">6 </span><br><span class="hljs-symbol">10 </span><span class="hljs-number">5</span> <span class="hljs-number">20</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-21">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><p>每次取药减少，判断是否超过剩余量，记录没有拿到药的人</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> m,n,num,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;m&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>    cin&gt;&gt;num;<br>    <span class="hljs-keyword">if</span>(num&gt;m)<br>    sum++;<br>    <span class="hljs-keyword">else</span><br>    m -= num;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1076：正常血压">1076：正常血压</h2><h3 id="【题目描述】-22">【题目描述】</h3><p>监护室每小时测量一次病人的血压，若收缩压在90-140之间并且舒张压在60-90之间(包含端点值)则称之为正常，现给出某病人若干次测量的血压值，计算病人保持正常血压的最长小时数。</p><h3 id="【输入】-22">【输入】</h3><p>第一行为一个正整数n(n&lt;100)，其后有n行，每行2个正整数，分别为一次测量的收缩压和舒张压。</p><h3 id="【输出】-22">【输出】</h3><p>输出仅一行，血压连续正常的最长小时数。</p><h3 id="【输入样例】-22">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><br><span class="hljs-symbol">100 </span><span class="hljs-number">80</span> <br><span class="hljs-symbol">90 </span><span class="hljs-number">50</span> <br><span class="hljs-symbol">120 </span><span class="hljs-number">60</span> <br><span class="hljs-symbol">140 </span><span class="hljs-number">90</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-22">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,high,low,hour=<span class="hljs-number">0</span>,max=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>    cin&gt;&gt;high&gt;&gt;low;<br>    <span class="hljs-keyword">if</span>((high&gt;=<span class="hljs-number">90</span> &amp;&amp; high&lt;=<span class="hljs-number">140</span>) &amp;&amp; (low&gt;=<span class="hljs-number">60</span> &amp;&amp; low&lt;=<span class="hljs-number">90</span>))<br>    hour++;<br>    <span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">if</span>(hour&gt;max)<br>    max = hour;<br>    hour = <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br>cout&lt;&lt;max;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1077：统计满足条件的4位数">1077：统计满足条件的4位数</h2><h3 id="【题目描述】-23">【题目描述】</h3><p>给定若干个四位数，求出其中满足以下条件的数的个数：个位数上的数字减去千位数上的数字，再减去百位数上的数字，再减去十位数上的数字的结果大于零。</p><h3 id="【输入】-23">【输入】</h3><p>输入为两行，第一行为四位数的个数n，第二行为n个的四位数。(n&lt;=100)</p><h3 id="【输出】-23">【输出】</h3><p>输出为一行，包含一个整数，表示满足条件的四位数的个数。</p><h3 id="【输入样例】-23">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-symbol">1234 </span><span class="hljs-number">1349</span> <span class="hljs-number">6119</span> <span class="hljs-number">2123</span> <span class="hljs-number">5017</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-23">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,a[<span class="hljs-number">4</span>],num,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>    cin&gt;&gt;num;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">4</span>;j++)&#123;<br>    a[j]=num%<span class="hljs-number">10</span>;<br>    num = num/<span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>((a[<span class="hljs-number">0</span>]-a[<span class="hljs-number">3</span>]-a[<span class="hljs-number">2</span>]-a[<span class="hljs-number">1</span>])&gt;<span class="hljs-number">0</span>)<br>    sum++;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1078：求分数序列和">1078：求分数序列和</h2><h3 id="【题目描述】-24">【题目描述】</h3><p>有一个分数序列</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><msub><mi>q</mi><mn>1</mn></msub><msub><mi>p</mi><mn>1</mn></msub></mfrac><mo separator="true">,</mo><mfrac><msub><mi>q</mi><mn>2</mn></msub><msub><mi>p</mi><mn>2</mn></msub></mfrac><mo separator="true">,</mo><mfrac><msub><mi>q</mi><mn>3</mn></msub><msub><mi>p</mi><mn>3</mn></msub></mfrac><mo separator="true">,</mo><mfrac><msub><mi>q</mi><mn>4</mn></msub><msub><mi>p</mi><mn>4</mn></msub></mfrac><mo separator="true">,</mo><mfrac><msub><mi>q</mi><mn>5</mn></msub><msub><mi>p</mi><mn>5</mn></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{q_1}{p_1},\frac{q_2}{p_2},\frac{q_3}{p_3},\frac{q_4}{p_4},\frac{q_5}{p_5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.988em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>q</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>q</mi><mi>i</mi></msub><mo>+</mo><msub><mi>p</mi><mi>i</mi></msub><mtext>，</mtext><msub><mi>p</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>q</mi><mi>i</mi></msub><mtext>，</mtext><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mtext>，</mtext><msub><mi>q</mi><mn>1</mn></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">q_{i+1}=q_i+p_i， p_{i+1}=q_i，p_1=1，q_1=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></span></p><p>比如这个序列前6项分别是</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>2</mn><mn>1</mn></mfrac><mo separator="true">,</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo separator="true">,</mo><mfrac><mn>5</mn><mn>3</mn></mfrac><mo separator="true">,</mo><mfrac><mn>8</mn><mn>5</mn></mfrac><mo separator="true">,</mo><mfrac><mn>13</mn><mn>8</mn></mfrac><mo separator="true">,</mo><mfrac><mn>21</mn><mn>13</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{1},\frac{3}{2},\frac{5}{3},\frac{8}{5},\frac{13}{8},\frac{21}{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">21</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>求这个分数序列的前n项之和。</p><h3 id="【输入】-24">【输入】</h3><p>输入有一行，包含一个正整数n(n≤30)。</p><h3 id="【输出】-24">【输出】</h3><p>输出有一行，包含一个浮点数，表示分数序列前n项的和，精确到小数点后4位。</p><h3 id="【输入样例】-24">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-24">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">5000</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> p=<span class="hljs-number">1</span>,q=<span class="hljs-number">2</span>,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>    sum += q/p;<br>        <span class="hljs-type">double</span> tmp = q;<br>        q = q + p;<br>        p = tmp;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f&quot;</span>,sum);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1079：计算分数加减表达式的值">1079：计算分数加减表达式的值</h2><h3 id="【题目描述】-25">【题目描述】</h3><p>编写程序，输入n的值，求</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mn>1</mn></mfrac><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>−</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{1}-\frac{1}{2}+\frac{1}{3}-\frac{1}{4}+\frac{1}{5}...+(-1)^{n-1}*\frac{1}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>的值。</p><h3 id="【输入】-25">【输入】</h3><p>输入一个正整数n。(1&lt;=n&lt;=1000)</p><h3 id="【输出】-25">【输出】</h3><p>输出一个实数，为表达式的值，保留到小数点后四位。</p><h3 id="【输入样例】-25">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-25">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>.<span class="hljs-number">5000</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>    sum += <span class="hljs-number">1.0</span>/i*<span class="hljs-built_in">pow</span>(<span class="hljs-number">-1</span>,i+<span class="hljs-number">1</span>);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f&quot;</span>,sum);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1080：余数相同问题">1080：余数相同问题</h2><h3 id="【题目描述】-26">【题目描述】</h3><p>已知三个正整数a，b，c。现有一个大于1的整数x，将其作为除数分别除a，b，c，得到的余数相同。</p><p>请问满足上述条件的x的最小值是多少？数据保证x有解。</p><h3 id="【输入】-26">【输入】</h3><p>一行，三个不大于1000000的正整数a，b，c，两个整数之间用一个空格隔开。</p><h3 id="【输出】-26">【输出】</h3><p>一个整数，即满足条件的x的最小值。</p><h3 id="【输入样例】-26">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">300 </span><span class="hljs-number">262</span> <span class="hljs-number">205</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-26">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">19<br></code></pre></td></tr></table></figure><p>可能有多个数满足此条件，需要在找到最小数后直接结束程序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=a &amp;&amp; i&lt;=b &amp;&amp; i&lt;=c;i++)&#123;<br>    <span class="hljs-keyword">if</span>((a%i == b%i) &amp;&amp; (b%i == c%i))&#123;<br>    cout&lt;&lt;i;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1081：分苹果">1081：分苹果</h2><h3 id="【题目描述】-27">【题目描述】</h3><p>把一堆苹果分给n个小朋友，要使每个人都能拿到苹果，而且每个人拿到的苹果数都不同的话，这堆苹果至少应该有多少个？</p><h3 id="【输入】-27">【输入】</h3><p>一个不大于1000的正整数n，代表小朋友人数。</p><h3 id="【输出】-27">【输出】</h3><p>一个整数，表示满足条件的最少苹果个数。</p><h3 id="【输入样例】-27">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">8<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-27">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">36<br></code></pre></td></tr></table></figure><p>1-n累加</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>    sum += i;<br>&#125;<br>cout&lt;&lt;sum;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1082：求小数的某一位">1082：求小数的某一位</h2><h3 id="【题目描述】-28">【题目描述】</h3><p>分数a/b化为小数后，小数点后第n位的数字是多少？</p><h3 id="【输入】-28">【输入】</h3><p>三个正整数a，b，n，相邻两个数之间用单个空格隔开。0&lt;a&lt;b&lt;100，1&lt;=n&lt;=10000。</p><h3 id="【输出】-28">【输出】</h3><p>一个数字。</p><h3 id="【输入样例】-28">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-28">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><p>直接计算会超过数据范围</p><p>长除法</p><p>首先明确余数是组成小数的部分，则取到余数后，不断×10然后继续取余数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,n,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>    a = a%b*<span class="hljs-number">10</span>;<br>    c = a/b;<br>&#125;<br>cout&lt;&lt;c;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1083：计算星期几">1083：计算星期几</h2><h3 id="【题目描述】-29">【题目描述】</h3><p>假设今天是星期日，那么过a^b天之后是星期几？</p><h3 id="【输入】-29">【输入】</h3><p>两个正整数a，b，中间用单个空格隔开。0&lt;a≤100,0&lt;b≤10000。</p><h3 id="【输出】-29">【输出】</h3><p>一个字符串，代表过a^b天之后是星期几。</p><p>其中，<code>Monday</code>是星期一，<code>Tuesday</code>是星期二，<code>Wednesday</code>是星期三，<code>Thursday</code>是星期四，<code>Friday</code>是星期五，<code>Saturday</code>是星期六，<code>Sunday</code>是星期日。</p><h3 id="【输入样例】-29">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2000</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-29">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">Tuesday</span><br></code></pre></td></tr></table></figure><p>直接计算a的b次幂会超过数据范围</p><p>同余定理：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>m</mi><mo>∗</mo><mi>b</mi><mi mathvariant="normal">%</mi><mi>m</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">(a*b)\% m = (a\%m * b\%m)\%m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span></span></span></span></span></p><p>在每次×a计算a的幂时，对其余7计算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c=<span class="hljs-number">1</span>;<br>cin&gt;&gt;a&gt;&gt;b;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=b;i++)&#123;<br>    c = a*c;<br>    c = c%<span class="hljs-number">7</span>;<br>&#125;<br><span class="hljs-keyword">switch</span>(c)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Monday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Tuesday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Wednesday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Thursday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Friday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Saturday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Sunday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1084：幂的末尾">1084：幂的末尾</h2><h3 id="【题目描述】-30">【题目描述】</h3><p>幂a/b的末3位数是多少？</p><h3 id="【输入】-30">【输入】</h3><p>两个正整数a，b。1≤a≤100，1≤b≤10000。</p><h3 id="【输出】-30">【输出】</h3><p>从高位到低位输出幂的末三位数字，中间无分隔符。若幂本身不足三位，在前面补零。</p><h3 id="【输入样例】-30">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">7 </span><span class="hljs-number">2011</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-30">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">743<br></code></pre></td></tr></table></figure><p>幂的后三位主要由每次乘法运算的乘数与被乘数的后三位决定的，每次计算余1000即可</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>a</mi><mi>b</mi></msup><mi mathvariant="normal">%</mi><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>a</mi><mrow><mi>b</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>a</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>a</mi><mrow><mi>b</mi><mo>−</mo><mn>1</mn></mrow></msup><mi mathvariant="normal">%</mi><mi>m</mi><mo>∗</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>m</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">a^b\%m = (a^{b-1} * a)\%m = (a^{b-1}\%m * a\%m)\%m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9547em;vertical-align:-0.0556em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord">%</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathnormal">m</span></span></span></span></span></p><p>最后需要注意补0操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c=<span class="hljs-number">1</span>;<br>cin&gt;&gt;a&gt;&gt;b;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=b;i++)&#123;<br>    c = a*c;<br>    c = c%<span class="hljs-number">1000</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(c&lt;<span class="hljs-number">10</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;00&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(c&lt;<span class="hljs-number">100</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;0&quot;</span>;<br>cout&lt;&lt;c;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="–while循环">–while循环</h2><h2 id="2020：第几项">2020：第几项</h2><h3 id="【题目描述】-31">【题目描述】</h3><p>对于正整数n,m，求s=1+2+3……+n，当加到第几项时，s的值会超过m？</p><h3 id="【输入】-31">【输入】</h3><p>输入m。</p><h3 id="【输出】-31">【输出】</h3><p>输出n。</p><h3 id="【输入样例】-31">【输入样例】</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1000</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-31">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">45<br></code></pre></td></tr></table></figure><h3 id="【提示】-5">【提示】</h3><p>【数据范围】</p><p>对于全部数据：1≤m≤40000。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> m,i=<span class="hljs-number">0</span>,s=<span class="hljs-number">0</span>;<br>cin&gt;&gt;m;<br><span class="hljs-keyword">while</span>(s&lt;=m)&#123;<br>i++;<br>s += i;<br>&#125;<br>cout&lt;&lt;i;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2021：最大公约数">2021：最大公约数</h2><h3 id="【题目描述】-32">【题目描述】</h3><p>求两个正整数m，n的最大公约数。</p><h3 id="【输入】-32">【输入】</h3><p>输入m，n。</p><h3 id="【输出】-32">【输出】</h3><p>m，n的最大公约数。</p><h3 id="【输入样例】-32">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-32">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h3 id="【提示】-6">【提示】</h3><p>【数据范围】</p><p>对于全部数据：m,n&lt;4000000。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> m,n;<br>cin&gt;&gt;m&gt;&gt;n;<br><span class="hljs-type">int</span> i = <span class="hljs-built_in">min</span>(m,n);<br><span class="hljs-keyword">while</span>(i&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">if</span>(m%i==<span class="hljs-number">0</span> &amp;&amp; n%i==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;i;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>i--;<br>&#125;<br>cout&lt;&lt;i;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2022：最小n值">2022：最小n值</h2><h3 id="【题目描述】-33">【题目描述】</h3><p>编一程序求满足不等式1+1/2+1/3…+1/n≥m的最小n值。</p><p>其中，n,m为正整数。</p><h3 id="【输入】-33">【输入】</h3><p>输入m。</p><h3 id="【输出】-33">【输出】</h3><p>输出n。</p><h3 id="【输入样例】-33">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-33">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">11<br></code></pre></td></tr></table></figure><h3 id="【提示】-7">【提示】</h3><p>【数据范围】</p><p>对于所有数据：m≤11。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> m,n=<span class="hljs-number">0</span>;<br><span class="hljs-type">double</span> sum = <span class="hljs-number">0</span>;<br>cin&gt;&gt;m;<br><span class="hljs-keyword">while</span>(sum&lt;m)&#123;<br>n++;<br>sum += <span class="hljs-number">1.0</span>/n;<br>&#125;<br>cout&lt;&lt;n;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2023：数据统计">2023：数据统计</h2><h3 id="【题目描述】-34">【题目描述】</h3><p>输入一些整数，求出它们的最小值、最大值和平均值（保留3位小数）。输入保证这些数都是不超过1000的整数。</p><h3 id="【输入】-34">【输入】</h3><p>一行，若干个整数。</p><h3 id="【输出】-34">【输出】</h3><p>一行，即，最小值、最大值和平均值（保留3位小数）。</p><h3 id="【输入样例】-34">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-34">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">3</span> <span class="hljs-number">2.000</span><br></code></pre></td></tr></table></figure><h3 id="【提示】-8">【提示】</h3><p>【数据范围】</p><p>数据个数不超过100。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,i=<span class="hljs-number">0</span>,max=<span class="hljs-number">0</span>,min=<span class="hljs-number">1000</span>;<br><span class="hljs-type">double</span> avg = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span>(cin&gt;&gt;a)&#123;<br><span class="hljs-keyword">if</span>(a&gt;max)<br>max = a;<br><span class="hljs-keyword">if</span>(a&lt;min)<br>min = a;<br>avg += a;<br>i++;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %.3f&quot;</span>,min,max,avg/i);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1085：球弹跳高度的计算">1085：球弹跳高度的计算</h2><h3 id="【题目描述】-35">【题目描述】</h3><p>一球从某一高度h落下(单位米)，每次落地后反跳回原来高度的一半，再落下。编程计算气球在第10次落地时，共经过多少米? 第10次反弹多高？</p><p>输出包含两行，第1行：到球第10次落地时，一共经过的米数。第2行：第10次弹跳的高度。</p><h3 id="【输入】-35">【输入】</h3><p>输入一个整数h，表示球的初始高度。</p><h3 id="【输出】-35">【输出】</h3><p>第1行：到球第10次落地时，一共经过的米数。</p><p>第2行：第10次弹跳的高度。</p><p>注意：结果可能是实数，结果用<code>double</code>类型保存。</p><p>提示：输出时不需要对精度特殊控制，用<code>cout &lt;&lt; ANSWER</code>，或者<code>printf(&quot;\%g&quot;,ANSWER)</code>即可。</p><h3 id="【输入样例】-35">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">20<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-35">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">59</span>.<span class="hljs-number">9219</span> <span class="hljs-number">0</span>.<span class="hljs-number">0195312</span><br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> h,i=<span class="hljs-number">2</span>;<br>cin&gt;&gt;h;<br><span class="hljs-type">double</span> s=h,height=h/<span class="hljs-number">2.0</span>;<br><span class="hljs-keyword">while</span>(i&lt;=<span class="hljs-number">10</span>)&#123;<br>s += <span class="hljs-number">2</span>*height;<br>height = height/<span class="hljs-number">2</span>;<br>i++;<br>&#125;<br>cout&lt;&lt;s&lt;&lt;endl&lt;&lt;height;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1086：角谷猜想">1086：角谷猜想</h2><h3 id="【题目描述】-36">【题目描述】</h3><p>谓角谷猜想，是指对于任意一个正整数，如果是奇数，则乘3加1，如果是偶数，则除以2，得到的结果再按照上述规则重复处理，最终总能够得到11。如，假定初始整数为5，计算过程分别为16、8、4、2、1。程序要求输入一个整数，将经过处理得到1的过程输出来。</p><h3 id="【输入】-36">【输入】</h3><p>一个正整数n(n≤2,000,000)。</p><h3 id="【输出】-36">【输出】</h3><p>从输入整数到1的步骤，每一步为一行，每一部中描述计算过程。最后一行输出&quot;<code>End</code>&quot;。如果输入为1，直接输出&quot;<code>End</code>&quot;。</p><h3 id="【输入样例】-36">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-36">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">5</span>*<span class="hljs-number">3</span>+<span class="hljs-number">1</span>=<span class="hljs-number">16</span> <br><span class="hljs-attribute">16</span>/<span class="hljs-number">2</span>=<span class="hljs-number">8</span> <br><span class="hljs-attribute">8</span>/<span class="hljs-number">2</span>=<span class="hljs-number">4</span> <br><span class="hljs-attribute">4</span>/<span class="hljs-number">2</span>=<span class="hljs-number">2</span> <br><span class="hljs-attribute">2</span>/<span class="hljs-number">2</span>=<span class="hljs-number">1</span> <br><span class="hljs-attribute">End</span> <br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br><span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;End&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n%<span class="hljs-number">2</span> == <span class="hljs-number">1</span>)&#123;<br>cout&lt;&lt;n&lt;&lt;<span class="hljs-string">&quot;*3+1=&quot;</span>&lt;&lt;<span class="hljs-number">3</span>*n+<span class="hljs-number">1</span>&lt;&lt;endl;<br>n = <span class="hljs-number">3</span>*n+<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>cout&lt;&lt;n&lt;&lt;<span class="hljs-string">&quot;/2=&quot;</span>&lt;&lt;n/<span class="hljs-number">2</span>&lt;&lt;endl;<br>n = n/<span class="hljs-number">2</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1087：级数求和">1087：级数求和</h2><h3 id="【题目描述】-37">【题目描述】</h3><p>已知：Sn=1＋1/2＋1/3＋…＋1/n。显然对于任意一个整数k，当n足够大的时候，Sn大于k。现给出一个整数k（1&lt;=k&lt;=15），要求计算出一个最小的n，使得Sn＞k。</p><h3 id="【输入】-37">【输入】</h3><p>一个整数k。</p><h3 id="【输出】-37">【输出】</h3><p>一个整数n。</p><h3 id="【输入样例】-37">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-37">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span> <br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> k,n=<span class="hljs-number">0</span>;<br><span class="hljs-type">double</span> sum = <span class="hljs-number">0</span>;<br>cin&gt;&gt;k;<br><span class="hljs-keyword">while</span>(sum&lt;=k)&#123;<br>n++;<br>sum += <span class="hljs-number">1.0</span>/n;<br>&#125;<br>cout&lt;&lt;n;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1088：分离整数的各个数">1088：分离整数的各个数</h2><h3 id="【题目描述】-38">【题目描述】</h3><p>给定一个整数n(1≤n≤100000000)，要求从个位开始分离出它的每一位数字。从个位开始按照从低位到高位的顺序依次输出每一位数字。</p><h3 id="【输入】-38">【输入】</h3><p>输入一个整数，整数在1到100000000之间。</p><h3 id="【输出】-38">【输出】</h3><p>从个位开始按照从低位到高位的顺序依次输出每一位数字。数字之间以一个空格分开。</p><h3 id="【输入样例】-38">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">123<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-38">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;n%<span class="hljs-number">10</span>&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>n = n/<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1089：数字反转">1089：数字反转</h2><h3 id="【题目描述】-39">【题目描述】</h3><p>给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零，例如输入−380，反转后得到的新数为−83。</p><h3 id="【输入】-39">【输入】</h3><p>输入共 1 行，一个整数N。</p><p>−1,000,000,000≤N≤1,000,000,000。</p><h3 id="【输出】-39">【输出】</h3><p>输出共 1 行，一个整数，表示反转后的新数。</p><h3 id="【输入样例】-39">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">123<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-39">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">321<br></code></pre></td></tr></table></figure><h3 id="【提示】-9">【提示】</h3><p>【输入输出样例 2】</p><p>输入：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-380</span><br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-83</span><br></code></pre></td></tr></table></figure><p>首先遇到0直接输出结束程序</p><p>遇到负数先输出’-'号再转换成正数</p><p>判断遇到的0是否是末尾的0：先设置flag一定是末尾的0，遇到非0数之后设置flag不是末尾0</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;0&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;-&quot;</span>;<br>n = <span class="hljs-built_in">abs</span>(n);<br><span class="hljs-type">bool</span> ispreone = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">if</span>(ispreone)&#123;<br><span class="hljs-keyword">if</span>(n%<span class="hljs-number">10</span> == <span class="hljs-number">0</span>)&#123;<br>                n = n/<span class="hljs-number">10</span>;<br>                <span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>ispreone = <span class="hljs-literal">false</span>;<br>&#125;<br>cout&lt;&lt;n%<span class="hljs-number">10</span>;<br>n = n/<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1090：含k个3的数">1090：含k个3的数</h2><h3 id="【题目描述】-40">【题目描述】</h3><p>输入两个正整数m和k，其中1&lt;m&lt;100000，1&lt;k&lt;5 ，判断m 能否被19整除，且恰好含有k个3，如果满足条件，则输出YES，否则，输出NO。 例如，输入：43833 3，满足条件，输出YES。如果输入：39331 3，尽管有3个3，但不能被19整除，也不满足条件，应输出NO。</p><h3 id="【输入】-40">【输入】</h3><p>m 和 k 的值，中间用单个空格间隔。</p><h3 id="【输出】-40">【输出】</h3><p>满足条件时输出 YES，不满足时输出 NO。</p><h3 id="【输入样例】-40">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">43833 </span><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-40">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,k,num,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n&gt;&gt;k;<br>num = n;<br><span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">if</span>(n%<span class="hljs-number">10</span> == <span class="hljs-number">3</span>)<br>sum++;<br>n = n/<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(num%<span class="hljs-number">19</span>==<span class="hljs-number">0</span> &amp;&amp; sum==k)<br>cout&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;NO&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="–do-while语句">–do-while语句</h2><h2 id="2024：末两位数">2024：末两位数</h2><h3 id="【题目描述】-41">【题目描述】</h3><p>求n个1992的乘积的末两位数是多少？</p><h3 id="【输入】-41">【输入】</h3><p>输入n。</p><h3 id="【输出】-41">【输出】</h3><p>如题述的末两位数。</p><h3 id="【输入样例】-41">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-41">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">88<br></code></pre></td></tr></table></figure><h3 id="【提示】-10">【提示】</h3><p>【数据范围】</p><p>对于所有数据：n&lt;2000。</p><p><strong>一个数的末两位由乘数与被乘数的末两位决定的</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,num=<span class="hljs-number">1</span>,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">do</span>&#123;<br>num = num%<span class="hljs-number">100</span>*<span class="hljs-number">92</span>;<br>n--;<br>&#125;<span class="hljs-keyword">while</span>(n&gt;<span class="hljs-number">0</span>);<br>cout&lt;&lt;num%<span class="hljs-number">100</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2025：体操队">2025：体操队</h2><h3 id="【题目描述】-42">【题目描述】</h3><p>校体操队到操场集合,排成每行2人,最后多出1人;排成每行3人,也多出1人;分别按每行排4,5,6人,都多出1人;当排成每行7人时,正好不多。求校体操队至少多少人?</p><h3 id="【输入】-42">【输入】</h3><p>如题述，无。</p><h3 id="【输出】-42">【输出】</h3><p>校体操队人数。</p><p>例如：人数为15，直接输出15就可以啦。</p><h3 id="【输入样例】-42">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-42">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include&lt;iostream&gt;</span><br>using namespace std;<br>int main()&#123;<br>int <span class="hljs-attribute">num</span>=7;<br><span class="hljs-keyword">do</span>&#123;<br><span class="hljs-keyword">if</span>(num%<span class="hljs-attribute">2</span>==1 &amp;&amp; num%<span class="hljs-attribute">3</span>==1 &amp;&amp; num%<span class="hljs-attribute">4</span>==1 &amp;&amp; num%<span class="hljs-attribute">5</span>==1 &amp;&amp; num%<span class="hljs-attribute">6</span>==1 &amp;&amp; num%<span class="hljs-attribute">7</span>==0)<br>break;<br>num++;<br>&#125;<span class="hljs-keyword">while</span>(1);<br>cout&lt;&lt;num;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="–循环嵌套">–循环嵌套</h2><h2 id="2026：阶乘和">2026：阶乘和</h2><h3 id="【题目描述】-43">【题目描述】</h3><p>求 S=1!+2!+3!+…+n!</p><h3 id="【输入】-43">【输入】</h3><p>输入正整数n。</p><h3 id="【输出】-43">【输出】</h3><p>输出s。</p><h3 id="【输入样例】-43">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">3<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-43">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">9<br></code></pre></td></tr></table></figure><h3 id="【提示】-11">【提示】</h3><p>【数据范围】</p><p>对于所有数据：1≤n≤10。</p><p>两重循环：第一层计算n，第二层计算n!</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-type">int</span> tmp=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=i;j++)&#123;<br>tmp = tmp*j;<br>&#125;<br>sum += tmp;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2027：三角形">2027：三角形</h2><h3 id="【题目描述】-44">【题目描述】</h3><p>对于给定的自然数n(n&lt;20)，在屏幕上输出仅由“<code>*</code>”构成的n行的直角三角形。</p><h3 id="【输入】-44">【输入】</h3><p>输入n。</p><h3 id="【输出】-44">【输出】</h3><p>题述三角形。</p><h3 id="【输入样例】-44">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-44">【输出样例】</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">* </span><br><span class="hljs-bullet"></span><span class="hljs-bullet">** </span><br><span class="hljs-bullet"></span><span class="hljs-bullet">*** </span><br><span class="hljs-bullet"></span><span class="hljs-bullet">**** </span><br><span class="hljs-bullet"></span><span class="hljs-strong">*****</span><br></code></pre></td></tr></table></figure><p>根据行号输出对应数量的*</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=i;j++)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;*&quot;</span>;<br>&#125;<br>cout&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2028：百钱买百鸡">2028：百钱买百鸡</h2><h3 id="【题目描述】-45">【题目描述】</h3><p>百钱买百鸡问题。鸡翁一，值钱五，鸡母一，值钱三，鸡雏三，值钱一，百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？</p><h3 id="【输入】-45">【输入】</h3><p>无</p><h3 id="【输出】-45">【输出】</h3><p>输出各种鸡翁、鸡母、鸡雏的数量，依次由小到大，每种情况各占一行,每行三个数之间用一个空格隔开。</p><h3 id="【输入样例】-45">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-45">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><p>两重循环：第一层增加鸡翁的数量i，第二层增加鸡母的数量j，在第二层内算出鸡雏的数量（100-i-j），鸡雏需要是3的整数倍因为3个值1钱，算是否满足总共的钱数量100，</p><p>注意计算数量从0开始计数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">20</span>;i++)&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;=<span class="hljs-number">33</span>;j++)&#123;<br><span class="hljs-type">int</span> k = <span class="hljs-number">100</span>-i-j;<br><span class="hljs-keyword">if</span>(k%<span class="hljs-number">3</span>==<span class="hljs-number">0</span> &amp;&amp; <span class="hljs-number">5</span>*i+<span class="hljs-number">3</span>*j+k/<span class="hljs-number">3</span>==<span class="hljs-number">100</span>)<br>cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;k&lt;&lt;endl;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2029：水仙花数">2029：水仙花数</h2><h3 id="【题目描述】-46">【题目描述】</h3><p>求100∼999中的水仙花数。若三位数ABC，</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi><mo>=</mo><msup><mi>A</mi><mn>3</mn></msup><mo>+</mo><msup><mi>B</mi><mn>3</mn></msup><mo>+</mo><msup><mi>C</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">ABC=A^3+B^3+C^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">BC</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></p><p>则称ABC为水仙花数。</p><p>例如153，1^3+5^3+3^3=1+125+27=153，则153是水仙花数。</p><h3 id="【输入】-46">【输入】</h3><p>无</p><h3 id="【输出】-46">【输出】</h3><p>由小到大输出满足条件的数，每个数占一行。</p><p>假设需要输出两个数：119,100。需要输出以下形式：</p><p>100</p><p>119</p><h3 id="【输入样例】-46">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-46">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">100</span>;i&lt;=<span class="hljs-number">999</span>;i++)&#123;<br><span class="hljs-type">int</span> n = i,sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">3</span>;j++)&#123;<br>sum += <span class="hljs-built_in">pow</span>(n%<span class="hljs-number">10</span>,<span class="hljs-number">3</span>);<br>n = n/<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(sum == i)<br>cout&lt;&lt;i&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2030：找素数">2030：找素数</h2><h3 id="【题目描述】-47">【题目描述】</h3><p>输出正整数a到b之间的所有素数。</p><h3 id="【输入】-47">【输入】</h3><p>输入a,b。</p><h3 id="【输出】-47">【输出】</h3><p>由小到大，输出a到b之间的所有素数。每个数占一行。</p><h3 id="【输入样例】-47">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-47">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">5 </span><br><span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h3 id="【提示】-12">【提示】</h3><p>【数据范围】</p><p>对于所有数据，1≤a≤b≤20000。</p><p>第一层循环遍历a-b的数，第二层判断是否是素数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b;<br>cin&gt;&gt;a&gt;&gt;b;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=a;i&lt;=b;i++)&#123;<br><span class="hljs-type">bool</span> flag=<span class="hljs-literal">true</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">2</span>;j&lt;i;j++)&#123;<br><span class="hljs-keyword">if</span>(i%j==<span class="hljs-number">0</span>)&#123;<br>flag = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(flag)<br>cout&lt;&lt;i&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2031：四位完全平方数">2031：四位完全平方数</h2><h3 id="【题目描述】-48">【题目描述】</h3><p>输出所有形如<code>aabb</code>的四位完全平方数（即前两位数字相等，后两位数字也相等）。</p><h3 id="【输入】-48">【输入】</h3><p>无</p><h3 id="【输出】-48">【输出】</h3><p>由小到大输出，每个数占一行。</p><h3 id="【输入样例】-48">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-48">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">无<br></code></pre></td></tr></table></figure><p>首先需要是完全平方数，然后满足该规则</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">32</span>;i&lt;=<span class="hljs-number">99</span>;i++)&#123;<br><span class="hljs-type">int</span> a[<span class="hljs-number">4</span>],n=i*i;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">4</span>;j++)&#123;<br>a[j] = n%<span class="hljs-number">10</span>;<br>n = n/<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==a[<span class="hljs-number">1</span>] &amp;&amp; a[<span class="hljs-number">2</span>]==a[<span class="hljs-number">3</span>])<br>cout&lt;&lt;i*i&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2032：分解质因数">2032：分解质因数</h2><h3 id="【题目描述】-49">【题目描述】</h3><p>把一个合数分解成若干个质因数乘积的形式(即求质因数的过程)叫做分解质因数。分解质因数(也称分解素因数)只针对合数。</p><p>输入一个正整数n，将n分解成质因数乘积的形式。</p><h3 id="【输入】-49">【输入】</h3><p>一个正整数n。</p><h3 id="【输出】-49">【输出】</h3><p>分解成质因数乘积的形式。质因数必须由小到大，见样例。</p><h3 id="【输入样例】-49">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">36<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-49">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">36</span>=<span class="hljs-number">2</span>*<span class="hljs-number">2</span>*<span class="hljs-number">3</span>*<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="【提示】-13">【提示】</h3><p>【数据范围】</p><p>对于所有数据，2≤n≤20000。</p><p>第一层循环找质因数大小，第二层循环找质因数的数量</p><p>利用回退符号’\b’将光标回退一格，然后用空格’ ‘覆盖，再回退’\b’</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs dart">#include&lt;iostream&gt;<br>using namespace std;<br><span class="hljs-built_in">int</span> main()&#123;<br><span class="hljs-built_in">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">num</span> = n;<br>cout&lt;&lt;<span class="hljs-built_in">num</span>&lt;&lt;<span class="hljs-string">&quot;=&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-built_in">num</span>;i++)&#123;<br><span class="hljs-keyword">while</span>(<span class="hljs-built_in">num</span>%i==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;i;<br><span class="hljs-built_in">num</span> = <span class="hljs-built_in">num</span>/i;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">num</span>!=<span class="hljs-number">1</span>)<br>            cout&lt;&lt;<span class="hljs-string">&quot;*&quot;</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">num</span>==<span class="hljs-number">1</span>)<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2033：阶乘之和">2033：阶乘之和</h2><h3 id="【题目描述】-50">【题目描述】</h3><p>输入n𝑛，计算S=1!+2!+3!+…+n!的末6位(不含前导0)。n≤10^6， n!表示前n个正整数之积。</p><h3 id="【输入】-50">【输入】</h3><p>输入n。</p><h3 id="【输出】-50">【输出】</h3><p>如题述，之和。</p><h3 id="【输入样例】-50">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-50">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">37913<br></code></pre></td></tr></table></figure><h3 id="【提示】-14">【提示】</h3><p>【数据范围】</p><p>对于所有数据，1≤n≤999999。</p><p>每次余1000000取后6位</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#include&lt;iostream&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-built_in">int</span> main()&#123;<br><span class="hljs-built_in">long</span> n,<span class="hljs-keyword">sum</span>=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-built_in">int</span> tmp=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>tmp = tmp*i%<span class="hljs-number">1000000</span>;<br><span class="hljs-keyword">sum</span> = (<span class="hljs-keyword">sum</span>+tmp)%<span class="hljs-number">1000000</span>;<br>&#125;<br>cout&lt;&lt;<span class="hljs-keyword">sum</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1091：求阶乘的和">1091：求阶乘的和</h2><h3 id="【题目描述】-51">【题目描述】</h3><p>给定正整数n，求不大于n的正整数的阶乘的和（即求1!+2!+3!+…+n!），输出阶乘的和。</p><h3 id="【输入】-51">【输入】</h3><p>输入有一行，包含一个正整数n（1 &lt; n &lt; 12）。</p><h3 id="【输出】-51">【输出】</h3><p>输出有一行：阶乘的和。</p><h3 id="【输入样例】-51">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-51">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">153<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">long</span> n,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-type">int</span> tmp=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>tmp = tmp*i;<br>sum += tmp;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1092：求出e的值">1092：求出e的值</h2><h3 id="【题目描述】-52">【题目描述】</h3><p>利用公式e=1+1/1!+1/2!+1/3!+…+1/n! ，求e的值，要求保留小数点后10位。</p><h3 id="【输入】-52">【输入】</h3><p>输入只有一行，该行包含一个整数n（2≤n≤15）𝑛（2≤𝑛≤15），表示计算e𝑒时累加到1/n!。</p><h3 id="【输出】-52">【输出】</h3><p>输出只有一行，该行包含计算出来的e的值，要求打印小数点后10位。</p><h3 id="【输入样例】-52">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-52">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">7182818011</span><br></code></pre></td></tr></table></figure><p>tmp需要是long类型</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> sum=<span class="hljs-number">1</span>;<br>cin&gt;&gt;n;<br><span class="hljs-type">long</span> tmp=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>tmp = tmp*i;<br>sum += <span class="hljs-number">1.0</span>/tmp;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.10f&quot;</span>,sum);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1093：计算多项式的值">1093：计算多项式的值</h2><h3 id="【题目描述】-53">【题目描述】</h3><p>假定多项式的形式为</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mo>+</mo><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^n+x^{n−1}+…+x^2+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7977em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>请计算给定单精度浮点数x和正整数n值的情况下这个多项式的值。x在double范围内，n≤1000000。多项式的值精确到小数点后两位，保证最终结果在double范围内。</p><h3 id="【输入】-53">【输入】</h3><p>输入仅一行，包括x和n，用单个空格隔开。x在double范围内，n≤1000000。</p><h3 id="【输出】-53">【输出】</h3><p>输出一个实数，即多项式的值，精确到小数点后两位。保证最终结果在double范围内。</p><h3 id="【输入样例】-53">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-53">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">31</span>.<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> x,sum=<span class="hljs-number">1</span>;<br>cin&gt;&gt;x&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>sum += <span class="hljs-built_in">pow</span>(x,i);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,sum);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1094：与7无关的数">1094：与7无关的数</h2><h3 id="【题目描述】-54">【题目描述】</h3><p>一个正整数，如果它能被7整除，或者它的十进制表示法中某一位上的数字为7，则称其为与7相关的数。现求所有小于等于n(n&lt;100)与7无关的正整数的平方和。</p><h3 id="【输入】-54">【输入】</h3><p>输入为一行,正整数n(n &lt; 100)。</p><h3 id="【输出】-54">【输出】</h3><p>输出一行，包含一个整数，即小于等于n的所有与7无关的正整数的平方和。</p><h3 id="【输入样例】-54">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">21<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-54">【输出样例】</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">2336</span><br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">long</span> sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-type">int</span> a = i%<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> b = i/<span class="hljs-number">10</span>%<span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">7</span>==<span class="hljs-number">0</span> ||(a==<span class="hljs-number">7</span> || b==<span class="hljs-number">7</span>))<br><span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">else</span><br>sum += i*i;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1095：数1的个数">1095：数1的个数</h2><h3 id="【题目描述】-55">【题目描述】</h3><p>给定一个十进制正整数n(1≤n≤10000)，写下从1到n的所有整数，然后数一下其中出现的数字“<code>1</code>”的个数。</p><p>例如当n=2时，写下1,2。这样只出现了1个“<code>1</code>”；当n=12时，写下1，2，3，4，5，6，7，8，9，10，11，12。这样出现了5个“<code>1</code>”。</p><h3 id="【输入】-55">【输入】</h3><p>正整数n𝑛。1≤n≤10000。</p><h3 id="【输出】-55">【输出】</h3><p>一个正整数，即“<code>1</code>”的个数。</p><h3 id="【输入样例】-55">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">12<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-55">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-type">int</span> num=i;<br><span class="hljs-keyword">while</span>(num&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">if</span>(num%<span class="hljs-number">10</span>==<span class="hljs-number">1</span>)<br>sum++;<br>num = num/<span class="hljs-number">10</span>;<br>&#125;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1096：数字统计">1096：数字统计</h2><h3 id="【题目描述】-56">【题目描述】</h3><p>请统计某个给定范围[L, R]的所有整数中，数字2出现的次数。</p><p>比如给定范围[2, 22]，数字2在数2中出现了1次，在数12中出现1次，在数20中出现1次，在数21中出现1次，在数22中出现2次，所以数字2在该范围内一共出现了6次。</p><h3 id="【输入】-56">【输入】</h3><p>输入共 1 行，为两个正整数 L 和 R，之间用一个空格隔开。</p><h3 id="【输出】-56">【输出】</h3><p>输出共 1 行，表示数字 2 出现的次数。</p><h3 id="【输入样例】-56">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-56">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><h3 id="【提示】-15">【提示】</h3><p>样例 #2：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><p>样例 #2：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">20<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> L,R,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;L&gt;&gt;R;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=L;i&lt;=R;i++)&#123;<br><span class="hljs-type">int</span> num=i;<br><span class="hljs-keyword">while</span>(num&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">if</span>(num%<span class="hljs-number">10</span>==<span class="hljs-number">2</span>)<br>sum++;<br>num = num/<span class="hljs-number">10</span>;<br>&#125;<br>&#125;<br>cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1097：画矩形">1097：画矩形</h2><h3 id="【题目描述】-57">【题目描述】</h3><p>根据参数，画出矩形。输入四个参数：前两个参数为整数，依次代表矩形的高和宽（高不少于3行不多于10行，宽不少于5列不多于10列）；第三个参数是一个字符，表示用来画图的矩形符号；第四个参数为1或0，0代表空心，1代表实心。</p><h3 id="【输入】-57">【输入】</h3><p>输入一行，包括四个参数：前两个参数为整数，依次代表矩形的高和宽（高不少于3行不多于10行，宽不少于5列不多于10列）；第三个参数是一个字符，表示用来画图的矩形符号；第四个参数为1或0，0代表空心，1代表实心。</p><h3 id="【输出】-57">【输出】</h3><p>输出画出的图形。</p><h3 id="【输入样例】-57">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">7 </span><span class="hljs-number">7</span> @ <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-57">【输出样例】</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@ </span><br><span class="hljs-comment">@</span>     <span class="hljs-comment">@ </span><br><span class="hljs-comment">@</span>     <span class="hljs-comment">@ </span><br><span class="hljs-comment">@</span>     <span class="hljs-comment">@ </span><br><span class="hljs-comment">@</span>     <span class="hljs-comment">@ </span><br><span class="hljs-comment">@</span>     <span class="hljs-comment">@ </span><br><span class="hljs-comment">@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include&lt;iostream&gt;</span><br>using namespace std;<br>int main()&#123;<br>int h,w,s;<br>char zifu;<br>cin&gt;&gt;h&gt;&gt;w&gt;&gt;zifu&gt;&gt;s;<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">s</span>==1)&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">i</span>=1;i&lt;=h;i++)&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=1;j&lt;=w;j++)<br>cout&lt;&lt;zifu;<br>cout&lt;&lt;endl;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">i</span>=1;i&lt;=h;i++)&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">i</span>==1 || <span class="hljs-attribute">i</span>==h)&#123;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=1;j&lt;=w;j++)<br>cout&lt;&lt;zifu;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>cout&lt;&lt;zifu;<br><span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=1;j&lt;=w-2;j++)<br>cout&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>cout&lt;&lt;zifu;<br>&#125;<br>cout&lt;&lt;endl;<br>&#125;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1098：质因数分解">1098：质因数分解</h2><h3 id="【题目描述】-58">【题目描述】</h3><p>已知正整数n是两个不同的质数的乘积，试求出较大的那个质数。</p><h3 id="【输入】-58">【输入】</h3><p>输入只有一行，包含一个正整数 n。</p><p>对于60%的数据，6≤n≤1000。</p><p>对于100%的数据，6≤n≤2×10^9。</p><h3 id="【输出】-58">【输出】</h3><p>输出只有一行，包含一个正整数 p，即较大的那个质数。</p><h3 id="【输入样例】-58">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">21<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-58">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">7<br></code></pre></td></tr></table></figure><p>从大往小计算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">2</span>;i--)&#123;<br><span class="hljs-keyword">if</span>(n%i==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>以上代码会超时，需要进行优化，优化则是最大的质因数是一定大于n的平方根，并且注意需要从小到大计算因为小的数相较于大的数会少</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i*i&lt;=n;i++)&#123;<br><span class="hljs-keyword">if</span>(n%i==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;n/i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1099：第n小的质数">1099：第n小的质数</h2><h3 id="【题目描述】-59">【题目描述】</h3><p>输入一个正整数n，求第n小的质数。</p><h3 id="【输入】-59">【输入】</h3><p>一个不超过10000的正整数n。</p><h3 id="【输出】-59">【输出】</h3><p>第n小的质数。</p><h3 id="【输入样例】-59">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-59">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">29<br></code></pre></td></tr></table></figure><p>从小往大计算，统计第几个</p><p>如果检测到一个数num能够被2-num-1整除就判断不是质数，设置flag=false不增加第几个的计数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,i=<span class="hljs-number">0</span>,num=<span class="hljs-number">1</span>;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">while</span>(i!=n)&#123;<br>        num++;<br><span class="hljs-type">bool</span> flag = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">2</span>;j*j&lt;=num;j++)&#123;<br><span class="hljs-keyword">if</span>(num%j==<span class="hljs-number">0</span>)&#123;<br>flag = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(flag)<br>i++;<br>&#125;<br>cout&lt;&lt;num;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1100：金币">1100：金币</h2><h3 id="【题目描述】-60">【题目描述】</h3><p>国王将金币作为工资，发放给忠诚的骑士。第1天，骑士收到一枚金币；之后两天(第2天和第3天)里，每天收到两枚金币；之后三天(第4、5、6天)里，每天收到三枚金币；之后四天(第7、8、9、10天)里，每天收到四枚金币……这种工资发放模式会一直这样延续下去：当连续n天每天收到n枚金币后，骑士会在之后的连续n+1天里，每天收到n+1枚金币(n为任意正整数)。</p><p>你需要编写一个程序，确定从第一天开始的给定天数内，骑士一共获得了多少金币。</p><h3 id="【输入】-60">【输入】</h3><p>一个整数（范围1到10000），表示天数。</p><h3 id="【输出】-60">【输出】</h3><p>骑士获得的金币数。</p><h3 id="【输入样例】-60">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">6<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-60">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">14<br></code></pre></td></tr></table></figure><p>第一层循环增加第几个天（天数与金币数有关），第二层计算金币数和当前真实日期数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n,gold=<span class="hljs-number">0</span>,day=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=i;j++)&#123;<br>        gold += i;<br>        day++;<br>        <span class="hljs-keyword">if</span>(day==n)&#123;<br>        cout&lt;&lt;gold;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        &#125;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1101：不定方程求解">1101：不定方程求解</h2><h3 id="【题目描述】-61">【题目描述】</h3><p>给定正整数a，b，c。求不定方程 ax+by=c 关于未知数x和y的所有非负整数解组数。</p><h3 id="【输入】-61">【输入】</h3><p>一行，包含三个正整数a，b，c，两个整数之间用单个空格隔开。每个数均不大于1000。</p><h3 id="【输出】-61">【输出】</h3><p>一个整数，即不定方程的非负整数解组数。</p><h3 id="【输入样例】-61">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">3</span> <span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-61">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">4<br></code></pre></td></tr></table></figure><p>两重循环，第一层循环是遍历x，第二层遍历y，x与y的大小不会超过c，x与y从0开始遍历</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c,sum=<span class="hljs-number">0</span>;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> x=<span class="hljs-number">0</span>;x&lt;c;x++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> y=<span class="hljs-number">0</span>;y&lt;=c-x;y++)&#123;<br>        <span class="hljs-keyword">if</span>(a*x+b*y==c)<br>        sum++;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;sum;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>程序的控制结构</title>
    <link href="/2024/04/23/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/"/>
    <url>/2024/04/23/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1>程序的控制结构</h1><h2 id="–if语句">–if语句</h2><h2 id="2051：偶数">2051：偶数</h2><h3 id="【题目描述】">【题目描述】</h3><p>读入一个正整数a，如果a为偶数输出<code>yes</code>。</p><h3 id="【输入】">【输入】</h3><p>一个正整数a。</p><h3 id="【输出】">【输出】</h3><p>偶数输出<code>yes</code>，否则什么也不输出。</p><h3 id="【输入样例】">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">12<br></code></pre></td></tr></table></figure><h3 id="【输出样例】">【输出样例】</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a;<br>cin&gt;&gt;a;<br><span class="hljs-keyword">if</span>(a%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;yes&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2052：范围判断">2052：范围判断</h2><h3 id="【题目描述】-2">【题目描述】</h3><p>读入一个整数，若这个数大于1并且小于100，则输出<code>yes</code>。</p><h3 id="【输入】-2">【输入】</h3><p>一个整数</p><h3 id="【输出】-2">【输出】</h3><p>满足条件输出<code>yes</code>，否则不输出。</p><h3 id="【输入样例】-2">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">76<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-2">【输出样例】</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a;<br>cin&gt;&gt;a;<br><span class="hljs-keyword">if</span>(a&gt;<span class="hljs-number">1</span> &amp;&amp; a&lt;<span class="hljs-number">100</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;yes&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2053：三个数">2053：三个数</h2><h3 id="【题目描述】-3">【题目描述】</h3><p>输入三个整数，按从大到小的顺序输出。</p><h3 id="【输入】-3">【输入】</h3><p>输入三个整数</p><h3 id="【输出】-3">【输出】</h3><p>按从大到小的顺序输出。</p><h3 id="【输入样例】-3">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-3">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> max,mid,min,tmp;<br>cin&gt;&gt;max&gt;&gt;mid&gt;&gt;min;<br><span class="hljs-keyword">if</span>(min&gt;mid)&#123;<br>tmp = min;<br>min = mid;<br>mid = tmp;<br>&#125;<br><span class="hljs-keyword">if</span>(mid&gt;max)&#123;<br>tmp = mid;<br>mid = max;<br>max = tmp;<br>&#125;<br><span class="hljs-keyword">if</span>(min&gt;mid)&#123;<br>tmp = min;<br>min = mid;<br>mid = tmp;<br>&#125;<br>cout&lt;&lt;max&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;mid&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;min;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2054：适合晨练">2054：适合晨练</h2><h3 id="【题目描述】-4">【题目描述】</h3><p>输入温度t的值，判断是否适合晨练。(25≤t≤30，则适合晨练<code>ok!</code>，否则不适合<code>no!</code>)</p><h3 id="【输入】-4">【输入】</h3><p>输入温度t的值。</p><h3 id="【输出】-4">【输出】</h3><p>输出判断结果</p><h3 id="【输入样例】-4">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">26<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-4">【输出样例】</h3><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">ok!<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> t;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">if</span>(t&gt;=<span class="hljs-number">25</span> &amp;&amp; t&lt;=<span class="hljs-number">30</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;ok!&quot;</span>;<br>&#125;<span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;no!&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2055：收费">2055：收费</h2><h3 id="【题目描述】-5">【题目描述】</h3><p>乘坐飞机时，当乘客行李小于等于20公斤时，按每公斤1.68元收费，大于20公斤时，按每公斤1.98元收费，编程计算收费(保留2位小数)。</p><h3 id="【输入】-5">【输入】</h3><p>行李重量。</p><h3 id="【输出】-5">【输出】</h3><p>费用（保留2位小数）。</p><h3 id="【输入样例】-5">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">20</span>.<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-5">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">33</span>.<span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> weight;<br>cin&gt;&gt;weight;<br><span class="hljs-keyword">if</span>(weight&lt;=<span class="hljs-number">20</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,weight*<span class="hljs-number">1.68</span>);<br>&#125;<span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,weight*<span class="hljs-number">1.98</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2056：最大的数">2056：最大的数</h2><h3 id="【题目描述】-6">【题目描述】</h3><p>输入三个数，输出其中最大的数。</p><h3 id="【输入】-6">【输入】</h3><p>输入三个数。</p><h3 id="【输出】-6">【输出】</h3><p>其中最大的数。</p><h3 id="【输入样例】-6">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.<span class="hljs-number">01</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>.<span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-6">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> max,mid,min,tmp;<br>cin&gt;&gt;max&gt;&gt;mid&gt;&gt;min;<br><span class="hljs-keyword">if</span>(min&gt;mid)&#123;<br>tmp = min;<br>min = mid;<br>mid = tmp;<br>&#125;<br><span class="hljs-keyword">if</span>(mid&gt;max)&#123;<br>tmp = mid;<br>mid = max;<br>max = tmp;<br>&#125;<br>cout&lt;&lt;max;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1039：判断数正负">1039：判断数正负</h2><h3 id="【题目描述】-7">【题目描述】</h3><p>给定一个整数N，判断其正负。如果N&gt;0，输出<code>positive</code>；如果N=0，输出<code>zero</code>；如果N&lt;0，输出<code>negative</code>。</p><h3 id="【输入】-7">【输入】</h3><p>一个整数N(−109≤N≤109)。</p><h3 id="【输出】-7">【输出】</h3><p>如果N&gt;0, 输出<code>positive</code>;</p><p>如果N=0, 输出<code>zero</code>;</p><p>如果N&lt;0, 输出<code>negative</code>。</p><h3 id="【输入样例】-7">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-7">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">positive</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">if</span>(n&gt;<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;positive&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;zero&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;negative&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1040：输出绝对值">1040：输出绝对值</h2><h3 id="【题目描述】-8">【题目描述】</h3><p>输入一个浮点数，输出这个浮点数的绝对值，保留到小数点后两位。</p><h3 id="【输入】-8">【输入】</h3><p>输入一个浮点数，其绝对值不超过10000。</p><h3 id="【输出】-8">【输出】</h3><p>输出这个浮点数的绝对值，保留到小数点后两位。</p><h3 id="【输入样例】-8">【输入样例】</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-3.14</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-8">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">3</span>.<span class="hljs-number">14</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>,<span class="hljs-built_in">fabs</span>(n));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1041：奇偶数判断">1041：奇偶数判断</h2><h3 id="【题目描述】-9">【题目描述】</h3><p>给定一个整数，判断该数是奇数还是偶数。如果n是奇数，输出odd；如果n是偶数，输出even。</p><h3 id="【输入】-9">【输入】</h3><p>输入仅一行，一个大于零的正整数n。</p><h3 id="【输出】-9">【输出】</h3><p>输出仅一行，如果n是奇数，输出odd；如果n是偶数，输出even。</p><h3 id="【输入样例】-9">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">5<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-9">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">odd</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">if</span>(n%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;even&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;odd&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1042：奇偶ASCII值判断">1042：奇偶ASCII值判断</h2><h3 id="【题目描述】-10">【题目描述】</h3><p>任意输入一个字符，判断其ASCII是否是奇数，若是，输出YES，否则，输出NO。例如，字符A的ASCII值是6565，则输出YES，若输入字符B(ASCII值是6666)，则输出N。</p><h3 id="【输入】-10">【输入】</h3><p>输入一个字符。</p><h3 id="【输出】-10">【输出】</h3><p>如果其ASCII值为奇数，则输出YES，否则，输出NO。</p><h3 id="【输入样例】-10">【输入样例】</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-10">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">char</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">int</span>(n)%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;NO&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1043：整数大小比较">1043：整数大小比较</h2><h3 id="【题目描述】-11">【题目描述】</h3><p>输入两个整数，比较它们的大小。若x&gt;y，输出&gt;；若x=y，输出=；若x&lt;y，输出&lt;。</p><h3 id="【输入】-11">【输入】</h3><p>一行，包含两个整数x和y，中间用单个空格隔开。0≤x&lt;2^32, −2^31≤y&lt;2^31。</p><h3 id="【输出】-11">【输出】</h3><p>一个字符。若x&gt;y，输出 &gt; ；若x=y，输出 ==；若x&lt;y，输出 &lt; ；</p><h3 id="【输入样例】-11">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1000 </span><span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-11">【输出样例】</h3><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-keyword">if</span>(x&gt;y)<br>cout&lt;&lt;<span class="hljs-string">&#x27;&gt;&#x27;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x==y)<br>cout&lt;&lt;<span class="hljs-string">&#x27;=&#x27;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&#x27;&lt;&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1044：判断是否为两位数">1044：判断是否为两位数</h2><h3 id="【题目描述】-12">【题目描述】</h3><p>判断一个正整数是否是两位数(即大于等于10且小于等于99)。若该正整数是两位数，输出1，否则输出0。</p><h3 id="【输入】-12">【输入】</h3><p>一个正整数，不超过1000。</p><h3 id="【输出】-12">【输出】</h3><p>一行。若该正整数是两位数，输出1，否则输出0。</p><h3 id="【输入样例】-12">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">54<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-12">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">if</span>(x&gt;=<span class="hljs-number">10</span> &amp;&amp; x&lt;=<span class="hljs-number">99</span>)<br>cout&lt;&lt;<span class="hljs-string">&#x27;1&#x27;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&#x27;0&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1045：收集瓶盖赢大奖">1045：收集瓶盖赢大奖</h2><h3 id="【题目描述】-13">【题目描述】</h3><p>某饮料公司最近推出了一个“收集瓶盖赢大奖”的活动：如果你拥有10个印有“幸运”、或20个印有“鼓励”的瓶盖，就可以兑换一个神秘大奖。现分别给出你拥有的印有“幸运”和“鼓励”的瓶盖数，判断是否可以去兑换大奖。若可以兑换大奖，输出1，否则输出0。</p><h3 id="【输入】-13">【输入】</h3><p>一行，包含两个整数，分别是印有“幸运”和“鼓励”的瓶盖数，用一个空格隔开。</p><h3 id="【输出】-13">【输出】</h3><p>一行。若可以兑换大奖，输出1，否则输出0。</p><h3 id="【输入样例】-13">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">11 </span><span class="hljs-number">19</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-13">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-keyword">if</span>(x&gt;=<span class="hljs-number">10</span> || y&gt;=<span class="hljs-number">20</span>)<br>cout&lt;&lt;<span class="hljs-string">&#x27;1&#x27;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&#x27;0&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1046：判断一个数能否同时被3和5整除">1046：判断一个数能否同时被3和5整除</h2><h3 id="【题目描述】-14">【题目描述】</h3><p>判断一个数n 能否同时被3和5整除，如果能同时被3和5整除输出YES，否则输出NO。</p><h3 id="【输入】-14">【输入】</h3><p>输入一行，包含一个整数n。（ -1,000,000 &lt; n &lt; 1,000,000）</p><h3 id="【输出】-14">【输出】</h3><p>输出一行，如果能同时被3和5整除输出YES，否则输出NO。</p><h3 id="【输入样例】-14">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">15<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-14">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">if</span>(x%<span class="hljs-number">3</span>==<span class="hljs-number">0</span> &amp;&amp; x%<span class="hljs-number">5</span>==<span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;NO&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1047：判断能否被3，5，7整除">1047：判断能否被3，5，7整除</h2><h3 id="【题目描述】-15">【题目描述】</h3><p>给定一个整数，判断它能否被3，5，7整除，并输出以下信息：</p><p>1、能同时被3，5，7整除（直接输出<code>3 5 7</code>，每个数中间一个空格）；</p><p>2、只能被其中两个数整除（输出两个数，小的在前，大的在后。例如：<code>3 5</code>或者<code>3 7</code>或者<code>5 7</code>，中间用空格分隔）；</p><p>3、只能被其中一个数整除（输出这个除数）；</p><p>4、不能被任何数整除，输出小写字符‘<code>n</code>’，不包括单引号。</p><h3 id="【输入】-15">【输入】</h3><p>输入一行，包括一个整数。</p><h3 id="【输出】-15">【输出】</h3><p>输出一行，按照描述要求给出整数被3，5，7整除的情况。</p><h3 id="【输入样例】-15">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">105<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-15">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">5</span> <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include&lt;iostream&gt;</span><br>using namespace std;<br>int main()&#123;<br>int x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">3</span>==0 &amp;&amp; x%<span class="hljs-attribute">5</span>==0 &amp;&amp; x%<span class="hljs-attribute">7</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;3 5 7&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">3</span>==0 &amp;&amp; x%<span class="hljs-attribute">5</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;3 5&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">3</span>==0 &amp;&amp; x%<span class="hljs-attribute">7</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;3 7&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">5</span>==0 &amp;&amp; x%<span class="hljs-attribute">7</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;5 7&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">3</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;3&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">5</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;5&quot;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x%<span class="hljs-attribute">7</span>==0)<br>cout&lt;&lt;<span class="hljs-string">&quot;7&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&#x27;n&#x27;</span>;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1048：有一门课不及格的学生">1048：有一门课不及格的学生</h2><h3 id="【题目描述】-16">【题目描述】</h3><p>给出一名学生的语文和数学成绩，判断他是否恰好有一门课不及格(成绩小于60分)。若该生恰好有一门课不及格，输出1；否则输出0。</p><h3 id="【输入】-16">【输入】</h3><p>一行，包含两个在0到100之间的整数，分别是该生的语文成绩和数学成绩。</p><h3 id="【输出】-16">【输出】</h3><p>若该生恰好有一门课不及格，输出1；否则输出0。</p><h3 id="【输入样例】-16">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">50 </span><span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-16">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-keyword">if</span>((x&lt;<span class="hljs-number">60</span> &amp;&amp; y&gt;=<span class="hljs-number">60</span>) || (x&gt;=<span class="hljs-number">60</span> &amp;&amp; y&lt;<span class="hljs-number">60</span>))<br>cout&lt;&lt;<span class="hljs-string">&quot;1&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;0&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="–switch语句">–switch语句</h2><h2 id="2057：星期几">2057：星期几</h2><h3 id="【题目描述】-17">【题目描述】</h3><p>根据输入的表示星期几的数字，对应输出它的英文名称。</p><p>1、星期一：<code>Monday</code></p><p>2、星期二：<code>Tuesday</code></p><p>3、星期三：<code>Wednesday</code></p><p>4、星期四：<code>Thursday</code></p><p>5、星期五：<code>Friday</code></p><p>6、星期六：<code>Saturday</code></p><p>7、星期日：<code>Sunday</code></p><p>错误输入请输出：<code>input error!</code></p><h3 id="【输入】-17">【输入】</h3><p>输入的表示星期几的数字。</p><h3 id="【输出】-17">【输出】</h3><p>对应输出它的英文名称。</p><h3 id="【输入样例】-17">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-17">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">Monday</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">switch</span>(x)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Monday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Tuesday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Wednesday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Thursday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Friday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Saturday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Sunday&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;input error!&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2058：简单计算器">2058：简单计算器</h2><h3 id="【题目描述】-18">【题目描述】</h3><p>一个最简单的计算器支持<code>+，-，*，/</code>四种运算。输入只有一行：两个参加运算的数和一个操作符(<code>+，-，*，/</code>)。输出运算表达式的结果。考虑下面两种情况：</p><p>（1）如果出现除数为0的情况，则输出：<code>Divided by zero!</code></p><p>（2）如果出现无效的操作符(即不为<code>+，-，*，/</code>之一)，则输出：<code>Invalid operator!</code></p><h3 id="【输入】-18">【输入】</h3><p>一行，前面两个数，再一个运算符号。</p><h3 id="【输出】-18">【输出】</h3><p>运算表达式的结果。</p><h3 id="【输入样例】-18">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">34 </span><span class="hljs-number">56</span> +<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-18">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">90<br></code></pre></td></tr></table></figure><h3 id="【提示】">【提示】</h3><p>【样例2】</p><p>输入：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">2 </span><span class="hljs-number">1.2</span> -<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>.<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> x,y;<br><span class="hljs-type">char</span> op;<br>cin&gt;&gt;x&gt;&gt;y&gt;&gt;op;<br><span class="hljs-keyword">switch</span>(op)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>cout&lt;&lt;x+y;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>cout&lt;&lt;x-y;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>cout&lt;&lt;x*y;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br><span class="hljs-keyword">if</span>(y==<span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;Divided by zero!&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;x/y;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Invalid operator!&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2059：买笔">2059：买笔</h2><h3 id="【题目描述】-19">【题目描述】</h3><p>期末来临了，班长小Q决定将剩余班费x元钱，用于购买若干支钢笔奖励给一些学习好、表现好的同学。已知商店里有三种钢笔，它们的单价为6元、5元和4元。小Q想买尽量多的笔（鼓励尽量多的同学），同时他又不想有剩余钱。请您编一程序，帮小Q制订出一种买笔的方案。</p><h3 id="【输入】-19">【输入】</h3><p>一个正整数x（剩余班费）。</p><h3 id="【输出】-19">【输出】</h3><p>一行，依次为6元、5元和4元钱笔的数目，用一个空格隔开。</p><h3 id="【输入样例】-19">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-19">【输出样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">0</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【分析】">【分析】</h3><p>想要尽可能多买笔，就先买便宜的4元的，买完看剩余的钱</p><p>剩0元 刚好</p><p>剩1元 把一个4元换成5元</p><p>剩2元 把一个4元换成6元</p><p>剩3元 把两个4元换成5元6元</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,a=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>,c=<span class="hljs-number">0</span>;<br>cin&gt;&gt;x;<br>c = x/<span class="hljs-number">4</span>;<br><span class="hljs-keyword">switch</span>(x%<span class="hljs-number">4</span>)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>b++;<br>c--;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>a++;<br>c--;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>a++;<br>b++;<br>c = c<span class="hljs-number">-2</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br>cout&lt;&lt;a&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;b&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;c;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1049：晶晶赴约会">1049：晶晶赴约会</h2><h3 id="【题目描述】-20">【题目描述】</h3><p>晶晶的朋友贝贝约晶晶下周一起去看展览，但晶晶每周的1、3、5有课必须上课，请帮晶晶判断她能否接受贝贝的邀请，如果能输出YES；如果不能则输出NO。注意YES和NO都是大写字母！</p><h3 id="【输入】-20">【输入】</h3><p>输入有一行，贝贝邀请晶晶去看展览的日期，用数字1到7表示从星期一到星期日。</p><h3 id="【输出】-20">【输出】</h3><p>输出有一行，如果晶晶可以接受贝贝的邀请，输出YES，否则，输出NO。注意YES和NO都是大写字母！</p><h3 id="【输入样例】-20">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">2<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-20">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">switch</span>(x)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;NO&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1050：骑车与走路">1050：骑车与走路</h2><h3 id="【题目描述】-21">【题目描述】</h3><p>在清华校园里，没有自行车，上课办事会很不方便。但实际上。并非去办任何事情都是骑车快,因为骑车总要找车、开锁、停车、锁车等,这要耽误一些时间。假设找到自行车，开锁并骑上自行车的时间为27秒；停车锁车的时间为23秒；步行每秒行走1.2米，骑车每秒行走3.0米。请判断走不同的距离去办事,是骑车快还是走路快。如果骑车快，输出一行&quot;Bike&quot;；如果走路快，输出一行&quot;Walk&quot;；如果一样快，输出一行&quot;All&quot;。</p><h3 id="【输入】-21">【输入】</h3><p>输入一行，包含一个整数，表示一次办事要行走的距离,单位为米。</p><h3 id="【输出】-21">【输出】</h3><p>输出一行,如果骑车快,输出一行&quot;Bike&quot;;如果走路快,输出一行&quot;Walk&quot;;如果一样快,输出一行&quot;All&quot;。</p><h3 id="【输入样例】-21">【输入样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">120<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-21">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">Bike</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x;<br>cin&gt;&gt;x;<br><span class="hljs-type">double</span> buxing = x/<span class="hljs-number">1.2</span>;<br><span class="hljs-type">double</span> qiche = <span class="hljs-number">50</span>+x/<span class="hljs-number">3.0</span>;<br><span class="hljs-type">int</span> c = buxing&gt;qiche;<br><span class="hljs-keyword">switch</span>(c)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Bike&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;Walk&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;All&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1051：分段函数">1051：分段函数</h2><h3 id="【题目描述】-22">【题目描述】</h3><p>编写程序，计算下列分段函数y=f(x)的值。结果保留到小数点后三位。</p><p>y=−x+2.5;0≤x&lt;5</p><p>y=2−1.5(x−3)(x−3);5≤x&lt;10</p><p>y=x/2−1.5;10≤x&lt;20</p><h3 id="【输入】-22">【输入】</h3><p>一个浮点数N(0≤N&lt;20)。</p><h3 id="【输出】-22">【输出】</h3><p>输出 N对应的分段函数值：f(N)。结果保留到小数点后三位。</p><h3 id="【输入样例】-22">【输入样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-22">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.<span class="hljs-number">500</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">5</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f&quot;</span>,<span class="hljs-number">2.5</span>-x);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">10</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f&quot;</span>,<span class="hljs-number">2</span><span class="hljs-number">-1.5</span>*(x<span class="hljs-number">-3</span>)*(x<span class="hljs-number">-3</span>));<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3f&quot;</span>,x/<span class="hljs-number">2</span><span class="hljs-number">-1.5</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1052：计算邮资">1052：计算邮资</h2><h3 id="【题目描述】-23">【题目描述】</h3><p>根据邮件的重量和用户是否选择加急计算邮费。计算规则：重量在1000克以内(包括1000克), 基本费8元。超过1000克的部分，每500克加收超重费4元，不足500克部分按500克计算；如果用户选择加急，多收5元。</p><h3 id="【输入】-23">【输入】</h3><p>输入一行，包含整数和一个字符，以一个空格分开，分别表示重量（单位为克）和是否加急。如果字符是y，说明选择加急；如果字符是n，说明不加急。</p><h3 id="【输出】-23">【输出】</h3><p>输出一行，包含一个整数，表示邮费。</p><h3 id="【输入样例】-23">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1200 </span>y<br></code></pre></td></tr></table></figure><h3 id="【输出样例】-23">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">17<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x;<br><span class="hljs-type">char</span> s;<br>cin&gt;&gt;x&gt;&gt;s;<br><span class="hljs-keyword">switch</span>(s)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;y&#x27;</span>:<br><span class="hljs-keyword">if</span>(x&lt;=<span class="hljs-number">1000</span>)<br>cout&lt;&lt;<span class="hljs-number">8</span>+<span class="hljs-number">5</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-number">8</span>+<span class="hljs-number">5</span>+<span class="hljs-number">4</span>*<span class="hljs-built_in">ceil</span>(<span class="hljs-number">1.0</span>*(x<span class="hljs-number">-1000</span>)/<span class="hljs-number">500</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;n&#x27;</span>:<br><span class="hljs-keyword">if</span>(x&lt;=<span class="hljs-number">1000</span>)<br>cout&lt;&lt;<span class="hljs-number">8</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-number">8</span>+<span class="hljs-number">4</span>*<span class="hljs-built_in">ceil</span>(<span class="hljs-number">1.0</span>*(x<span class="hljs-number">-1000</span>)/<span class="hljs-number">500</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1053：最大数输出">1053：最大数输出</h2><h3 id="【题目描述】-24">【题目描述】</h3><p>输入三个整数，数与数之间以一个空格分开。 输出一个整数，即最大的整数。</p><h3 id="【输入】-24">【输入】</h3><p>输入为一行，包含三个整数，数与数之间以一个空格分开。</p><h3 id="【输出】-24">【输出】</h3><p>输出一行，包含一个整数，即最大的整数。</p><h3 id="【输入样例】-24">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">10 </span><span class="hljs-number">20</span> <span class="hljs-number">56</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-24">【输出样例】</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">56<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> max,mid,min,tmp;<br>cin&gt;&gt;max&gt;&gt;mid&gt;&gt;min;<br><span class="hljs-keyword">if</span>(min&gt;mid)&#123;<br>tmp = min;<br>min = mid;<br>mid = tmp;<br>&#125;<br><span class="hljs-keyword">if</span>(mid&gt;max)&#123;<br>tmp = mid;<br>mid = max;<br>max = tmp;<br>&#125;<br>cout&lt;&lt;max;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1054：三角形判断">1054：三角形判断</h2><h3 id="【题目描述】-25">【题目描述】</h3><p>给定三个正整数，分别表示三条线段的长度，判断这三条线段能否构成一个三角形。如果能构成三角形，则输出“yes”，否则输出“no”。</p><h3 id="【输入】-25">【输入】</h3><p>输入共一行，包含三个正整数，分别表示三条线段的长度，数与数之间以一个空格分开。</p><h3 id="【输出】-25">【输出】</h3><p>如果能构成三角形，则输出“yes” ，否则输出“no”。</p><h3 id="【输入样例】-25">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span><span class="hljs-number">4</span> <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-25">【输出样例】</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a,b,c;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br><span class="hljs-keyword">if</span>(a+b&gt;c &amp;&amp; a+c&gt;b &amp;&amp; b+c&gt;a)<br>cout&lt;&lt;<span class="hljs-string">&quot;yes&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;no&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1055：判断闰年">1055：判断闰年</h2><h3 id="【题目描述】-26">【题目描述】</h3><p>判断某年是否是闰年。如果公元a年是闰年输出Y，否则输出N。</p><h3 id="【输入】-26">【输入】</h3><p>输入只有一行，包含一个整数a(0 &lt; a &lt; 3000)。</p><h3 id="【输出】-26">【输出】</h3><p>一行，如果公元a年是闰年输出Y，否则输出N。</p><h3 id="【输入样例】-26">【输入样例】</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">2006</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-26">【输出样例】</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">N</span><br></code></pre></td></tr></table></figure><h3 id="【分析】-2">【分析】</h3><p>闰年的判断标准</p><p>（四年一闰 <strong>并且</strong> 百年不闰） <strong>或者</strong> 四百年再闰</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> a;<br>cin&gt;&gt;a;<br><span class="hljs-keyword">if</span>((a%<span class="hljs-number">4</span>==<span class="hljs-number">0</span> &amp;&amp; a%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>) || a%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;Y&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;N&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1056：点和正方形的关系">1056：点和正方形的关系</h2><h3 id="【题目描述】-27">【题目描述】</h3><p>有一个正方形，四个角的坐标（x,y)分别是(1，-1)，(1，1)，(-1，-1)，(-1，1)，x是横轴，y是纵轴。写一个程序，判断一个给定的点是否在这个正方形内(包括正方形边界)。如果点在正方形内，则输出yes，否则输出no。</p><h3 id="【输入】-27">【输入】</h3><p>输入一行，包括两个整数x、y，以一个空格分开，表示坐标(x,y)。</p><h3 id="【输出】-27">【输出】</h3><p>输出一行，如果点在正方形内，则输出yes，否则输出no。</p><h3 id="【输入样例】-27">【输入样例】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-27">【输出样例】</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-keyword">if</span>(x&gt;=<span class="hljs-number">-1</span> &amp;&amp; x&lt;=<span class="hljs-number">1</span> &amp;&amp; y&gt;=<span class="hljs-number">-1</span> &amp;&amp; y&lt;=<span class="hljs-number">1</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;yes&quot;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;no&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1058：求一元二次方程">1058：求一元二次方程</h2><h3 id="【题目描述】-28">【题目描述】</h3><p>利用公式</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mn>1</mn><mo>=</mo><mfrac><mrow><mo>−</mo><mi>b</mi><mo>+</mo><msqrt><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></msqrt></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac><mtext>，</mtext><mi>x</mi><mn>2</mn><mo>=</mo><mfrac><mrow><mo>−</mo><mi>b</mi><mo>−</mo><msqrt><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></msqrt></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x1=\frac{−b+\sqrt{b^2−4ac}}{2a}，x2=\frac{−b-\sqrt{b^2−4ac}}{2a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2764em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5904em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9134em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span></span></span><span style="top:-2.8734em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1266em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">x</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2764em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5904em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9134em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span></span></span><span style="top:-2.8734em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1266em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>，求一元二次方程</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ax^2+bx+c=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>的根，其中a不等于0。结果要求精确到小数点后5位。</p><h3 id="【输入】-28">【输入】</h3><p>输入一行，包含三个浮点数a,b,c（它们之间以一个空格分开），分别表示方程</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ax^2+bx+c=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><p>的系数。</p><h3 id="【输出】-28">【输出】</h3><p>输出一行，表示方程的解。</p><p>若两个实根相等，则输出形式为：“x1=x2=…”；</p><p>若两个实根不等，在满足根小者在前的原则，则输出形式为：“x1=…;x2=…“；</p><p>若无实根输出“No answer!”。</p><p>所有输出部分要求精确到小数点后5位，数字、符号之间没有空格。</p><h3 id="【输入样例】-28">【输入样例】</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-15.97 19.69 12.02</span><br></code></pre></td></tr></table></figure><h3 id="【输出样例】-28">【输出样例】</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">x1</span>=-<span class="hljs-number">0</span>.<span class="hljs-number">44781</span>;x2=<span class="hljs-number">1</span>.<span class="hljs-number">68075</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#inlcude<span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">double</span> a,b,c,x1,x2;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br><span class="hljs-keyword">if</span>((b*b<span class="hljs-number">-4</span>*a*c)&lt;<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;No answer!&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>x1 = (<span class="hljs-built_in">sqrt</span>(b*b<span class="hljs-number">-4</span>*a*c)-b)/(<span class="hljs-number">2</span>*a);<br>x2 = (<span class="hljs-number">0</span>-<span class="hljs-built_in">sqrt</span>(b*b<span class="hljs-number">-4</span>*a*c)-b)/(<span class="hljs-number">2</span>*a)<br><span class="hljs-keyword">switch</span>(<span class="hljs-number">1</span>)&#123;<br><span class="hljs-built_in">case</span> (x1==x2):<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s%.5f&quot;</span>,<span class="hljs-string">&quot;x1=x2=&quot;</span>,x1);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-built_in">case</span> (x1!=x2):<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s%.5f%s%.5f&quot;</span>,<span class="hljs-string">&quot;x1=&quot;</span>,x1,<span class="hljs-string">&quot;;x2=&quot;</span>,x2);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo搭建流程</title>
    <link href="/2024/04/16/hexo-setup/"/>
    <url>/2024/04/16/hexo-setup/</url>
    
    <content type="html"><![CDATA[<h2 id="安装Git">安装Git</h2><p>下载地址</p><p><a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></p><h2 id="安装Nodejs">安装Nodejs</h2><p>下载地址</p><p><a href="https://nodejs.org/en">Node.js — Run JavaScript Everywhere (nodejs.org)</a></p><h2 id="安装hexo">安装hexo</h2><p>鼠标右击选择Open Git Bash，进入git中操作以下命令</p><p>查看node版本</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span> <br></code></pre></td></tr></table></figure><p>查看npm版本</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v<br></code></pre></td></tr></table></figure><p>安装淘宝的cnpm 管理器</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">npm install -g cnpm --<span class="hljs-keyword">registry</span>=<span class="hljs-keyword">http</span>://<span class="hljs-keyword">registry</span>.npmmirror.com<br></code></pre></td></tr></table></figure><p>查看cnpm版本</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">cnpm -v</span><br></code></pre></td></tr></table></figure><p>安装hexo框架</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">cnpm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>查看hexo版本</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></td></tr></table></figure><p>创建blog目录，随便在哪个位置，最好不要有中文</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir blog<br></code></pre></td></tr></table></figure><p>进入blog目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br></code></pre></td></tr></table></figure><p>设置git的登录邮箱和用户名，这个邮箱和用户名可以自己随便设置</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;xxx&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;xxx&quot;</span><br></code></pre></td></tr></table></figure><p>生成博客 初始化博客</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p>启动本地博客服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>本地访问地址</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//localhost:4000/</span><br></code></pre></td></tr></table></figure><p>创建新的文章</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">hexo <span class="hljs-built_in">n</span> <span class="hljs-string">&quot;我的第一篇文章&quot;</span><br></code></pre></td></tr></table></figure><p>清理</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br></code></pre></td></tr></table></figure><p>生成</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br></code></pre></td></tr></table></figure><h2 id="Github配置">Github配置</h2><p>Github创建一个新的仓库 <a href="http://YourGithubName.github.io">YourGithubName.github.io</a>，该仓库的名称Repository name必须是你的github名称，并且必须设置为public</p><p>在blog目录下安装git部署插件</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">cnpm install <span class="hljs-comment">--save hexo-deployer-git </span><br></code></pre></td></tr></table></figure><p>配置_config.yml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/deployment.html</span></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">    type:</span> git<br><span class="hljs-symbol">    repo:</span> https:<span class="hljs-comment">//github.com/YourGithubName/YourGithubName.github.io.git</span><br><span class="hljs-symbol">    branch:</span> master<br></code></pre></td></tr></table></figure><p>部署到Github仓库里，如果失败需要科学上网</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>访问这个地址可以查看博客</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//YourGithubName.github.io/</span><br></code></pre></td></tr></table></figure><h2 id="主题配置">主题配置</h2><p>hexo自带的主题不好看，可以换成别的主题，此处仅介绍最简单的主题更换</p><p>下载yilia主题到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia<br></code></pre></td></tr></table></figure><p>修改blog根目录下的 _config.yml 文件 ：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> yilia<br></code></pre></td></tr></table></figure><p>然后再走一遍流程</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>分布式数据库系统</title>
    <link href="/2024/04/16/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    <url>/2024/04/16/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p>–数据库：集成</p><p>–计算机网路：反集中</p><h2 id="1、分布式数据库概述">1、分布式数据库概述</h2><h3 id="1-分布式数据库定义：">1. 分布式数据库定义：</h3><p>物理上分散而逻辑上集中的数据库系统。它使用计算机网络将地理位置分散而管理和控制又需要不同程度集中的多个逻辑单位（通常是集中式数据库系统）连接起来，共同组成一个统一的数据库系统。</p><h3 id="2-分布式数据库系统特点">2. 分布式数据库系统特点</h3><p>物理分布性：数据不是存放在一个站点上</p><p>逻辑整体性：是与分散式数据库系统的区别</p><p>站点自治性：是与多处理机的系统的区别</p><p>数据分布透明性</p><p>集中与自治相结合</p><p>存在适当的数据冗余度</p><p>事务管理的分布性</p><h3 id="3-分布式数据库的模式结构">3. 分布式数据库的模式结构</h3><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212165838898.png" alt="image-20231212165838898"></p><h3 id="4-独立性和分布透明性">4. 独立性和分布透明性</h3><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231212170012931.png" alt="image-20231212170012931" style="zoom: 80%;" /><h3 id="5-DDBS的分类方法">5. DDBS的分类方法</h3><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213095024657.png" alt="image-20231213095024657"></p><h3 id="6-数据分片与分布">6. 数据分片与分布</h3><p>数据分片：水平、垂直、混合、导出分片</p><p>分片规则：完备性、可重构性、不相交性</p><p>数据分布：根据某种策略将数据分片所得的逻辑片段分散的存储在各个站点上</p><p>​集中式、分割式、复制式、混合式</p><h3 id="7-数据独立性和分布透明性">7. 数据独立性和分布透明性</h3><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213095952253.png" alt="image-20231213095952253"></p><h2 id="2、分布式数据库系统的设计">2、分布式数据库系统的设计</h2><h3 id="1-分片原因">1. 分片原因</h3><p>产生一个对全局数据合适的分片方案；</p><p>将分片片段作为存储和分配单位时，能够减少应用的数据操作量；</p><p>对数据的存取具有最大可能的本地性，即使得应用能够尽量存取本站点的数据。</p><h3 id="2-分片原则">2. 分片原则</h3><p>完整性</p><p>可重构性</p><p>不相交性</p><h3 id="3-分片方法">3. 分片方法</h3><p>水平分片、垂直分片</p><h3 id="4-分片评价">4. 分片评价</h3><p>连接图：表示片段间是否有可连接元组的图</p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212165308516.png" alt="image-20231212165308516"></p><h3 id="5-水平分片原则">5. 水平分片原则</h3><ol><li><p>生成满足分片原则的限定谓词（简单谓词集）</p><p>简单谓词一般形式：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>j</mi></msub><mo>:</mo><msub><mi>A</mi><mi>j</mi></msub><mi>θ</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo separator="true">,</mo><mi>θ</mi><mo>∈</mo><mo stretchy="false">{</mo><mo>=</mo><mo separator="true">,</mo><mo>&lt;</mo><mo separator="true">,</mo><mo>&gt;</mo><mo separator="true">,</mo><mo>≤</mo><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>∈</mo><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_j:A_j\theta value,\theta\in\{=,&lt;,&gt;,\le\},value\in D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>举例：A&lt;5，LOC=SA，A&gt;10</p><p>简单谓词集：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>p</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P_r=\{p_1,p_2,...,p_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p></li><li><p>生成满足分片原则的限定谓词（简单谓词集）</p></li></ol><p>​小项谓词形式：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>p</mi><mn>1</mn><mo>∗</mo></msubsup><msubsup><mi>p</mi><mn>2</mn><mo>∗</mo></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>p</mi><mi>n</mi><mo>∗</mo></msubsup><mo separator="true">,</mo><msup><mi>p</mi><mo>∗</mo></msup><mo>=</mo><mi>p</mi><mi mathvariant="normal">/</mi><mo>−</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">p_1^* p_2^*...p_n^*, p^*=p/-p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9857em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span></p><ol start="3"><li><p>消除无用谓词</p><p>限定谓词的选择、无用谓词的消除依赖于应用语义</p></li></ol><h3 id="6-垂直分片">6. 垂直分片</h3><ol><li><p>亲和度：属性之间在一起的紧密程度。</p></li><li><p>属性使用值：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>u</mi><mi>s</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mtext>如果属性</mtext><msub><mi>A</mi><mi>j</mi></msub><mtext>被查询</mtext><msub><mi>q</mi><mi>j</mi></msub><mtext>提及</mtext></mrow><annotation encoding="application/x-tex">use(q_i,A_j)=1, 如果属性A_j被查询q_j提及</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">se</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">如果属性</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">被查询</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">提及</span></span></span></span></span></p></li><li><p><strong>属性使用值矩阵</strong></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>4</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}&amp;A_1&amp;A_2&amp;A_3&amp;A_4\\q_1&amp;1&amp;0&amp;1&amp;0\\q_2&amp;0&amp;1&amp;1&amp;0\\q_3&amp;0&amp;1&amp;0&amp;1\\q_4&amp;0&amp;0&amp;1&amp;1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>亲和度</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mi>f</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>∑</mo><mrow><mi>r</mi><mi>e</mi><msub><mi>f</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mi>q</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mi>a</mi><mi>c</mi><msub><mi>c</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mi>q</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex"> aff(A_i,A_j)=\sum{ref_l(q_k)\cdot acc_l(q_k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">re</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></p></li><li><p><strong>应用频率矩阵</strong></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>S</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>S</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>S</mi><mn>3</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>15</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>20</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>25</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>25</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>25</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex"> \begin{bmatrix}&amp;S_1&amp;S_2&amp;S_3\\q_1&amp;15&amp;20&amp;10\\q_2&amp;5&amp;0&amp;0\\q_3&amp;25&amp;25&amp;25\\q_4&amp;3&amp;0&amp;0\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">15</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">25</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">20</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">25</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">25</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><strong>属性亲和度矩阵</strong></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>4</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">−</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>45</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">−</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>75</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>45</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">−</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>75</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">−</mo></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}&amp;A_1&amp;A_2&amp;A_3&amp;A_4\\A_1&amp;-&amp;0&amp;45&amp;0\\A_2&amp;0&amp;-&amp;5&amp;75\\A_3&amp;45&amp;5&amp;-&amp;3\\A_4&amp;0&amp;75&amp;3&amp;-\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M403 1759 V84 H666 V0 H319 V1759 v2400 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">45</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">75</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">45</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">75</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-0.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:8em;"></span><span style="width:0.667em;height:6.000em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="6.000em" viewBox="0 0 667 6000"><path d="M347 1759 V0 H0 V84 H263 V1759 v2400 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v2400 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>举例计算aff(A1,A3)</p><ol><li>在<strong>属性使用值矩阵</strong>中找到A1A3同时被查询到的q，此处是q1.</li><li>然后将<strong>应用频率矩阵</strong>中对应q1的一行相加，得到结果45。</li><li>都按照这个方式计算得到<strong>属性亲和度矩阵</strong></li></ol></li></ol><h3 id="7-关系代数">7. 关系代数</h3><h5 id="1、并运算U">1、并运算U</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>∪</mo><mi>S</mi><mo>=</mo><mi>R</mi><mi>S</mi><mtext>有的都写上</mtext></mrow><annotation encoding="application/x-tex">R\cup S=RS有的都写上</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RS</span><span class="mord cjk_fallback">有的都写上</span></span></span></span></span></p><h5 id="2、差运算">2、差运算</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>−</mo><mi>S</mi><mo>=</mo><mtext>属于</mtext><mi>R</mi><mtext>但不属于</mtext><mi>S</mi></mrow><annotation encoding="application/x-tex">R-S=属于R但不属于S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">属于</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">但不属于</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span></p><h5 id="3、交运算">3、交运算</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>∩</mo><mi>S</mi><mo>=</mo><mi>R</mi><mi>S</mi><mtext>共同有的</mtext></mrow><annotation encoding="application/x-tex">R\cap S=RS共同有的</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RS</span><span class="mord cjk_fallback">共同有的</span></span></span></span></span></p><h5 id="4、广义笛卡尔积">4、广义笛卡尔积</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>×</mo><mi>S</mi><mo>=</mo><mi>R</mi><mtext>有</mtext><msub><mi>k</mi><mn>1</mn></msub><mtext>个元组，</mtext><mi>S</mi><mtext>有</mtext><msub><mi>k</mi><mn>2</mn></msub><mtext>个元组，笛卡尔积后有</mtext><msub><mi>k</mi><mn>1</mn></msub><mo>×</mo><msub><mi>k</mi><mn>2</mn></msub><mtext>个元组</mtext></mrow><annotation encoding="application/x-tex">R\times S=R有k_1个元组，S有k_2个元组，笛卡尔积后有k_1\times k_2个元组</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">有</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">个元组，</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">有</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">个元组，笛卡尔积后有</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">个元组</span></span></span></span></span></p><h5 id="5、选择运算">5、选择运算</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>水平选择元组</mtext></mrow><annotation encoding="application/x-tex">\sigma_F(R)=水平选择元组</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">水平选择元组</span></span></span></span></span></p><h5 id="6、投影运算">6、投影运算</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>根据属性垂直选择元组</mtext></mrow><annotation encoding="application/x-tex">\Pi_A(R)=根据属性垂直选择元组</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">根据属性垂直选择元组</span></span></span></span></span></p><h5 id="7、连接运算">7、连接运算</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><msub><mi mathvariant="normal">∞</mi><mi>F</mi></msub><mi>S</mi></mrow><annotation encoding="application/x-tex">R\infty_F S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord">∞</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span></p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206112155795.png" alt="image-20231206112155795" style="zoom:33%;" /><p>等值连接</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206112220264.png" alt="image-20231206112220264" style="zoom:33%;" /><p>自然连接，相同<strong>属性</strong>连接，将<strong>重复属性</strong>的删除</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206112245991.png" alt="image-20231206112245991" style="zoom:33%;" /><p>半连接，自然连接后只保留R的属性投影</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206113037270.png" alt="image-20231206113037270" style="zoom:33%;" /><p>左外连接，RS自然连接时R不匹配的元组用NULL</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206114109124.png" alt="image-20231206114109124" style="zoom:33%;" /><p>全外连接，RS中所有不匹配的元组都用NULL表示，RS信息都在全外连接中得到保留</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206114241364.png" alt="image-20231206114241364" style="zoom:33%;" /><h5 id="8、除运算">8、除运算</h5><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>÷</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">R\div S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span></p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231206114746823.png" alt="image-20231206114746823" style="zoom:33%;" /><h2 id="3、查询优化">3、查询优化</h2><ol><li><h3 id="优化重要性">优化重要性</h3><p>数据的分布和冗余增加了并行处理查询的可能性， 从而可以缩减查询处理的响应时间.</p></li><li><h3 id="优化目标与准则">优化目标与准则</h3><p>以最小的总代价在最短的响应时间内获得需要的数据</p></li><li><h3 id="查询优化的层次、策略和原则">查询优化的层次、策略和原则</h3><h5 id="查询优化策略：">查询优化策略：</h5><ol><li>选择运算先做</li><li>选择与投影同时做</li><li>选择与笛卡尔积结合成连接操作</li></ol><h5 id="分布查询的层次结构">分布查询的层次结构</h5><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231213103356834.png" alt="image-20231213103356834" style="zoom: 67%;" /></li><li><h3 id="基于半连接的查询优化">基于半连接的查询优化</h3><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231207104508319.png" alt="image-20231207104508319" style="zoom:33%;" /><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231207104539010.png" alt="image-20231207104539010" style="zoom:33%;" /><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231207104557109.png" alt="image-20231207104557109" style="zoom:33%;" /><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231207104617961.png" alt="image-20231207104617961" style="zoom:33%;" /></li><li><h3 id="基于直接连接的查询优化">基于直接连接的查询优化</h3><ol><li><p>站点依赖算法</p><p>两个关系在属性A上满足分片连接为空集，则俩关系在属性A上站点依赖</p></li><li><p>分片与复制算法</p><p>选择总的响应时间最短的关系保持分片，而其余的关系则进行复制。</p></li><li><p>站点依赖与复制相结合</p></li><li><p>hash划分算法</p><p>用HASH函数h(a)将关系R1和R2的片段分为两组：</p></li></ol></li></ol><h2 id="4、事务管理与恢复">4、事务管理与恢复</h2><h3 id="分布式事务的特性（ACID）">分布式事务的特性（ACID）</h3><ol><li><p>原子性(Atomicity)</p><p>一个事务要么全执行，要么全不执行，是不可分割的执行单位。</p></li><li><p>一致性(Consistency)</p><p>指数据应满足的约束条件。分布式事务的执行能使得分布式数据库从一个一致状态转变为另一个一致状态 。</p></li><li><p>隔离性(Isolation)</p><p>事务更新过的数据在事务结束前对其他事务不可见。</p></li><li><p>持久性(Durability)</p><p>已完成事务对数据的更新应持久，发生故障后应不会丢失更新。</p></li></ol><h3 id="分布式事务管理的问题">分布式事务管理的问题</h3><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231213110709682.png" alt="image-20231213110709682" style="zoom:80%;" /><h3 id="分布式事务管理的任务与目标">分布式事务管理的任务与目标</h3><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231213110724854.png" alt="image-20231213110724854" style="zoom:80%;" /><h3 id="分布式事务的控制模型">分布式事务的控制模型</h3><ol><li><p>主从控制模型</p><p>分布式事务管理器DTM（Distributed Transaction Manager）</p><p>控制本地事务管理器LTM(Local Transaction Manager)</p></li><li><p>三角控制模型</p><p>本地事务管理器之间能够传递数据</p></li><li><p>层次控制模型</p><p>本地事务管理器可以再创建代理，控制其他LTM</p></li></ol><h3 id="事务故障与恢复">事务故障与恢复</h3><h5 id="1-事务恢复">1.事务恢复</h5><p>保证事务原子性的措施称为事务故障恢复，简称事务恢复，主要依靠日志来实现</p><h5 id="2-事务提交点">2.事务提交点</h5><p>当事务T在所有站点的数据库存取操作都已成功执行，并 且所有操作对数据库的影响都已记录在日志中时，该事务 T就到达提交点。</p><h5 id="3-检查点">3.检查点</h5><p>设置一个周期性（时间/容量）操作点，表示此前已执 行完的事务是正确的</p><h5 id="4-事务故障恢复">4.事务故障恢复</h5><p>UNDO：已经提交到稳定日志中，需要返回操作</p><p>REDO：已提交的操作但是没更新进稳定数据库，需要重新进行修改操作</p><h3 id="两阶段提交协议">两阶段提交协议</h3><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231209164634987.png" alt="image-20231209164634987" style="zoom:33%;" /><h5 id="通信结构">通信结构</h5><ol><li><p>集中式</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231209164744177.png" alt="image-20231209164744177" style="zoom:33%;" /></li><li><p>分层式</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231209164816439.png" alt="image-20231209164816439" style="zoom:33%;" /></li><li><p>线性</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231209164850400.png" alt="image-20231209164850400" style="zoom:33%;" /></li><li><p>分布式</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231209164857731.png" alt="image-20231209164857731" style="zoom:33%;" /></li></ol><h5 id="站点故障">站点故障</h5><ol><li><p>参与者</p><p>ready前：协调者超时，撤销决定和其他子事务</p><p>ready后：其他站点正常结束该事务(Commit 或 Abort) ， 故障站点重启后，由协调者提供相关信息，正确结束 (Commit 或 Abort )。</p></li><li><p>协调者</p><p>wait状态：abort</p><p>写入commit/abort后：需协调者重启时重新发决定信息，挂起的子事务继续提交，已提交子事务只发“ACK”信息。</p></li></ol><h3 id="多站点数据更新">多站点数据更新</h3><ol><li><p>多个站点同时更新不现实</p></li><li><p>故障站点更新：</p><p>对于故障站点可以保留一张更新记录表，在联通后再逐一进行更新。</p></li><li><p>主文本更新法：</p><p>指定一个文本为主文本，其他的为辅文本，数据的更新面向主文本，主文本站点负责辅文本的更新</p></li><li><p>主文本更新法问题：</p><p>更新传播必须在短时间内完成，否则可能产生“过时” 数据。</p><p>主文本站点不可用时，其他辅文本站点也不可用。</p></li></ol><h2 id="5、并发控制">5、并发控制</h2><h3 id="可串行化调度">可串行化调度</h3><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231209174823427.png" alt="image-20231209174823427"></p><h5 id="优先图判断法">优先图判断法</h5><p>节点代表S中的事务，有向边代表先后顺序，边上的值代表产生冲突的变量</p><p>当优先图没有环路时，调度S是可串行化的</p><p>如果优先图一样，代表冲突操作有相同的顺序，为等价调度</p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231209175212477.png" alt="image-20231209175212477"></p><h3 id="并发控制的封锁技术">并发控制的封锁技术</h3><ol><li><p>锁的类型</p><p>共享锁、排他锁、更新锁</p></li><li><p>封锁准则（锁相容性规则）</p></li><li><p>两阶段封锁协议</p><p>基本2PL</p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213113807814.png" alt="image-20231213113807814"></p><p>保守的2PL</p><p>严格的2PL：提交或撤销前，不能释放排他锁</p><p>严酷的2PL：提交或撤销前，不能释放任何锁</p></li></ol><h3 id="并发控制机制">并发控制机制</h3><h4 id="1、悲观法">1、悲观法</h4><h5 id="封锁法">封锁法</h5><h5 id="时标排序法">时标排序法</h5><ol><li><p>基本时标法</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231211105350935.png" alt="image-20231211105350935" style="zoom: 50%;" /></li><li><p>保守时标法</p><p>通过缓冲年轻的操作，直至年长的操作执行完成，</p></li></ol><h4 id="2、乐观法">2、乐观法</h4><p>假定事务冲突很少，事务先对数据进行读写操作，所有操 作执行完后进行验证：事务是否违反可串行性，如果没有 则提交；否则事务撤消，重新开始。</p><h5 id="加锁法">加锁法</h5><h5 id="时标排序法-2">时标排序法</h5><h5 id="多粒度封锁与意向锁">多粒度封锁与意向锁</h5><ol><li>多粒度树：以树结构来表示多级封锁粒度，根结点为整个数据库。</li><li>允许多粒度树中的每个结点被独立地加锁；</li><li>对一个结点加锁意味着这个结点的所有后裔结点也被加 以同样类型的锁；</li><li>如果对一个节点加意向锁，则说明该节点的下层节点正 在被封锁，对任一节点封锁时，必须先对它的上层节点加意向锁，意向锁指出该节点的某个后代需要锁的类型</li></ol><h5 id="DDBMS的死锁处理">DDBMS的死锁处理</h5><ol><li><p>死锁：事务1锁住x，同时想要被事务2锁住的y，而此时事务2也想要x。</p></li><li><p>在分布式数据库中数据冗余增加引起死锁的机会</p></li><li><p>等待图</p><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231210143448871.png" alt="image-20231210143448871" style="zoom:33%;" /></li><li><p>死锁预防</p><ol><li><p>等待-死亡协议（非占先权法）</p><p>t_i对被t_j锁定的数据请求封锁</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">if</span>(<span class="hljs-built_in">ts</span>(t_i) &lt; <span class="hljs-built_in">ts</span>(t_j)) <br>t_i wait;<br><span class="hljs-keyword">else</span><br>t_i restart;<br></code></pre></td></tr></table></figure></li><li><p>伤害-等待协议（占先权法）</p><p>t_i对被t_j锁定的数据请求封锁</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">if</span>(<span class="hljs-built_in">ts</span>(t_i) &gt; <span class="hljs-built_in">ts</span>(t_j)) <br>t_i wait;<br><span class="hljs-keyword">else</span><br>t_j restart;<br></code></pre></td></tr></table></figure></li></ol></li></ol><h5 id="基于时标排序的多版本技术">基于时标排序的多版本技术</h5><p>数据项有多个版本，每个版本对应着不同的时标</p><ol><li>对于读操作，找到比读操作时标小的数据版本中时标最大的，</li><li>对于写操作，保证当前没有时标比自己大的读操作在进行</li></ol><h2 id="6、可靠性">6、可靠性</h2><h3 id="可靠性可用性概念">可靠性可用性概念</h3><p>可靠性：系统不出故障，正确性</p><p>可用性：能正常运行，能工作</p><h3 id="分布式可靠性协议的组成">分布式可靠性协议的组成</h3><img src="C:\Users\Ericwang\AppData\Roaming\Typora\typora-user-images\image-20231213115434684.png" alt="image-20231213115434684" style="zoom:67%;" /><h3 id="事务阻断">事务阻断</h3><p>某个站点上可以终结（提交或撤销）的子事务，由于 DDBS故障，而必须等待到故障恢复后，收到必要的信息才能结束的事务状态。处于阻断状态的事务不会释放占有的资源。</p><h3 id="三阶段提交协议">三阶段提交协议</h3><p>在两阶段提交协议基础上增加prepare-to-commit状态</p><h3 id="不一致性的检测与解决办法">不一致性的检测与解决办法</h3><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213115936381.png" alt="image-20231213115936381"></p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213115942178.png" alt="image-20231213115942178"></p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213115947445.png" alt="image-20231213115947445"></p><h2 id="7、分布式数据库与C-S模式">7、分布式数据库与C/S模式</h2><h5 id="C-S模式的定位">C/S模式的定位</h5><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212155544865.png" alt="image-20231212155544865"></p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212155616358.png" alt="image-20231212155616358"></p><h5 id="C-S模式的特点">C/S模式的特点</h5><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212155712279.png" alt="image-20231212155712279"></p><h5 id="C-S模式的优缺点">C/S模式的优缺点</h5><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212160537777.png" alt="image-20231212160537777"></p><h5 id="分布式数据与分布式访问">分布式数据与分布式访问</h5><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212160848495.png" alt="image-20231212160848495"></p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212161039830.png" alt="image-20231212161039830"></p><p><img src="C:%5CUsers%5CEricwang%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231212161604253.png" alt="image-20231212161604253"></p><h3 id="范式问题">范式问题</h3><h3 id=""></h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>深度学习环境搭建</title>
    <link href="/2024/04/16/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/04/16/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="显卡驱动安装">显卡驱动安装</h2><h3 id="1-查看自己机器显卡型号">1.查看自己机器显卡型号</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">lspci <span class="hljs-string">| grep -i nvidia</span><br></code></pre></td></tr></table></figure><p>注明：方框中[GeForce GTX 2080 Ti]就是型号</p><h3 id="2-到NVIDIA官网选择型号下载">2.到NVIDIA官网选择型号下载</h3><p>NVIDIA官网：</p><p><a href="https://www.nvidia.cn/Download/index.aspx">Official Drivers | NVIDIA</a></p><p>选择product series、product、OS。</p><p>得到.run执行文件</p><h3 id="3-删除可能存在的NVIDIA驱动">3. 删除可能存在的NVIDIA驱动</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> <span class="hljs-built_in">remove</span> --purge nvidia*<br></code></pre></td></tr></table></figure><h3 id="4-禁用原有开源显卡驱动">4. 禁用原有开源显卡驱动</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo <span class="hljs-keyword">vi</span> /etc/modprobe.d/blacklist-nouveau.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>vi使用不习惯可以用gedit</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo gedit <span class="hljs-regexp">/etc/m</span>odprobe.d/blacklist-nouveau.conf<br></code></pre></td></tr></table></figure><p>将下面的内容添加，能够将nouveau驱动拉黑</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">blacklist</span> nouveau<br><span class="hljs-attribute">options</span> nouveau modeset=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>保存后，执行以下命令更新改动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo update-initramfs -u</span><br></code></pre></td></tr></table></figure><p>重启电脑</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo reboot</span><br></code></pre></td></tr></table></figure><p><strong>此时重进会发现显示屏分辨率出了问题，调整不了，这是驱动被禁用的问题，不要慌，安装完后续驱动就会好了，就是不方便操作。</strong></p><p>验证nouveau驱动被禁用成功</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">lsmod <span class="hljs-string">| grep nouveau</span><br></code></pre></td></tr></table></figure><h3 id="5-关闭桌面系统">5. 关闭桌面系统</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">sudo service lightdm stop<br></code></pre></td></tr></table></figure><p>大部分用不上这一步</p><h3 id="6-安装驱动">6. 安装驱动</h3><p>进入下载.run文件的目录，首先需要修改.run文件的权限，不然直接./执行不了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">chmod</span> <span class="hljs-number">777</span> NVIDIA-Linux-x86_64-<span class="hljs-number">450</span>.<span class="hljs-number">80</span>.<span class="hljs-number">02</span>.run<br></code></pre></td></tr></table></figure><p>执行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 换成自己下载的文件名</span><br><span class="hljs-attribute">sudo</span> ./NVIDIA-Linux-x86_64-<span class="hljs-number">450</span>.<span class="hljs-number">80</span>.<span class="hljs-number">02</span>.run<br></code></pre></td></tr></table></figure><p>会出现以下提示，不用管，continue就行</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">The distribution-provided pre-install <span class="hljs-keyword">script</span> failed!  Are you sure you want <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span>?<br></code></pre></td></tr></table></figure><p>其他的都是默认选择，以下询问选择<strong>yes</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">Would you like <span class="hljs-keyword">to</span> run the nvidia-xconfig utility <span class="hljs-keyword">to</span> automatically <span class="hljs-keyword">update</span> your <span class="hljs-keyword">X</span> configuration <span class="hljs-keyword">file</span> <span class="hljs-keyword">so</span> that the<br>NVIDIA <span class="hljs-keyword">X</span> driver will <span class="hljs-keyword">be</span> used when you restart <span class="hljs-keyword">X</span>?  Any <span class="hljs-keyword">pre</span>-existing <span class="hljs-keyword">X</span> configuration <span class="hljs-keyword">file</span> will <span class="hljs-keyword">be</span> backed <span class="hljs-keyword">up</span>.<br></code></pre></td></tr></table></figure><h3 id="7-验证安装">7. 验证安装</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nvidia-smi</span><br></code></pre></td></tr></table></figure><p>可以看到显卡相关的信息</p><h2 id="CUDA安装">CUDA安装</h2><h3 id="1-官网下载cuda">1. 官网下载cuda</h3><p><a href="https://developer.nvidia.com/cuda-downloads">CUDA Toolkit 12.3 Update 2 Downloads | NVIDIA Developer</a></p><p>ubuntu版本选择</p><p>Architecture: x86_64，</p><p>Version: 20.04版本，</p><p>Installer Type: runfile[local]</p><p>根据官网底下给的命令行执行下载</p><h3 id="2-下载过程">2. 下载过程</h3><p>下载过程有以下提示：</p><p>输入<code>accept</code>接受协议</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">Do</span> you <span class="hljs-keyword">accept</span> the previously read EULA?<br><span class="hljs-keyword">accept</span>/decline/quit: <br></code></pre></td></tr></table></figure><p>是否安装显卡驱动，由于上面我们自己安装过了，所以这里选择输入<code>n</code>，这里遇到的是一排的选择，回车就表示取消。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">Install</span> <span class="hljs-variable">NVIDIA</span> <span class="hljs-variable">Accelerated</span> <span class="hljs-built_in">Graphics</span> <span class="hljs-variable">Driver</span> <span class="hljs-variable">for</span> <span class="hljs-variable">Linux</span><span class="hljs-operator">-</span><span class="hljs-type">x86_</span><span class="hljs-number">64</span> <span class="hljs-number">410.48</span><span class="hljs-operator">?</span><br><span class="hljs-punctuation">(</span><span class="hljs-variable">y</span><span class="hljs-punctuation">)</span><span class="hljs-variable">es</span><span class="hljs-operator">/</span><span class="hljs-punctuation">(</span><span class="hljs-variable">n</span><span class="hljs-punctuation">)</span><span class="hljs-variable">o</span><span class="hljs-operator">/</span><span class="hljs-punctuation">(</span><span class="hljs-variable">q</span><span class="hljs-punctuation">)</span><span class="hljs-variable">uit</span><span class="hljs-operator">:</span><br></code></pre></td></tr></table></figure><p>是否安装toolkit，输入<code>y</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">Install the CUDA <span class="hljs-number">10.0</span> Toolkit?<br>(y)es<span class="hljs-regexp">/(n)o/</span>(q)uit:<br></code></pre></td></tr></table></figure><p>输入toolkit安装目录，默认即可，按<code>enter</code></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Enter Toolkit <span class="hljs-keyword">Location</span><br> [ <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> /usr/<span class="hljs-keyword">local</span>/cuda<span class="hljs-number">-10.0</span> ]:<br></code></pre></td></tr></table></figure><p>是否安装cuda样例，如果有测试需求可以<code>y</code>，当然<code>n</code>问题也不大，选择y的话下一步会确认安装目录，直接enter即可</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">Install the CUDA <span class="hljs-number">10.0</span> Samples?<br>(y)es<span class="hljs-regexp">/(n)o/</span>(q)uit: <br></code></pre></td></tr></table></figure><h3 id="3-添加环境变量">3. 添加环境变量</h3><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi ~/.bashrc<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gedit ~/.bashrc<br></code></pre></td></tr></table></figure><p>在文件尾部追加以下内容</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">export <span class="hljs-title class_">PATH</span>=<span class="hljs-variable">$PATH</span><span class="hljs-symbol">:</span><span class="hljs-variable">$PATH</span><span class="hljs-symbol">:/usr/local/cuda/bin</span><br>export <span class="hljs-title class_">LD_LIBRARY_PATH</span>=<span class="hljs-variable">$LD_LIBRARY_PATH</span><span class="hljs-symbol">:/usr/local/cuda/lib64</span><br>export <span class="hljs-title class_">CUDA_HOME</span>=<span class="hljs-variable">$CUDA_HOME</span><span class="hljs-symbol">:/usr/local/cuda</span><br></code></pre></td></tr></table></figure><p>保存后执行以下使其生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h3 id="4-验证安装">4. 验证安装</h3><p>执行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">nvcc <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><h2 id="Cudnn安装">Cudnn安装</h2><h3 id="1-下载">1. 下载</h3><p><a href="https://developer.nvidia.com/cudnn">https://developer.nvidia.com/cudnn</a></p><p>选择cuDNN Library for Linux (x86)下载，得到.tgz.xz压缩文件</p><p>解压文件，会自动解压到cuda文件中</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">tar -xvf yourdocument</span><br></code></pre></td></tr></table></figure><p>执行如下操作将头文件和so文件拷贝到cuda目录下即完成安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意下面的cuda-12.3目录换成上面安装的版本号</span><br>sudo <span class="hljs-built_in">cp</span> cuda/include/cudnn.h /usr/local/cuda-12.3/include<br>sudo <span class="hljs-built_in">cp</span> cuda/lib64/libcudnn* /usr/local/cuda-12.3/lib64<br> <br><span class="hljs-comment"># 增加读取权限</span><br>sudo <span class="hljs-built_in">chmod</span> a+r /usr/local/cuda-12.3/include/cudnn.h <br>sudo <span class="hljs-built_in">chmod</span> a+r /usr/local/cuda-12.3/lib64/libcudnn*<br></code></pre></td></tr></table></figure><h3 id="2-完成以上操作可能出现NVIDIA-SMI失效">2. 完成以上操作可能出现NVIDIA-SMI失效</h3><p>报错，由于最近升级内核导致新内核无法启动驱动</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">NVIDIA-SMI has failed because <span class="hljs-keyword">it</span> couldn&#x27;t communicate <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> NVIDIA driver. Make sure <span class="hljs-keyword">that</span> <span class="hljs-keyword">the</span> latest NVIDIA driver <span class="hljs-keyword">is</span> installed <span class="hljs-keyword">and</span> <span class="hljs-built_in">running</span><br></code></pre></td></tr></table></figure><p>查看之前安装的nvidia驱动版本</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ls</span> /usr/src | grep nvidia<br> <br><span class="hljs-comment"># 得到如下输出</span><br><span class="hljs-attribute">nvidia</span>-srv-<span class="hljs-number">510</span>.<span class="hljs-number">47</span>.<span class="hljs-number">03</span><br></code></pre></td></tr></table></figure><p>使用dkms重新安装</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 有些机器需要安装dkms，如果已安装则忽略</span><br><span class="hljs-attribute">sudo</span> apt-get install dkms<br> <br><span class="hljs-comment"># 使用dkms重新编译</span><br><span class="hljs-comment"># 注意 -v 后面的版本号，就是第一步中 nvidia- 后面的内容，如果上面输出是 nvidia-510.47 ，那就得 -v 510.47</span><br><span class="hljs-attribute">sudo</span> dkms install -m nvidia -v srv-<span class="hljs-number">510</span>.<span class="hljs-number">47</span>.<span class="hljs-number">03</span><br></code></pre></td></tr></table></figure><p>重启电脑再执行nvidia-smi就恢复正常</p><h2 id="Anaconda安装">Anaconda安装</h2><h3 id="1-选择anaconda版本">1.选择anaconda版本</h3><p>由于目前（2024年1月）使用的ns-3版本使用的python版本为3.8.10，最新的anaconda为3.11不兼容会出问题，所以从历史版本中选择python版本低的，历史版本链接为</p><p><a href="https://docs.anaconda.com/free/anaconda/release-notes/#release-notes">Anaconda release notes — Anaconda documentation</a></p><p>选择anaconda2020.07，在以下链接找到对应版本下载</p><p><a href="https://repo.anaconda.com/archive/">Index of / (anaconda.com)</a></p><p>选择-linux-x86_64.sh下载</p><h3 id="2-安装anaconda">2.安装anaconda</h3><p>切换至<strong>root用户</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">su root</span><br></code></pre></td></tr></table></figure><p>安装anaconda</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sh</span> Anaconda2-<span class="hljs-number">2020</span>.<span class="hljs-number">07</span>-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><p>在安装的过程中会提示将anaconda3安装到哪个路径，默认会放在/root/anaconda3下，但是我们需要将anaconda安装到路径友好的目录，其他用户都能访问到，能运行的目录，因此选择</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">/usr/<span class="hljs-keyword">local</span>/anaconda3<br></code></pre></td></tr></table></figure><p>去掉其他用户对anaconda基础环境base的写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> o-w /usr/local/anaconda3/envs<br></code></pre></td></tr></table></figure><h3 id="3-给正常用户配置anaconda环境">3.给正常用户配置anaconda环境</h3><p>切换至<strong>正常用户</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">su ndn</span><br></code></pre></td></tr></table></figure><p>进入anaconda目录下激活当前系统用户使用anaconda的能力</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/anaconda3/bin<br></code></pre></td></tr></table></figure><p>激活</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">source <span class="hljs-built_in">activate</span><br></code></pre></td></tr></table></figure><p>此时会自动激活base环境，这时系统用户环境没有配置好，退出base环境</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">conda deactivate</span><br></code></pre></td></tr></table></figure><p>借助conda的init程序</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">conda <span class="hljs-keyword">init</span> bash<br></code></pre></td></tr></table></figure><p>此时.bashrc文件末尾会添加上conda initialize一段代码，刷新环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>此时会自动激活base环境，如果没有激活，关闭终端打开新的终端，输入</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda <span class="hljs-built_in">activate</span><br></code></pre></td></tr></table></figure><h3 id="4-创建虚拟环境">4.创建虚拟环境</h3><p>创建新的环境,–clone base 表示复制基础环境base。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">conda create -n wym(选择自己的昵称) --<span class="hljs-keyword">clone</span> <span class="hljs-title">base</span><br></code></pre></td></tr></table></figure><p>创建新环境，此时无法克隆base环境，但是能选择一些你需要的库的版本，其他的自行配置</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">conda</span> create -n wym python=<span class="hljs-number">3</span>.<span class="hljs-number">11</span> boost=<span class="hljs-number">1</span>.<span class="hljs-number">71</span><br></code></pre></td></tr></table></figure><p>显示环境列表，有哪些虚拟用户在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda <span class="hljs-built_in">env</span> list<br></code></pre></td></tr></table></figure><p>激活环境</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda <span class="hljs-built_in">activate</span> wym<br></code></pre></td></tr></table></figure><p>退出当前环境</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">conda deactivate</span><br></code></pre></td></tr></table></figure><p>删除环境</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">conda <span class="hljs-built_in">remove</span> -n wym <span class="hljs-comment">--all</span><br></code></pre></td></tr></table></figure><p>显示conda中库列表</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">conda list</span><br></code></pre></td></tr></table></figure><h2 id="Pytorch安装">Pytorch安装</h2><h3 id="1-了解对应的pytorch版本">1.了解对应的pytorch版本</h3><p>由于ns-3使用的环境python版本是3.8，并且cuda的版本是12.3，所以选择2.0.0版本，历史版本在以下链接</p><p><a href="https://pytorch.org/get-started/previous-versions/">https://pytorch.org/get-started/previous-versions/</a></p><h3 id="2-安装pytorch">2.安装pytorch</h3><p>进入历史版本选择会出现conda环境安装和wheel的pip安装，这里选择conda环境安装因为我们使用的是anaconda，不然在conda环境中找不到pytorch。</p><p>执行官网提供的命令即可。</p><h3 id="3-检验是否成功">3.检验是否成功</h3><p>进入python</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">python</span><br></code></pre></td></tr></table></figure><p>检验是否有torch</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> torch<br></code></pre></td></tr></table></figure><p>检验能否运行cuda</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">torch<span class="hljs-selector-class">.cuda</span><span class="hljs-selector-class">.is_available</span>()<br></code></pre></td></tr></table></figure><p>最后显示True表示成功。</p><h2 id="添加新的系统用户">添加新的系统用户</h2><p>在设置中用户</p><h3 id="1-解锁用户">1.解锁用户</h3><p>输入root密码</p><h3 id="2-添加用户">2.添加用户</h3><p>选择名称和填写密码</p><h3 id="3-进入anaconda目录下激活当前系统用户使用anaconda的能力">3.进入anaconda目录下激活当前系统用户使用anaconda的能力</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/anaconda3/bin<br></code></pre></td></tr></table></figure><h3 id="4-激活">4.激活</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">source <span class="hljs-built_in">activate</span><br></code></pre></td></tr></table></figure><h3 id="5-此时会自动激活base环境，这时系统用户环境没有配置好，退出base环境">5.此时会自动激活base环境，这时系统用户环境没有配置好，退出base环境</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">conda deactivate</span><br></code></pre></td></tr></table></figure><h3 id="6-借助conda的init程序">6.借助conda的init程序</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">conda <span class="hljs-keyword">init</span> bash<br></code></pre></td></tr></table></figure><h3 id="7-此时-bashrc文件末尾会添加上conda-initialize一段代码，刷新环境变量">7.此时.bashrc文件末尾会添加上conda initialize一段代码，刷新环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h3 id="8-此时会自动激活base环境，如果没有激活，关闭终端打开新的终端，输入">8.此时会自动激活base环境，如果没有激活，关闭终端打开新的终端，输入</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda <span class="hljs-built_in">activate</span><br></code></pre></td></tr></table></figure><p><strong>其他方式同上</strong></p><h2 id="测试是否完全成功">测试是否完全成功</h2><p>使用ndnSIMALL29测试</p><p>安装前需要保证在当前硬盘环境能够成功跑通才能进行后续的安装</p><p>1.在base环境测试能否跑通</p><p>2.在anaconda新建的虚拟环境测试能否跑通</p><p>3.在新建的系统用户中进入base测试能否跑通</p><p>4.在新建的系统用户中anaconda创建新的虚拟环境测试能否跑通</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./waf</span> configure <span class="hljs-params">--enable-examples</span> <span class="hljs-params">--enable-nlsr</span><br></code></pre></td></tr></table></figure><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-string">.</span><span class="hljs-comment">/waf</span> <span class="hljs-literal">--</span><span class="hljs-comment">run=&quot;nlsr</span><span class="hljs-literal">-</span><span class="hljs-comment">dqn</span> <span class="hljs-literal">--</span><span class="hljs-comment">withGym</span> <span class="hljs-literal">--</span><span class="hljs-comment">linkType=&#x27;AdHocWifi&#x27;</span> <span class="hljs-literal">--</span><span class="hljs-comment">simulationSpan=10&quot;</span><br></code></pre></td></tr></table></figure><p>–vis目前还不能使用，但是介于我们使用ssh连接至服务器，–vis可视化界面也不需要。</p><h2 id="参考教程">参考教程</h2><p>cuda部分</p><p><a href="https://blog.csdn.net/JineD/article/details/131201121">Ubuntu安装英伟达显卡驱动、Cuda和Cudnn_install nvidia accelerated graphics driver for lin-CSDN博客</a></p><p>anaconda部分</p><p><a href="https://blog.csdn.net/qcyfred/article/details/127946248">Python：Linux下安装Anaconda，可多人使用（内容几乎完整）_anaconda linux-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_52361699/article/details/123274200?ops_request_misc=%7B%22request%5Fid%22%3A%22170469848916800182141545%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=170469848916800182141545&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-123274200-null-null.142%5Ev99%5Epc_search_result_base1&amp;utm_term=anaconda%E7%89%88%E6%9C%AC&amp;spm=1018.2226.3001.4187">Anaconda版本与Python版本对应关系_anaconda对应的python版本-CSDN博客</a></p><p>pytorch部分</p><p><a href="https://blog.csdn.net/2302_76726543/article/details/134722054">https://blog.csdn.net/2302_76726543/article/details/134722054</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
